{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Footer.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/About.js","components/Logout.js","components/RedirectMain.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/alertMenu.js","components/testNav/index.js","components/LayoutBox/index.js","components/ZoomImage.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/SharePost.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/ChooseCategory/index.js","components/TestPopupInfo.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","components/CustomSelect.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleProvider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","res","console","log","user","catch","error","message","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","updateProfile","displayName","photoURL","Provider","Footer","id","style","position","left","bottom","width","marginLeft","pointerEvents","to","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","e","a","preventDefault","current","length","className","maxWidth","src","alt","onSubmit","margin","type","ref","required","disabled","Dashboard","testsCreated","setTestsCreated","testsResultsOnRec","setTestsResultsOnRec","testsAverageScore","setTestsAverageScore","userRating","setUserRating","db","firestore","window","location","assign","collection","where","uid","get","result","docs","map","doc","data","resArray","averageRes","i","parseFloat","score","toFixed","rate","marginTop","padding","onClick","height","float","maxHeight","textAlign","textDecoration","border","backgroundColor","borderRadius","whiteSpace","fontStyle","color","Login","display","justifyContent","alignItems","About","link","setLink","playState","setPlayState","visible","setVisible","marginBottom","minHeight","overflow","playing","controls","vis","sub","item","j","cursor","fontSize","outlineColor","marginRight","n","parseInt","currentTarget","handleVisible","subItem","Logout","logoutHandle","RedirectMain","PrivateRoute","Component","component","rest","render","props","ForgotPassword","setMessage","Cloudinary","imageSelected","setImageSelected","onChange","event","target","files","formData","FormData","append","Axios","post","response","parentElement","previousSibling","getImgUrl","pictureUpload","UpdateProfile","userNameRef","userURL","setUserURL","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","document","querySelector","childNodes","variant","AlertMenu","button1Color","setbutton1Color","button2Color","setbutton2Color","AllowScroll","onscroll","Object","values","keys","indexOf","styling","color1","color2","x","scrollX","y","scrollY","scrollTo","StopScroll","top","pageYOffset","zIndex","variantHead","heading","text","inputField","inputValue","onReturn","button1","button2","TestNav","timerInterval","stringTime","hours","minutes","seconds","displayTime","setDisplayTime","revealAlert","setRevealAlert","alertStyle","setAlertStyle","secondsLeft","h","m","s","stopTest","clearInterval","classList","add","querySelectorAll","forEach","userItem","onExit","questionNumberSet","questionNow","Number","isInteger","qNumber","navButton","remove","decision1","setInterval","textShadow","background","min","max","toString","right","backgroundImage","borderWidth","LayoutBox","answers","checked","checkedMarks","opacity","mode","minWidth","lineHeight","question","alignContent","flexWrap","answerOption","choice","checkingMulti","img","backgroundRepeat","backgroundSize","ZoomImage","visibility","closeModal","LayoutSimple","revealModal","setRevealModal","info","innerWidth","alignSelf","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","gradientValue","gradient","comma","status","layout","ch","GetResults","testRecords","setTestsRecords","resultsData","testId","querySnapshot","sort","b","time","fetchData","test","SharePost","socialMediaButton","FacebookShareButton","quote","title","hashtag","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","separator","WhatsappIcon","EmailShareButton","subject","body","media","image","EmailIcon","ResultsDisplay","testeeName","setTesteeName","testeeId","handleDont","timeInSeconds","t","split","userId","testName","description","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","answersSet","rights","concat","wrongs","positions","local","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollapsed","imgDisplay","setImgDisplay","handleNavCollapse","imgLink","ChooseCategory","backgroundPosition","TestPopupInfo","author","questionsTotal","onRes","GetTests","testRecordsDisplay","setTestsRecordsDisplay","revealInfo","setRevealInfo","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","categoriesLayout","setCategoriesLayout","setChecked","testFromDB","setTestFromDB","checkEditLocalTestVisible","setCheckEditLocalTestVisible","testInfo","setTestInfo","arrTemp","forPage","filter","editability","nameA","toUpperCase","nameB","fetchCategories","label","option","recordSet","chosenRec","tempArr","findIndex","c","index","getChoosenTests","flexDirection","recId","getAttribute","elementPos","objFound","authorName","handleDelete","positionY","clientY","handleHover","handleClick","evt","f","r","FileReader","onload","parse","onLocal","readAsText","alert","readSingleFile","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","l","getTestfromDB","GetText","answer","answerText","setAnswerText","setImgLink","checkBox","setCheckBox","sendBack","num","cor","borderColor","changeInput","changeImage","GetAnswers","setAnswers","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","isSelected","control","styles","singleValue","isDisabled","transition","CustomSelect","options","isMulti","closeMenuOnSelect","isSearchable","demoArr","emptyQ","defOptionArray","setTestName","testDescription","setTestDescription","authorId","testAuthor","setTestAuthor","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","reload","handleShow","slice","newTest","removeItem","set","newItem","element","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","download","upload","getGradientCSS","oldArray","record1","handleMove","handleUpdateQuestion","questCopy","handleInsertQuestion","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","exact","path","testPage","makeTest","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.960215f7.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(googleProvider).then((res) => {\r\n    console.log(res.user)\r\n  }).catch((error) => {\r\n    console.log(error.message)\r\n  })\r\n}\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  // setting up context to deal with firebase user collection database\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Footer() {\r\n    return (\r\n        <div id=\"footer\" style={{ position: 'absolute', left: 0, bottom: 0, width: '100%', marginLeft: \"10px\", pointerEvents: \"cursor\" }}\r\n        >\r\n            &copy; 2021 <Link to=\"/about\">Sergey Bolotnikov</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function Signup() {\r\n\r\n  // component to create new user using AuthContext\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const {currentUser, signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  if (currentUser) { return <Redirect to=\"/redirect\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    if (passwordRef.current.value.length < 6) {\r\n      return setError(\"Passwords should be at least 6 symbols long\")\r\n    }\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n      setToRoot(true);\r\n\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n\r\n          <h2 className=\"header1\">Sign Up\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n                    <input id=\"password-confirm\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordConfirmRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Already have an account? <Link className=\"links\" to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport firebase from \"../firebase\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nfunction Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser } = useAuth();\r\n  const [testsCreated, setTestsCreated] = useState(0);\r\n  const [testsResultsOnRec, setTestsResultsOnRec] = useState(0);\r\n  const [testsAverageScore, setTestsAverageScore] = useState(0);\r\n  const [userRating, setUserRating] = useState('BeginnerQuizer');\r\n  const db = firebase.firestore();\r\n\r\n\r\n  async function handleUpdate() {\r\n    setError(\"\")\r\n    window.location.assign(process.env.PUBLIC_URL + '/#/update-profile')\r\n  }\r\n  function fetchTestsCreatedData() {\r\n    // getting amount of tests created by user\r\n    db.collection(\"tests\").where(\"main.author\", \"==\", currentUser.uid).get()\r\n      .then(result => { setTestsCreated(result.docs.map(doc => ({ ...doc.data() })).length) })\r\n      .catch(e => { console.log('fail to get tests for user') })\r\n\r\n  }\r\n  function fetchTestsResultsData() {\r\n    // getting results of the user tests taken and calculating amount of tests and Average and based on score it gives status to user\r\n    db.collection(\"results\").where(\"userId\", \"==\", currentUser.uid).get()\r\n      .then(result => {\r\n        let resArray = result.docs.map(doc => ({ ...doc.data() }));\r\n        let averageRes = 0;\r\n        console.log(resArray)\r\n        for (let i = 0; i < resArray.length; i++) {\r\n          averageRes += parseFloat(resArray[i].result)\r\n        }\r\n        let score = 0;\r\n        if (resArray.length > 0) score = (averageRes / resArray.length).toFixed(3)\r\n        setTestsAverageScore(score);\r\n        setTestsResultsOnRec(resArray.length)\r\n        let rate = '';\r\n        if (score <= 100) rate = 'DiamondQuizer';\r\n        if (score <= 90) rate = 'GoldQuizer';\r\n        if (score <= 80) rate = 'SilverQuizer';\r\n        if (score <= 70) rate = 'BronzeQuizer';\r\n        if (score <= 60) rate = 'BeginnerQuizer';\r\n        setUserRating(rate)\r\n      }).catch(e => { console.log('fail to get user results') })\r\n\r\n  }\r\n  useEffect(() => {\r\n    fetchTestsCreatedData();\r\n    fetchTestsResultsData();\r\n  }, []);\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '6%' }}>\r\n        <div className='registeCard' style={{ padding: '.75em' }}>\r\n          <div className=\"closeTag\" onClick={(e) => { window.location.assign(process.env.PUBLIC_URL + '/#/') }}> <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" style={{ height: '1%' }} />\r\n            <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(2vw,20px)', height: 'max(2vw,20px)', float: 'right' }} />\r\n          </div>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <img style={{ maxWidth: '60%', maxHeight: '35vh', margin: '3% 15%' }} src={currentUser.photoURL > \"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"} alt=\"profile pic\" />\r\n          <h2 className=\"divStyle\" style={{ textAlign: 'center', width: '100%', maxWidth: '23ch', margin: 'auto' }}> <strong>@</strong>{currentUser.displayName}</h2>\r\n          <h6 className=\"divStyle\" style={{ textAlign: 'center', textDecoration: 'underline' }} >   {currentUser.email} </h6>\r\n        </div>\r\n        <table style={{ width: '97%', border: \"1px solid white\", backgroundColor: 'white', borderRadius: '10px', margin: \"3% auto\" }} >\r\n          <tbody >\r\n            <tr style={{ backgroundColor: 'white' }}>\r\n              <td ><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz created:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsCreated}</span></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'white' }}>\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz results on file:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsResultsOnRec}</span></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'white' }}>\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Average Quiz rated:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsAverageScore}%</span></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'transparent' }}>\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\", color: 'transparent' }}> quiz</div></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'lightgrey' }} >\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Your rate:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{userRating}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} onClick={handleUpdate}>\r\n          Update Profile\r\n            </button>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\nexport default Dashboard","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { signInWithGoogle } from \"../firebase\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function Login() {\r\n  // login page using the AuthContext trying to login and then redirect to root\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { currentUser, login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  if (currentUser) { return <Redirect to=\"/redirect\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Log In\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /> </h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n              Log In\r\n            </button>\r\n          </form>\r\n          <button className=\"testNav\" onClick={signInWithGoogle} style={{ display: 'flex', justifyContent: 'space-evenly', width: '100%', margin: '4% auto', alignItems: 'center', padding: '.25em' }}>\r\n            <img src={process.env.PUBLIC_URL + \"/icons/G_Logo.svg\"} style={{ width: '15%' }} alt=\"google icon\" />\r\n            <span> Continue with Google</span>\r\n          </button>\r\n          <div className=\"divStyle\">\r\n            <Link className=\"links\" to=\"/forgot-password\">Forgot Password?</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link className=\"links\" to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport ReactPlayer from 'react-player/lazy'\r\nimport \"./Login.scss\";\r\nexport default function About() {\r\n  var selectOptions = [\r\n    {\r\n      name: \"Test Taking\", value: \"0m13s\", vis: false,\r\n      sub: [\r\n        { name: \"Selecting Quiz to Take\", value: \"0m15s\" },\r\n        { name: \"Log In, Sign Up, Demo Test\", value: \"0m39s\" },\r\n        { name: \"Get Test Information\", value: \"0m59s\" },\r\n        { name: \"Start Test\", value: \"1m19s\" },\r\n        { name: \"Test Navigation\", value: \"1m33s\" },\r\n        { name: \"Ending Test\", value: \"2m14s\" },\r\n        { name: \"Saving & Sharing results\", value: \"2m35s\" }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Dashboard\", value: \"4m11s\", vis: false,\r\n      sub: [\r\n        { name: \"Update Profile\", value: \"4m34s\" },\r\n        { name: \"Update Avatar\", value: \"4m50s\" }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Managing Test\", value: \"5m48s\", vis: false,\r\n      sub: [\r\n        { name: \"Part 1: Choose Test to Edit\", value: \"6m07s\" },\r\n        { name: \"Load Test from HardDrive\", value: \"6m29s\" },\r\n        { name: \"Part 2: Test properties\", value: \"7m00s\" },\r\n        { name: \"Create category for your test\", value: \"7m37s\" },\r\n        { name: \"Setting Background\", value: \"8m05s\" },\r\n        { name: \"Setting background Gradient\", value: \"8m26s\" },\r\n        { name: \"Upload to Web button\", value: \"8m56s\" },\r\n        { name: \"Update on Web, Download, New buttons\", value: \"9m24s\" },\r\n      ]\r\n    },\r\n    {\r\n      name: \"Question Editing Tool\", value: \"9m58s\", vis: false,\r\n      sub: [\r\n        { name: \"Question design Form\", value: \"10m11s\" },\r\n        { name: \"Navigation\", value: \"10m53s\" },\r\n        { name: \"Different Layouts\", value: \"11m05s\" },\r\n        { name: \"Add, Delete Question\", value: \"11m42s\" },\r\n        { name: \"Move Question\", value: \"11m56s\" },\r\n        { name: \"Copy/Paste question\", value: \"12m14s\" },\r\n        { name: \"Copy/Paste answering options\", value: \"13m01s\" },\r\n        { name: \"Add, Erase answering options\", value: \"13m24s\" },\r\n        { name: \"Preview Question\", value: \"13m30s\" },\r\n      ]\r\n    },\r\n  ]\r\n  const [link, setLink] = useState('');\r\n  const [playState, setPlayState] = useState(false);\r\n  const [visible, setVisible] = useState(-1);\r\n  function handleVisible(e) {\r\n    let n = parseInt(e.currentTarget.id)\r\n    n!==visible?setVisible(n):setVisible(-1)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"800px\", marginTop:'4em', marginBottom:'2%' }}>\r\n        <div className='registeCard'>\r\n          <h4 className=\"header1\">Click on text to start video\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' />\r\n            </h4>\r\n          <div style={{margin:'3vh 0', minHeight:'50vh',overflow:'auto'}}>\r\n          <ReactPlayer url={link} playing={playState} controls width=\"100%\" />\r\n          </div>\r\n          {selectOptions.map((item, j) => {\r\n            return (\r\n              <div style={{ margin: '5px' }} key={\"option\" + j} >\r\n                <div key={\"option_name\" + j} style={{ width: '100%', height: '50px', borderRadius: '10px', display: 'flex', backgroundColor: '#554FA7' }}>\r\n                  <h5 style={{ cursor: \"pointer\", color: 'white', textAlign: \"center\", margin: 'auto' }} onClick={e => { setLink(`https://youtu.be/x116B9S0tX4#t=${item.value}`); setPlayState(true) }} >{item.name}</h5>\r\n                  <div style={{ fontSize: 'max(1.2vw,12px)', border: '1px solid transparent',cursor:'pointer', outlineColor: 'transparent',display:\"flex\",alignItems:\"center\", marginRight:'5px'}} key={\"right_eraseBtn_\" + j} id={j+'.links'} onClick={e => handleVisible(e)}>\r\n                    <img src={process.env.PUBLIC_URL +((j!==visible)?\"/icons/plus.svg\":\"/icons/close.svg\")} alt=\"open\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} />\r\n                  </div>\r\n                </div>\r\n                {(j===visible) && item.sub.map((subItem, i) => {\r\n                  return (\r\n                    <div key={\"subOption_name\" + i} style={{ cursor: \"pointer\" }}\r\n                      onClick={e => { setLink(`https://youtu.be/x116B9S0tX4#t=${subItem.value}`); setPlayState(true) }} >{subItem.name}\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n                }\r\n              </div>\r\n            )\r\n          }\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n//  Logout component\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction RedirectMain() {\r\n// redirect to root\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    );\r\n}\r\n\r\nexport default RedirectMain;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n// if no user then it redirect to log in component\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function ForgotPassword() {\r\n  // page handles forgot password case\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Password Reset\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          {message &&<label className='successStyle'>{message}</label> }\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Reset Password\r\n            </button>\r\n          </form>\r\n          <div className=\"divStyle\">\r\n            <Link to=\"/login\" className=\"links\" >Login</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link to=\"/signup\"className=\"links\" >Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    // handles cloudinary upload and providing the link for a parent component\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div style={{display:'flex', alignItems:'center', justifyContent:'start', marginLeft:'2%', maxWidth:'600px'}}>\r\n            <input type='file' style={{width:'48%'}} onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button testNav\" onClick={(e)=>{pictureUpload(e)}}>Upload Image</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function UpdateProfile() {\r\n  // updating component\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const [userURL, setUserURL] = useState(currentUser.photoURL);\r\n  const getImgUrl = (url) => {\r\n    // update URL of the profile picture\r\n    document.querySelector(\"#userURL\").childNodes[1].value = url;\r\n    setUserURL (url)\r\n    console.log(userURL)\r\n  }\r\n  function handleSubmit(e) {\r\n    // submitting profile updated information\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value !== currentUser.displayName) || (userURL !== currentUser.photoURL)) {\r\n      promises.push(updateUser(userNameRef.current.value, userURL))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  if (toRoot === true) { return <Redirect to=\"/dashboard\" /> }\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '5%' }}>\r\n        <div className='registeCard' >\r\n          <h2 className=\"header1\">Update Profile\r\n          {(userURL!=null) && <img src={userURL} alt=\"logo simple\" className='logo' />}</h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >User's Name (keep it shorter then 20 symbols please)\r\n                <input id=\"userName\" type=\"text\" ref={userNameRef} defaultValue={currentUser.displayName} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle' id=\"userURL\" >User's picture link\r\n                <input type=\"text\" onChange={(e)=>{setUserURL(e.target.value)}} defaultValue={currentUser.photoURL} />\r\n              <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\r\n            </label>\r\n            <label className='headerStyle'  >Email\r\n              <input id=\"email\" type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n              <input id=\"password\" type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n              <input id=\"password-confirm\" type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '2% auto' }} type=\"submit\">\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          <Link to=\"/dashboard\" className=\"links\" >Cancel</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React,{ useEffect, useState } from \"react\"\r\n// color schemas for different occasions \r\nvar variant = {\r\n  'danger': {\r\n    'color': '#721c24',\r\n    'backgroundColor': '#f8d7da',\r\n    'borderColor': '#f5c6cb'\r\n    \r\n  },\r\n  'success': {\r\n    'color': '#155724',\r\n    'backgroundColor': '#d4edda',\r\n    'borderColor': '#c3e6cb'\r\n   },\r\n   'secondary': {\r\n    'color': '#383d41',\r\n    'backgroundColor': '#e2e3e5',\r\n    'borderColor': '#d6d8db'\r\n  },\r\n  'warning': {\r\n    'color': '#856404',\r\n    'backgroundColor': '#fff3cd',\r\n    'borderColor': '#ffeeba'\r\n  },\r\n  'info': {\r\n    'color': '#0c5460',\r\n    'backgroundColor': '#d1ecf1',\r\n    'borderColor': '#bee5eb',\r\n  },\r\n  '': {},\r\n}\r\nexport default function AlertMenu(props) {\r\n  // main popup alert component\r\n  const [button1Color, setbutton1Color]=useState('');\r\n  const [button2Color, setbutton2Color]=useState('');\r\n  function StopScroll(){\r\n    // prevent scrolling\r\n    var x=window.scrollX;\r\n    var y=window.scrollY;\r\n    window.onscroll=function(){window.scrollTo(x, y);};\r\n  console.log(x, y)\r\n       \r\n}\r\nfunction AllowScroll(){\r\n  // when done release scroll\r\n  window.onscroll=function(){};\r\n}\r\n  useEffect(() => {\r\n    // setup buttons style on load \r\n    setbutton1Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color1)].color);\r\n    setbutton2Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color2)].color);\r\n    StopScroll();\r\n}, []);\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh',position:'absolute',top: window.pageYOffset,left:0, display:'flex', justifyContent:'center', alignItems:'center',zIndex:'1700', backgroundColor:'rgba(105,105,105, .7)' }} >\r\n      <div className='alertContainer'>\r\n        <label className='alertItemStyle' style={Object.values(variant)[Object.keys(variant).indexOf(props.styling.variantHead)]}>{props.styling.heading}</label>\r\n        <h5 className=\"alertItemStyle\">{props.styling.text}</h5>\r\n        {props.styling.inputField && <input id=\"inputField\" style={{ width: \"100%\", marginBottom: \"10px\" }} defaultValue={props.inputValue} />}\r\n        {(props.styling.color1!==\"\") && <button className='alertItemStyle' style={{backgroundColor:button1Color, color:'white'}} onClick={e => {AllowScroll(); props.onReturn(props.styling.button1, (props.styling.inputField ? document.querySelector(\"#inputField\").value : null)); }}>\r\n          {props.styling.button1}\r\n        </button>}\r\n        {(props.styling.color2!==\"\") &&<button className=\"alertItemStyle\" style={{backgroundColor:button2Color, color:'white'}} onClick={e => {AllowScroll(); props.onReturn(props.styling.button2) }}>\r\n          {props.styling.button2}\r\n        </button>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { Fragment, useState } from 'react';\nimport AlertMenu from '../alertMenu';\nfunction TestNav(props) {\n    // navigational component for running through questions of the specific test \n    var timerInterval\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\n    const onReturn = (decision1) => {\n        // if Finish test button clicked in Alert window it proceeds to end of the test function\n        setRevealAlert(false);\n        if (decision1 === \"Finish\") { \n           stopTest();\n        }\n    }\n    function StopScroll(){\n        // prevent scrolling on page\n        var x=window.scrollX;\n        var y=window.scrollY;\n        window.onscroll=function(){window.scrollTo(x, y);};\n      console.log(x, y)\n           \n    }\n    function timerDraw(event) {\n        // starting the , counting down seconds, and handling run-out-of-time exit  \n        let seconds = props.seconds;\n        let minutes = props.minutes;\n        let hours = props.hours;\n        StopScroll();\n        questionNumberSet('0');\n        event.preventDefault();\n        if ((seconds !== 0) || (minutes !== 0) || (hours !== 0)) {\n            timerInterval = setInterval(function () {\n                secondsLeft--;\n                if (seconds === 0) {\n                    seconds = 59;\n                }\n                else seconds--;\n                if (seconds === 59) {\n                    if (minutes === 0) {\n                        minutes = 59;\n                        hours--;\n                    } else minutes--;\n                }\n                setDisplayTime(stringTime(hours, minutes, seconds));\n                if ((secondsLeft === 0)) {\n                    clearInterval(timerInterval);\n                    document.querySelector(\".testNav\").classList.add('invisible');\n                    props.onExit(\"00:00:00\");\n                }\n\n            }, 1000);\n        }\n    };\n    function stringTime(h, m, s) {\n        // turning time to string to display\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\n    }\n    function stopTest() {\n// handles test finish: timer finish, hiding buttons of the navigation sending time left to the parent component(props.onExit)\n        clearInterval(timerInterval);\n        window.onscroll=function(){};\n        console.log('end')\n        document.querySelector(\".testNav\").classList.add('invisible');\n        let navButton = document.querySelectorAll(\".testNav\");\n        navButton.forEach(function (userItem) {\n            userItem.classList.add('invisible');\n        });\n        props.onExit(displayTime);\n    }\n    function questionNumberSet(n) {\n        // handles navigation through test next, previous shows specific question\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else {\n                    questionNow.value = 1;\n                    // if last question is reached it asked if you want to finish the test through the displaying specific alertMenu component \n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Would you like to finish the test?`,\n                        color1: \"danger\",\n                        button1: \"Finish\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                }\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                navButton = document.querySelectorAll(\".testNavLight\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    return (\n        <Fragment>\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <button className=\"testNav\" id=\"startNav\" style={{ position: 'absolute', top: '44vh', left: \"43vw\", zIndex: '200' }}\n                onClick={timerDraw}>Start</button>\n            <button className=\"testNav invisible\" style={{ position: \"absolute\", top: '10vh', left: 0,textShadow:\"1px 1px black\", background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <label className=\"testNav invisible\" style={{position: \"absolute\",top:'0',left:'0', margin:'1.25vh 1vw', fontSize: 'calc(10px + 1vw)', zIndex: 1500 }} >\n                <input className=\"testNavLight invisible\" style={{ width: '3ch', fontSize: 'calc(10px + 1vw)' }} type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n                of {props.qNumber}</label>\n            <button className=\"testNav invisible \" style={{ position: \"absolute\", top: '10vh', right: 0,textShadow:\"1px 1px black\", background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n\n            <label className=\"testNav invisible\" style={{ position: \"absolute\", background: \"transparent\", top: 0, left: '38vw', width: '8ch', zIndex: 1500, textShadow:\"1px 1px black\" }}>{displayTime}</label> \n            <button className=\"testNav invisible\" id=\"finishBtn\"  style={{ position: \"absolute\", top: 0, right: 0,marginTop:'1.25vh', backgroundImage:`url(${process.env.PUBLIC_URL + \"/icons/finish.svg\"})`,width: \"9vh\", height: \"3vh\", borderWidth: '0px',borderRadius:'5px', zIndex: 1500 }}\n                onClick={stopTest}></button>\n\n        </Fragment>\n    );\n}\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst LayoutBox = props => {\n// component creates layout called Box and display current question in style of this layout\n\n    useEffect(() => {\n        // drawing the selected options of anwers inputed by user\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n    },[props.answers]);\n    function checkingMulti(e) {\n        // on Change sending the new result back to parent\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n            <div id='questionContainerBox' style={{ opacity: props.vis}}>\n                <section className=\"questionSection\">\n                    {/* using the Textfit to make entered text fit into the provided space */}\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color:'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin:'auto',\n                            textAlign:\"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n              \n                </section>\n                <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-between',alignContent:'center', flexWrap: 'wrap', width: '99%', overflow:'visible' }}>\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{width:'49%',minHeight:'22%', maxHeight: '200px', maxWidth:'200px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Box\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n            </div>\n        </Fragment>\n    );\n}\nexport default LayoutBox;","import React from \"react\"\r\n\r\nexport default function ZoomImage(props) {\r\n// for simple layout it allows to zoom in to picture in the question displayed\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh', position: 'absolute', top: window.pageYOffset, left: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: '1900', backgroundColor: 'rgba(105,105,105, .7)' }} >\r\n      <div style={{ margin: 'auto', maxWidth: '600px', border: '1px solid gray', borderRadius: '.25rem', padding: '2%', display:'flex' }}>    \r\n          <img src={props.img} style={{ width: '100%', visibility: 'visible' }} alt='zooming in' />\r\n          <div className=\"closeTag\" style={{ position: 'relative', top: '2%', right: '4%', visibility: 'visible' }} onClick={(e) =>{ props.closeModal(true)}}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\nimport Textfit from 'react-textfit';\nimport ZoomImage from '../ZoomImage';\nimport \"./style.css\";\nfunction LayoutSimple(props) {\n    // component creates layout called Simple and display current question in style of this layout\n    const [revealModal, setRevealModal] = useState(false);\n    useEffect(() => {\n        // drawing the selected options of anwers inputed by user\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n        \n    }, [props.answers]);\n    function checkingMulti(e) {\n        // on Change sending the new result back to parent\n        if (props.info.correct === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <div id='questionContainerSimple' style={{ opacity: props.vis}}>\n\n\n\n            {revealModal && <ZoomImage img={props.info.img} closeModal={(e)=>{setRevealModal(false)}} />}\n            <section className=\"questionSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\n                <div style={{width:'100%',display: 'flex',justifyContent:'center', alignItems: 'center', height: window.innerWidth < 700 ? '30%' : '70%' }}>\n                    <img src={props.info.img} style={{ height:'100%', alignSelf:'center'}} alt={props.info.img} onClick={(e)=>{setRevealModal(true)}} />\n                </div>\n                <div style={{width:'100%', height: window.innerWidth < 700 ? '70%' : '30%' }}>\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color: 'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin: 'auto',\n                            textAlign: \"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n                </div>\n            </section>\n            <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'visible' }}>\n                {props.answers.map((answerOption, j) => {\n                    return (\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256} mode='multi'\n                                    min={10}\n                                    style={{\n                                        minHeight: \"90%\",\n                                        maxHeight: \"90%\",\n                                        minWidth: \"90%\",\n                                        maxWidth: \"90%\",\n                                        lineHeight: 1,\n                                        textAlign: \"center\",\n                                        textShadow: '1px 1px 2px black'\n                                    }}>{answerOption.text}</Textfit>\n                            </div>\n                        </label>\n                    )\n                })}\n            </section>\n        </div>\n    );\n}\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\nimport LayoutBox from '../../components/LayoutBox';\nimport LayoutSimple from '../../components/LayoutSimple';\nconst QuestionDisplay = props => {\n    const [backgroundVal,setBackgroundVal]= useState('')\n    useEffect(() => {\n        // setting up background\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\n        setBackgroundVal(gradientValue+comma+backgroundValue);\n    }, []);\n    return (\n        // displaying specific layout based on question \n            <div id='questionDisplayContainer' className={`${(props.status==='test') ? \"noScroll\" : \"\"}`} style={{backgroundImage:backgroundVal}}>\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}    \n            </div>\n    );\n}\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nfunction GetResults(props) {\n    // get test result of the test, sort it, display it\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    useEffect(() => {\n        let resultsData = []\n        const fetchData = async () => {\n\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    resultsData.push(doc.data());\n                });\n                resultsData.sort(function (a, b) {\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\n                });\n                setTestsRecords(resultsData);\n            });\n            // another way to get results\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\n        };\n        fetchData();\n\n    }, [])\n\n    return (\n        <div style={{ width: '60vw', maxHeight: '20vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center', borderRadius: \"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n            <table style={{ margin: 'auto' }} >\n                <tr>\n                    <th>Name</th>\n                    <th>Result</th>\n                    <th>Time Left</th>\n                </tr>\n                <tbody>\n                    {testRecords && testRecords.map((test, j) => {\n                        return (\n                            <tr key={j}>\n                                <td key={\"name\" + j}>{test.displayName}</td>\n                                <td key={\"result\" + j}>{test.result}</td>\n                                <td key={\"time\" + j}>{test.time}</td>\n                            </tr>\n\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default GetResults;","import React from \"react\";\r\nimport { FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon, WhatsappShareButton, WhatsappIcon, EmailShareButton, EmailIcon} from \"react-share\";\r\nfunction SharePost(props) {\r\n    // sets buttons to share test information on networks\r\n    var socialMediaButton = {\r\n        \"&:hover > svg\": {\r\n            height: \"50px !important\",\r\n            width: \"50px !important\",\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <FacebookShareButton\r\n                url={props.url}\r\n                quote={props.title+'\\n'+props.quote}\r\n                hashtag={props.hashtag}\r\n                className={socialMediaButton}\r\n            >\r\n                <FacebookIcon size={36} round={true}/>\r\n            </FacebookShareButton>\r\n            <TwitterShareButton\r\n                url={props.url}\r\n                title={props.title+'\\n'+props.quote}\r\n                hashtag={props.hashtag}\r\n                className={socialMediaButton}\r\n            >\r\n                <TwitterIcon size={36} round={true}/>\r\n            </TwitterShareButton>\r\n            <WhatsappShareButton\r\n                url={props.url}\r\n                title={props.title+'\\n'+props.quote}\r\n                separator=\":: \"\r\n                className={socialMediaButton}\r\n            >\r\n                <WhatsappIcon size={36} round={true}/>\r\n            </WhatsappShareButton>\r\n\r\n            <EmailShareButton\r\n                url={props.url}\r\n                subject={props.title}\r\n                body={props.quote+'\\n'}\r\n                media={props.image}\r\n                className={socialMediaButton}>\r\n                <EmailIcon size={36} round={true} />\r\n            </EmailShareButton>\r\n        </div>\r\n    )\r\n}\r\nexport default SharePost;","import React, { useState, useRef } from 'react';\nimport firebase from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport GetResults from \"../getResults\";\nimport SharePost from '../SharePost';\nconst ResultsDisplay = props => {\n    // component to display results of the test and top results of other users\n    const { currentUser } = useAuth()\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\n    function handleSave() {\n        // function to save results in the database\n        const db = firebase.firestore();\n        db.collection(\"results\").add({\n            testId: props.testId,\n            displayName: testeeName,\n            userId: testeeId.current,\n            result: props.rate,\n            time: timeInSeconds(props.time)\n        }).then(result => { handleDont() })\n            .catch(e => { console.log('fail to record result') })\n\n    }\n    function handleDont() {\n        // do not save results and reload\n        window.location.assign(process.env.PUBLIC_URL + '/#/redirect');\n        console.log(\"redirect to /\");\n    }\n    function timeInSeconds(t) {\n        // get amount of time left in seconds\n        let time = t.split(':');\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\n    }\n    return (\n\n        <div style={{\n            display: 'flex', flexWrap: 'wrap', width: '100%',marginTop:'15%', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '1px 1px #f5d142',\n            backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))', backgroundSize: '100% 100%'\n        }}>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\n            {/* component that dislay results of others */}\n            {props.testId.length > 0 && <GetResults testId={props.testId} />}\n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\n            <div style={{ width: '60vw', maxHeight: '20vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center', borderRadius: \"10px\" }}>\n                <table style={{ margin: 'auto' }} >\n                    <tr>\n                        <th>Question</th>\n                        <th>Result</th>\n                    </tr>\n\n                    {props.res.map((res, j) => {\n                        return (\n                            <tr key={\"n\" + j}>\n                                <td key={\"num\" + j} >{j + 1}</td>\n                                <td key={\"correct\" + j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            </div>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\n\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\n            </label>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</button>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</button>}\n            <div style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\n                {props.testId.length <= 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</button>}\n            </div>\n            {props.testId.length > 0 && <>\n                <h3 style={{ width: '100%', textAlign: 'center' }}>To share results click below</h3>\n                <SharePost title={`I just complete the ${props.testName} at Quiz Land site`} url={'https://sbolotnikov.github.io/test-editor/#/taketest/' + props.testId} quote={`I got ${props.rate}% correct with ${timeInSeconds(props.time)} seconds left. \\n Could you beat me? \\n Click on the link below. Good luck! \\n`}\n                    hashtag={'#QuizLand '} image={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} description={'My score was ... And ... seconds left. Could you beat me?'} />\n            </>\n            }\n\n\n        </div>\n    );\n}\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\nimport TestNav from '../testNav';\nimport QuestionDisplay from '../QuestionDisplay';\nimport ResultsDisplay from '../ResultsDisplay';\nimport \"./style.css\";\n\nfunction TestRun(props) {\n  // main test running component. It get the test, generate test, displays navigation(TestNav) and individual questions(QuestionDisplay), and results(ResultsDisplay) in the end, using specific components \n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\n  var testBackground = props.test.main.background;\n  var quizMain = props.test.test;\n  var test = [];\n  var choiceSet = [];\n  const [displayQ, setDisplayQ] = useState(0);\n  const [resultTime, setResultTime] = useState('');\n  const [choices, setChoices] = useState([]);\n  const [results, setResults] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [visible, setVisible] = useState(0);\n  const [testGenerated, setTestGenerated] = useState('');\n  function randomizer(arr) {\n//  taking question array and randomize the order of options inside\n    let testArray = [];\n    let answerCount = arr.length;\n    let positionN = 0;\n    for (let i = 0; i < answerCount; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n\n    }\n    return testArray\n  }\n\n  function randomChoice(arr, n) {\n    // choosing n random positions from array\n\n    let testArray = [];\n    let positionN = 0;\n    for (let i = 0; i < n; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n    }\n    return testArray\n  }\n  function handleChoices(ch) {\n    // saving user responses to specific question to answers array\n    let localChoices = choices;\n    localChoices.splice(displayQ, 1, ch);\n    console.log(localChoices);\n    setChoices(localChoices);\n\n  }\n  function handleChangeQuestion(q) {\n    // setting another question\n    if (q > 0) { setDisplayQ(q - 1) }\n    else {\n      setDisplayQ(q);\n      setVisible(1);\n\n    }\n  }\n  function correctAnswers() {\n    // setting the array of correct answers to specific generated test\n    let arr = [];\n    let arrSmall = [];\n    for (let i = 0; i < testGenerated.length; i++) {\n      arrSmall = [];\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\n      }\n      arr.push(arrSmall)\n    }\n    return arr\n  }\n  function handleQuizEnd(t) {\n    // finishing quiz by compare user choices with array of correct answers, getting percentage of the right answers and time left and setting the state with these parameters\n    let arr = [];\n    let n = 0;\n    console.log(t);\n    let correctArr = correctAnswers();\n    setVisible(0);\n    for (let i = 0; i < correctArr.length; i++) {\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\n      if (arr[i] === true) n += 1\n    }\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\n    setRating(((n / correctArr.length * 100).toFixed(2)));\n    setResults(arr);\n    setResultTime(t);\n    console.log(results)\n  }\n\n  useEffect(() => {\n    // gererating the random answers array for the test and randomize their positions. Generate test before it send to display and saving it to state\n    console.log(props.test.id)\n    let answersSet = [];\n    for (let i = 0; i < quizMain.length; i++) {\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\n      answersSet = randomizer(answersSet);\n\n      test.push({\n        \"info\": quizMain[i].info,\n        \"question\": quizMain[i].question,\n        \"answers\": answersSet,\n      })\n      choiceSet.splice(0, 0, [])\n\n    }\n    setChoices(choiceSet);\n    setTestGenerated(test);\n  }, []);\n useEffect(()=>{\n  //  if results are finalise displays main navigation bar, otherwise hide it\n  (results.length > 0) ? document.querySelector(\"nav.navbar\").style.display = 'flex' :document.querySelector(\"nav.navbar\").style.display = 'none';\n },[results]);\n\n\n  return (\n    <>\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testName={props.test.main.name} testId={props.local?\"\":props.test.id} />}\n      {testGenerated && results.length <= 0 && \n      <div  style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\n      <TestNav  qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\n      </div>\n      }\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient} status={\"test\"}  info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\n    </>\n  )\n}\n\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\nimport firebase from \"../firebase\";\nimport { useParams } from 'react-router-dom'\nimport TestRun from './TestRun'\nexport default function DirectTestPage() {\n  // page that run test by id. It gets test from the db and runs test\n  const [test, setTest] = useState({});\n  const [loading, setLoading] = useState(false)\n  const db = firebase.firestore();\n  let { id } = useParams();\n  useEffect(() => {\n    db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\n      setTest({ ...querySnapshot.data(), id: id });\n      setLoading(true);\n    })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [])\n  return (\n    <>\n      {loading && <TestRun test={test} local={false} />}\n    </>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport  \"./Nav.scss\";\nfunction Nav(props) {\n    // main Nav\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\n    const { currentUser } = useAuth();\n    const [imgDisplay, setImgDisplay] = useState('');\n    \n    function handleNavCollapse() {\n        setIsNavCollapsed(!isNavCollapsed)\n    }\n    useEffect(() => {\n        // based on the user it set the profile picture\n        let imgLink =  process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\n        else{\n            setImgDisplay(imgLink)\n        }\n        \n    }, [currentUser]);\n    useEffect(()=>{\n        if(window.innerWidth<1000){\n        if (isNavCollapsed){\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"block\";\n        }\n    }\n\n    },[isNavCollapsed]);\n    useEffect(()=>{\n        if (window.innerWidth>=1000){\n            document.querySelector(\"#navbarNav\").style.display=\"flex\";\n            document.querySelector(\"#navbarNav\").style.justifyContent=\"center\";\n            document.querySelector(\"#navbarNav\").style.width=\"83%\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n       \n\n    },[window.innerWidth]);\n\n    return (\n        <nav className=\"navbar\" >\n            \n            {window.innerWidth<1000 ? <Link to=\"/dashboard\"><img className=\"member-photo\" src={imgDisplay} alt=\"avatar\"/></Link>\n             :<Link to=\"/\" className=\"navHeader\"> <img src={ process.env.PUBLIC_URL+\"/icons/logoName.svg\"} alt=\"close\" style={{width:'1.2em',height:'1.5em'}}/></Link> }\n\t\t\t{window.innerWidth<1000 ? <Link to=\"/\" className=\"navHeader\"> \n            Quiz Land</Link> : null}\n            {window.innerWidth<1000 ? <span id=\"navbar-toggler\"  onClick={handleNavCollapse}>\n                <div style={{ width: '1em', height: '1em',float:'center' }}>\n                   {isNavCollapsed ? \n                     <img src={ process.env.PUBLIC_URL+\"/icons/burger.svg\"} alt=\"open\" /> :\n                    <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" />}\n                </div>\n            </span>: null}\n            \n                <ul id=\"navbarNav\">\n\n\n                   {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Log In\n                        </Link>\n\n                    </li>}\n                    {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Sign Up\n                    </Link>\n\n                    </li>}\n\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Take tests\n                    </Link>\n                    </li>\n                   {  currentUser && <li className=\"nav-item\">\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Manage tests\n                    </Link>\n                    </li>}\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            About\n                    </Link>\n                    </li>\n                    {  currentUser && <li className=\"nav-item\">\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollapse()} >\n                            Logout\n                    </Link>\n                    </li>}\n                </ul>\n            \n\n            {window.innerWidth<1000 ? null: <Link to=\"/dashboard\">\n               <img className=\"member-photo\"  src={imgDisplay} alt=\"member avatar\"/>\n            </Link>}\n        </nav>\n    );\n}\n\nexport default Nav;","import React, { Fragment, useEffect } from 'react';\nimport \"./style.scss\";\nconst ChooseCategory = props => {\n// component getting the chose of single and multiple choice\n\n    useEffect(() => {\n        // Selecting chosen categories on start\n        for (let i = 0; i <props.answers.length; i++) {\n            document.querySelector(\"#category_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#category_\" + i).checked = true;\n        }\n        console.log(props.answers)\n    },[]);\n    function checkingMulti(e) {\n        // on click if it is a single choice it remove previously marked category and mark new choice\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#category_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        // then it gets an array of choosen categories and thru props.onChange push it up to parent\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#category_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n                <section className=\"categoriesSection\" >\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelCat\" + j} style={{width:'47%',maxHeight:'150px', maxWidth:'180px', margin:'5px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputCat\" + j} id={\"category_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '25% 25%',backgroundPosition: 'right top' }}>\n                                    <div className=\"tickmark\" key={\"divCat\" + j}> </div>\n                                    <div className=\"name2\" key={\"div2Cat\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n        </Fragment>\n    );\n}\nexport default ChooseCategory;","import React from \"react\"\r\nexport default function TestPopupInfo(props) {\r\n    // display information about test in modal format\r\n    return (\r\n        <div style={{ width: '100vw', height: '100vh', position: 'absolute', top: window.pageYOffset, left: 0, display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n            <div className='alertContainer'>\r\n                <h3 className=\"alertItemStyle\"><strong>{props.test.name}</strong></h3>\r\n                <p className=\"alertItemStyle\"><strong>Author:</strong> {props.test.author}</p>\r\n                <p className=\"alertItemStyle\"><strong>Description:</strong> {props.test.description}</p>\r\n                <p className=\"alertItemStyle\"><strong>Question amount:</strong> {props.test.questionsTotal}</p>\r\n                <button className=\"alertItemStyle\" style={{ backgroundColor: '#d1ecf1', color: '#0c5460' }} onClick={e => {\r\n                    console.log('click'); props.onRes('')\r\n                }}>\r\n                    Close\r\n        </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport ChooseCategory from \"../components/ChooseCategory\";\nimport TestPopupInfo from \"../components/TestPopupInfo\"\nimport { Link} from \"react-router-dom\"\nfunction GetTests(props) {\n    // get test information, display it, and send it to parent (makeTest or testPage)\n    const db = firebase.firestore();\n    const { currentUser } = useAuth();\n    const [testRecords, setTestsRecords] = useState([]);\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [revealInfo, setRevealInfo] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [categories, setCategories] = useState([]);\n    const [categoriesLayout, setCategoriesLayout] = useState([]);\n    const [checked, setChecked] = useState([]);\n    const [testFromDB, setTestFromDB] = useState({});\n    const [checkEditLocalTestVisible, setCheckEditLocalTestVisible] = useState(false);\n    const [testInfo, setTestInfo] = useState({});\n    const onReturn = (decision1) => {\n        // if Delete button is clicked in makeTest it delete test. If Proceed button clicked it send test to apropreate parent \n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('tests').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    props.reloadNeeded(true);\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n        if (decision1 === \"Proceed\") {\n            props.onChange(testFromDB);\n            props.onLocal(false);\n        }\n    }\n    function handleDelete(e) {\n        // handles delete button click and confirm by revealing the AlertMenu\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\n        let objFound = testRecords[elementPos];\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleHover(t) {\n        // on hover over test name it gather info about the test and reveal modal like panel with test info \n        let test = testRecords.filter(item => item.id === t.target.getAttribute(\"value\"))[0];\n        setTestInfo({\n            author: test.main.authorName,\n            description: test.main.description,\n            name: test.main.name,\n            questionsTotal: test.test.length,\n            positionY: t.clientY + 5\n        })\n        setRevealInfo(true);\n\n    }\n    function handleClick(test) {\n        // on clicking Edit test button it reveals the AlertMenu to confirm that information was saved and set test object \n        if (props.forPage === 'create') {\n            setAlertStyle({\n                variantHead: \"danger\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n            setRevealAlert(true);\n            setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0])\n        } else { props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0]) }\n    }\n    const fetchData = async () => {\n        // gather test information from db, sort it, set state to display it\n        let arrTemp = [];\n        const data = await db.collection(\"tests\").get();\n        if (props.forPage === 'create')\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\n        else\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setTestsRecords(arrTemp);\n        setTestsRecordsDisplay(arrTemp);\n    };\n    const fetchCategories = async () => {\n// getting categories information, sorting it and setting it in the state to show it\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setCategories(arrTemp);\n        arrTemp = arrTemp.map(option => { return ({ 'text': option.value, img: process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\" }) });\n        console.log(arrTemp)\n        setCategoriesLayout(arrTemp);\n    };\n    function getChoosenTests(ch) {   \n        // set selected categories state to filter test results accordingly to choosen categoriesn        setChecked(ch);\n        (ch.length > 0) ? setSelectedOption(categories.filter((n, j) => ch.indexOf(j) > -1)) : setSelectedOption(categories)\n    }\n    function readSingleFile(evt) {\n        // getting test information for Editing from local file and confirming that previous info is saved by displaying AlertMenu \n        var f = evt.target.files[0];\n        if (f) {\n            var r = new FileReader();\n            r.onload = function (e) {\n                setTestFromDB(JSON.parse(e.target.result));\n                if (props.forPage === 'create') {\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                        color1: \"danger\",\n                        button1: \"Proceed\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                } else {\n                    props.onChange(JSON.parse(e.target.result));\n                    props.onLocal(true);\n                }\n                // setLocalTest(true)\n            }\n            r.readAsText(f);\n\n        } else {\n            alert(\"Failed to load file\");\n        }\n    }\n    useEffect(() => {\n        // fetching original data\n        fetchCategories();\n        fetchData();\n    }, []);\n    useEffect(() => {\n        // fetching data and displaying tests accordingly selected categories\n        let recordSet = testRecords;\n        let chosenRec = [];\n        console.log(selectedOption);\n        if (selectedOption) {\n            for (let i = 0; i < selectedOption.length; i++) {\n                let tempArr = [];\n                for (let j = 0; j < recordSet.length; j++) {\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\n                }\n                chosenRec = chosenRec.concat(tempArr);\n            }\n        }\n        // exclude duplicates in Array  \n        chosenRec = chosenRec.filter((c, index) => {\n            return chosenRec.map(x => x.id).indexOf(c.id) === index;\n        });\n        setTestsRecordsDisplay(chosenRec);\n    }, [selectedOption])\n    return (\n        <div style={{ width: '100%', maxWidth: \"600px\", height: \"52vh\", margin: '6em 0 2em 0' }}>\n            {revealInfo && <TestPopupInfo test={testInfo} onRes={e => {\n                setRevealInfo(false); console.log('close')\n            }\n            } />}\n            {(props.forPage === 'test') && (currentUser) && <button className=\"testNav\" style={{ width: '100%', margin:0}} onClick={e=>{ window.location.assign(process.env.PUBLIC_URL + '/#/create'); }}>\n                Create New test\n            </button>}\n            <p className=\"testNav\" style={{backgroundColor:'transparent', textAlign:'center'}}> CHOOSE TEST TO {(props.forPage === 'test')? 'TAKE':'MANAGE'}</p>\n            {categoriesLayout &&\n                <ChooseCategory type={categoriesLayout.length} answers={categoriesLayout} checkedMarks={checked} onChange={(ch) => { getChoosenTests(ch) }} />\n            }\n            <p className=\"testNav\" style={{backgroundColor:'transparent', textAlign:'center'}}>DISCOVER TESTS</p>\n            {testRecordsDisplay && <div style={{ height: '35%', overflow: 'auto', margin: '0' }}>\n            \n                <table style={{ width: '100%' }} >\n                   \n                    <tbody>\n                        {testRecordsDisplay.map((test, j) => {\n                            return (\n                                <tr key={\"divTests\" + j} > \n                                        {(props.forPage === 'create') &&\n                                           <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: '#721c24', margin: '4%', display: 'flex', flexDirection: \"column\", alignItems: 'center' }} key={\"eraseBtnTests\" + j} value={test.id} onClick={e => handleDelete(e)}>Del <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(.9vw,10px)', height: 'max(.9vw,10px)' }} /></button></td>\n                                        }                                  \n                                    <td style={{ backgroundColor: 'white', borderRadius: '5px' }}><div key={\"textTests\" + j} className='testText' value={test.id} onClick={e => handleHover(e)} style={{ cursor: \"pointer\", whiteSpace: 'wrap', textAlign: 'center', border: 0, width: \"100%\" }}>{test.main.name} <span value={test.id} style={{ fontStyle: 'oblique', color: '#554FA7' }}>@{test.main.authorName}</span></div></td>\n                                    <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: 'white', color: '#554FA7'}} key={\"playBtnTests\" + j} value={test.id} onClick={e => handleClick(e)}><img src={(props.forPage === 'create') ? process.env.PUBLIC_URL + \"/icons/EditIcon.svg\" : process.env.PUBLIC_URL + \"/icons/Play.svg\"} value={test.id} alt={(props.forPage === 'create') ? \"Edit\" : \"Play\"} style={{ width: 'max(3.5vw,25px)', height: 'max(3.5vw,25px)' }} /></button></td>\n                                    {/* button text if needed <strong>{(props.forPage === 'create') ? 'Edit' : 'Play'}</strong> */}\n                                </tr>\n                            )\n                        }\n                        )}\n                    </tbody>\n                </table>\n            </div>}\n            {(props.forPage === 'create') && <label >\n                <input type=\"checkbox\" id=\"checkEditLocalTest\" style={{ margin: '5% 2% 0 2%' }} onChange={e => setCheckEditLocalTestVisible(document.querySelector(\"#checkEditLocalTest\").checked)} />\n              Load local test from your disk\n              \n            { checkEditLocalTestVisible && <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />}\n            </label>}\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {(props.forPage === 'test') && <div className=\"divStyle\">\n            Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\n          </div>}\n        </div>\n    );\n}\nexport default GetTests;","import React, { useState } from 'react';\nimport TestRun from '../../components/TestRun';\nimport GetTests from '../../components/getTests';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Footer from \"../../components/Footer\";\nimport \"./style.css\";\n\n\nfunction ToRenderEverything() {\n// main page that runs tests \n  const [testLoad, setTestLoad] = useState(false);\n  const [localTest, setLocalTest] = useState(false);\n  const { currentUser } = useAuth()\n\n  function getTestfromDB(n) {\n    // sets test to run taken from the GetTests component. Test run by the TestRun component\n    console.log(n)\n    setTestLoad(n);\n  }\n  return (\n    <>\n    <div className=\"testContainer\">\n      {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onLocal={l => setLocalTest(l)} onChange={n => getTestfromDB(n)} /> }\n      {testLoad && <TestRun test={testLoad} local={localTest} />}\n      {!testLoad && <Footer />}\n    </div>\n    </>\n  )\n}\n\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\nimport Cloudinary from './Cloudinary';\nfunction GetText(props) {\n    // component collecting answer option and image link for it, passing it to parent(GetAnswers)\n    const [answerText, setAnswerText] = useState(props.answer.text);\n    const [imgLink, setImgLink] = useState(props.answer.img);\n    const [checkBox, setCheckBox] = useState();\n    const getImgUrl = (url) => {\n        // on change url\n        document.querySelector(\"#mainImg\").value = url;\n        setImgLink(url);\n        sendBack(answerText, url);\n    }\n    function changeInput(e) {\n        // on change answer\n        setAnswerText(e.target.value)\n        sendBack(e.target.value, imgLink);\n    }\n    function changeImage(e) {\n        setImgLink(e.target.value);\n        sendBack(answerText, e.target.value);\n    }\n    function sendBack(a, b) {\n    // sending props back\n        let choice = {\n            text: a,\n            img: b,\n            num: props.num\n        };\n        props.onChange(choice);\n    }\n    useEffect(() => {\n        //  setting text and link for one answering option and updating on props change\n        setAnswerText(props.answer.text);\n        if (props.answer.img.length > 0) {\n            setCheckBox(true);\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\n            setImgLink(props.answer.img);\n        } else {\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\n            setCheckBox(false);\n        }\n    }, [props.answer]);\n    return (\n            <div >\n                <textarea style={{ width: '100%', borderRadius: '.25rem', borderColor: 'lightgray' }} value={answerText} onChange={e => changeInput(e)} />\n                <label style={{ color: 'black', width: '100%' }}>\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\n                check to add image link</label>\n                {checkBox && <div >\n                    <input type=\"text\" style={{ width: '100%', opacity: checkBox, borderRadius: '.25rem', borderColor: 'lightgray' }} value={imgLink} onChange={e => changeImage(e)} />\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                    <img src={imgLink} style={{width:'19%'}} alt='thumbnail'/>\n                </div>}\n            </div>\n    );\n}\nexport default GetText;","import React, { useEffect, useState } from 'react';\nimport GetText from './GetText.js';\n\nfunction GetAnswers(props) {\n    // component that handles EDITing answer's options (right and wrong) for particular test receive info from child-component(GetText) and sending them up to parent(GetQuestion)\n    function handleNewText() {\n        // create new answering option and send it up to GetAnswers\n        let emptyNew = { text: '', img: '', choice: props.correct };\n        props.onNew(emptyNew);\n    }\n    function handlePasteText(){\n        // pasting answer from localStorage and sending it up to GetAnswers\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\n        if (pasteItem===null) return\n        pasteItem.choice=props.correct;\n        props.onNew(pasteItem);\n    }\n    function handleChangeText(t) {\n        // getting answers changes from GetText and send them up to GetAnswers\n        let localArr = props.answers;\n        if ((t.text === '') && (t.img === '')) {\n            localArr.splice(t.num, 1);\n        } else {\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\n            localArr.splice(t.num, 1, answerRenew)\n        }\n        props.onChange(localArr);\n    }\n    function handleDelete(e) {\n// delete answer option\n        props.onDelete(e.target.value)\n    }\n    function handleCopy(e){\n        // Copy answer and send it up to GetAnswers\n        props.onCopy(e.target.value)\n    }\n    const [answers, setAnswers] = useState([]);\n    useEffect(() => {\n        // setting answering options from parent and updating on props change\n        setAnswers(props.answers);\n    }, [props.answers]);\n    return (\n        <div style={{display:\"flex\", alignItems:\"start\", justifyContent:\"start\", marginBottom:'4vh'}}>\n            <div style={{width:'85%' }}>\n                <div>\n                    {answers && answers.map((answerOption, j) => {\n                        return (\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\", margin:0 }}  key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>&#128209;Copy</button>\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />         \n                            </div>\n                        )\n                    }\n                    )}\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handlePasteText() }}>&#128203;Paste</button>\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handleNewText() }}>New &#10133;</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\nimport GetAnswers from './GetAnswers.js';\nimport Cloudinary from './Cloudinary';\nfunction GetQuestion(props) {\n  // component that handles EDITing of the particular question of the test. It receive info from child-component(GetAnswers) and sending them up to parent(page/makeTest)  \n    var questionObj = {}\n\n    const [rights, setRights] = useState([]);\n    const [wrongs, setWrongs] = useState([]);\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        props.onChange({ \"mainImg\": url })\n    }\n    // list available layouts\n    var layouts = [\"simple\", \"box\"];\n    useEffect(() => {\n        // fill/updating question depending on changes in parent\n        document.querySelector(\"#question\").value = props.q.question;\n        document.querySelector(\"#mainImg\").value = props.q.info.img;\n        document.querySelector(\"#positionsCount\").value = props.q.info.positions;\n        document.querySelector(\"#correctCount\").value = props.q.info.correct;\n        document.querySelector(\"#layout1\").value = props.q.info.layout;\n        setRights(props.q.rights);\n        setWrongs(props.q.wrongs);\n\n    }, [props.q]);\n    function handleReturnData(t, corr) {\n        // passing answers to the parent\n        if (corr) {\n            questionObj.rights = t;\n        } else {\n            questionObj.wrongs = t;\n        }\n        props.onChange(questionObj)\n    }\n    function handleCopyData(n, corr) {\n        // saving the answer to the localStorage to copy it\n        (corr) ? questionObj = props.q.rights[n] : questionObj = props.q.wrongs[n];\n        localStorage.setItem('answerCopy', JSON.stringify(questionObj));\n    }\n    function newRecord(e, corr) {\n        // setting new Record and send it to parent\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.push({ text: e.text, img: e.img, choice: true });\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.push({ text: e.text, img: e.img, choice: false });\n        }\n        props.onChange(questionObj)\n    }\n\n\n    function delRecord(n, corr) {\n        // delete one answer option\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.splice(n, 1);\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.splice(n, 1);\n        }\n        props.onChange(questionObj)\n    }\n\n    return (\n        <Fragment>\n            <label className='headerStyle'>Enter your question\n            <textarea id=\"question\" onChange={e => { props.onChange({ \"question\": e.target.value }) }} />\n            </label>\n            <br/>\n            <label className='headerStyle'>Add your question main picture link (if you have one)\n            <input id=\"mainImg\" onChange={e => { props.onChange({ \"mainImg\": e.target.value }) }} />\n            </label>\n            <Cloudinary getImgUrl={getImgUrl} />\n            <label className='headerStyle'>Choose question layout\n                <select id=\"layout1\" onChange={e => { props.onChange({ \"layout1\": e.target.value }) }} >\n                    {layouts.map((option, i) => {\n                        return (\n                            <option value={option} key={'layout_option' + i}>{option}</option>\n                        )\n                    }\n                    )}\n                </select>\n             </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label>\n                        <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length + wrongs.length}  onChange={e => { props.onChange({ \"positionsCount\": e.target.value }) }} />            \n                        How many positions would be displayed?(Maximum should be less then answers options)\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label>\n                        <input id=\"correctCount\" type=\"number\" min={0} max={rights.length}  onChange={e => { props.onChange({ \"correctCount\": e.target.value }) }} />           \n                        How many correct options should be selected?(Maximum should be less then correct answers options)\n                    </label>\n                </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel2'>\n                    <label className='headerStyle' style={{color:'green'}} ><strong>Enter text of the correct answers:</strong></label>\n                    {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\n                </section>\n                <section className='panel1'>\n                    <label className='headerStyle' style={{ color:'red'}} ><strong>Enter text of the wrong answers:</strong></label>\n                    {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\n                </section>\n            </div>\n        </Fragment >\n    )\n}\nexport default GetQuestion;","import React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nfunction TestCreateNav(props) {\n// component that displays navigation for the editing specipic question inside the test\n    const [qArr, setqArr] = useState('');\n    const [moveVis, setMoveVis] = useState(false);\n    useEffect(() => {\n        // display question number 1\n        document.getElementById('questionPage').value = 1;\n    }, []);\n    useEffect(() => {\n        // fill/update array of question numbers\n        let arr = [];\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\n        setqArr(arr);\n    }, [props.qNumber]);\n    function questionNumberSet(n) {\n        // set current question based on pressing navigaton buttons and send result to parent\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    function deleteRec() {\n        // deletes current page number and switch to last existing ad send prop to delete to parent \n        props.onDel('');\n        let n = document.querySelector(\"#questionPage\");\n        let k = \"\"\n        if (parseInt(n.value) !== props.qNumber) {\n            k = n.value;\n            n.value = k;\n        } else {\n            k = n.value;\n            n.value = (parseInt(k) - 1).toString();\n        }\n    }\n    function visibilityMoveTo() {\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\n        setMoveVis(!moveVis)\n    }\n    return (\n\n        <div className=\"navContainer\" style={{ marginTop: '2%' }} >\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Question editing panel</strong></h3>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet('1') }}>&#9198;</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <input className=\"testNavLight text-center\" style={{width:'3ch'}} type=\"number\" id=\"questionPage\"  min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\n            <button className=\"testNav\"\n                onClick={e => { deleteRec() }}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/>Delete</button>\n            <button className=\"testNav\"\n            // sending response about copy \n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\n            <button className=\"testNav\"\n            // sending response on paste\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\n            <button className=\"testNav\"\n            //  sending response on preview\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\n            {(props.qNumber > 1) && <button className=\"testNav\"\n            // on click revealing the array of option to move your question to\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\n            }}>\n                {qArr.map((option, i) => {\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\n                }\n                )}\n            </select>}\n        </div>\n\n    );\n}\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nfunction GetGradient(props) {\n    // handles selection of background gradients in Editing test page and passing css value to the test\n    const db = firebase.firestore();\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [gradients, setGradients] = useState([]);\n    const [newGradient, setNewGradient] = useState('');\n    const [newGradientName, setNewGradientName] = useState('');\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\n\n    const onReturn = (decision1) => {\n        // if Delete button on AlertMenu pressed it deletes choosen gradient from db of the gradients\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('gradients').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n    }\n    function handleAdd(e) {\n        // adds name and css of the gradient to the db, then send signal to parent to reload to include new gradient to the list\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\n            .then(res => {\n                console.log('added');\n                props.reloadNeeded(true);\n            })\n            .catch(error => {\n                console.log(\"can not delete a record\");\n            })\n    }\n    function handleDelete(e) {\n        // confirming delete gradient by revealing the AlertMenu\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\n        setAlertStyle({\n            left: \"0\",\n            top: \"0\",\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n\n        setRevealAlert(true)\n    }\n    function handleClick(grad) {\n        // sending value of the choosen gradient to the parent\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\n        props.onChange(gr[0].value);\n    }\n    const fetchGradients = async () => {\n// getting information of the different gradients from db\n        const data = await db.collection(\"gradients\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n        setGradients(arrTemp);\n    };\n    useEffect(() => {\n        fetchGradients();\n    }, []);\n\n    return (\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {gradients && gradients.map((item, j) => {\n                return (\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius:'10px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\n                        <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  key={\"gradient_del_button\"+j} value={item.id} onClick={e => handleDelete(e)}>Del<img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(.9vw,10px)',height:'max(.9vw,10px)'}}/></button>\n                    </div>\n                )\n            }\n            )}\n            <label>\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} />\n                Add new background gradient CSS to our database of pre-set styles\n            </label>\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '100%' }}>\n                <label className='headerStyle'>Enter gradient CSS</label>\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\n                <label className='headerStyle'>Enter gradient name</label>\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\n                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  onClick={e => handleAdd(e)}>Add &#128504;</button>\n            </div>\n        </div>\n    );\n}\nexport default GetGradient;","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    // using Select library allows to select multiple categories for the test\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport GetQuestion from '../../components/GetQuestion.js';\nimport TestCreateNav from '../../components/testCreateNav';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport \"./style.css\";\nimport GetTests from '../../components/getTests.js';\nimport GetGradient from '../../components/getGradient.js';\nimport AlertMenu from '../../components/alertMenu';\nimport Cloudinary from '../../components/Cloudinary';\nimport QuestionDisplay from '../../components/QuestionDisplay';\nimport CustomSelect from '../../components/CustomSelect';\n\nvar demoArr = [];\nvar emptyQ = {\n    question: '',\n    rights: [{ text: '', img: '', choice: true }],\n    wrongs: [{ text: '', img: '', choice: false }],\n    info: {\n        positions: 2,\n        correct: 1,\n        layout: '',\n        img: ''\n    }\n}\nfunction ToRenderEverything() {\n    // main page that edit test\n    var defOptionArray = [];\n    const { currentUser } = useAuth();\n    const [testName, setTestName] = useState('');\n    const [testDescription, setTestDescription] = useState('');\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\n    const [visibility, setVisibility] = useState('');\n    const [editability, setEditability] = useState('');\n    const [displayQ, setDisplayQ] = useState(0);\n    const [testBackground, setTestBackground] = useState('');\n    const [testGradient, setTestGradient] = useState('');\n    const [testHH, setTestHH] = useState(0);\n    const [testMM, setTestMM] = useState(0);\n    const [testSS, setTestSS] = useState(0);\n    const [show, setShow] = useState(false);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({})\n    const [testArray, setTestArray] = useState([emptyQ]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\n    const db = firebase.firestore();\n    const fetchCategories = async () => {\n// getting categories from db\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n        });\n        setCategories(arrTemp);\n    };\n    const onReturn = (decision1, inputValue) => {\n        // onClick AlertMenu button\n        if (decision1 === \"Proceed\") {\n            // reload location\n            setRevealAlert(false);\n            reloadNeeded()\n        }\n        if (decision1 === \"Update\") {\n            // update test in db if successful it save current editing test in LocalStorage and reload location\n            setRevealAlert(false);\n            let text = {\n                main: {\n                    author: testAuthor.authorId,\n                    authorName: testAuthor.name,\n                    categories: selectedOption,\n                    name: testName,\n                    description: testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            db.collection('tests').doc(testAuthor.testId).set(text)\n                .then(result => {\n                    console.log(\"file updated\");\n                    reloadNeeded();\n                })\n                .catch(e => { console.log(\"file fail to updated\"); })\n        }\n        if (decision1 === \"Add\") {\n            // adds new category to db\n            console.log(inputValue)\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\n                let newItem = { label: inputValue, value: inputValue }\n                db.collection('categories').add(newItem)\n                    .then(result => {\n                        console.log(\"categories updated\");\n                        setCategories([...categories, newItem]);\n                    })\n                    .catch(e => { console.log(\"categories fail to updated\"); })\n                setRevealAlert(false);\n            } else {\n                setAlertStyle({\n                    left: \"0\",\n                    top: \"0\",\n                    variantHead: \"danger\",\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n                    inputField: 'true',\n                    inputValue: inputValue,\n                    color1: \"danger\",\n                    button1: \"Add\",\n                    color2: \"secondary\",\n                    button2: \"Cancel\"\n                });\n            }\n        }\n        if (decision1 === \"Cancel\") {\n            // if cancel button pressed just close AlertMenu\n            setRevealAlert(false);\n        }\n    }\n    const reloadNeeded = (a) => {\n        window.location.reload();\n    }\n    const getImgUrl = (url) => {\n        // set background image \n        document.querySelector(\"#background\").value = url;\n        setTestBackground(url);\n    }\n    const getGradientCSS = (n) => {\n        // set background gradient\n        document.querySelector(\"#backgroundGradient\").value = n;\n        setTestGradient(n)\n    }\n    function handleUpdateQuestion(q) {\n        // update of question display number\n        if (q > 0) { setDisplayQ(q - 1) }\n        else {\n            setDisplayQ(q);\n        }\n    }\n    function handleReturnQuestion(t) {\n        // update information of the test state\n        let arr = [...testArray];\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\n        setTestArray(arr);\n    }\n    function handleCopyQuestion(e) {\n        // saving to localStorage entire question object for further pasting it to new test (copy question)\n        localStorage.setItem('questionCopy', JSON.stringify(testArray[displayQ]));\n    }\n    function handleInsertQuestion(e) {\n        // insert question from localStorage to new test (paste question)\n        let arr = [];\n        let questCopy = JSON.parse(localStorage.getItem('questionCopy'));\n        if (questCopy === null) return\n        for (let i = 0; i < testArray.length; i++) {\n            if (i === displayQ + 1) arr.push(questCopy)\n            arr.push(testArray[i])\n        }\n        if (displayQ === testArray.length - 1) arr.push(questCopy)\n        setTestArray(arr)\n        setDisplayQ(displayQ + 1)\n    }\n    function handleAdd(e) {\n        // adding empty new question to state\n        setTestArray(oldArray => [...oldArray, {\n            question: '',\n            rights: [{ text: '', img: '', choice: true }],\n            wrongs: [{ text: '', img: '', choice: false }],\n            info: {\n                positions: 2,\n                correct: 1,\n                layout: '',\n                img: ''\n            }\n        }]);\n        setDisplayQ(testArray.length);\n        console.log(displayQ);\n    }\n    function handleShow() {\n        // show modal with current question displayed like it would be presented on the test\n        StopScroll();\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\n        for (let i = 0; i < arr.length; i++) {\n            demoArr.push(arr[i]);\n        }\n        console.log(demoArr);\n        show ? setShow(false) : setShow(true)\n    }\n    function handleDelete() {\n// delete question frrom state\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\n    }\n    function handleMove(t) {\n        // move question into new position inside the teast\n        if (t[0] !== t[1]) {\n            let arr = [];\n            let record1 = testArray[t[0]];\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === t[1]) {\n                    if (t[1] > t[0]) {\n                        arr.push(testArray[i]);\n                        arr.push(record1);\n                    } else {\n                        arr.push(record1);\n                        arr.push(testArray[i]);\n                    }\n                }\n                else if (i !== t[0]) arr.push(testArray[i])\n            }\n            setTestArray(arr);\n            setDisplayQ(t[1])\n            console.log(record1, arr)\n        }\n    }\n    function getTestfromDB(n) {\n        // setting test to edit from outside sourse\n        console.log(n)\n        let newTest = n;\n        setTestArray(newTest.test);\n        setDisplayQ(0);\n        document.querySelector(\"#questionPage\").value = 1;\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\n        defOptionArray = newTest.main.categories\n        setSelectedOption(defOptionArray);\n        document.querySelector(\"#testName\").value = newTest.main.name;\n        setTestName(newTest.main.name);\n        document.querySelector(\"#testDescription\").value = newTest.main.description;\n        setTestDescription(newTest.main.description);\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\n        setVisibility(newTest.main.visibility);\n        document.querySelector(\"#editability\").value = newTest.main.editability;\n        setEditability(newTest.main.editability);\n        document.querySelector(\"#background\").value = newTest.main.background;\n        setTestBackground(newTest.main.background);\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n        setTestGradient(newTest.main.gradient);\n        document.querySelector(\"#hh\").value = newTest.main.hours;\n        setTestHH(newTest.main.hours);\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\n        setTestMM(newTest.main.minutes);\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\n        setTestSS(newTest.main.seconds);\n    }\n    function upload(e) {\n        // uploading test to db\n        let text = {\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description: testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        };\n        db.collection(\"tests\").add(text)\n            .then(result => {\n                console.log(\"file created in DB\");\n                reloadNeeded()\n            })\n            .catch(e => { console.log(\"no connectionto DB\"); })\n    }\n    function download(e) {\n        // download test to local hard drive\n        let text = JSON.stringify({\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description: testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        });\n        console.log(text)\n        let filename = \"test.txt\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n    function update(e) {\n        // update test inside db with new changes\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Warning\",\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\n            color1: \"danger\",\n            button1: \"Update\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function handleNewCategory(e) {\n        // getting new category through AlertMenu\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Alert\",\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n            inputField: 'true',\n            inputValue: \"\",\n            color1: \"danger\",\n            button1: \"Add\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function startNewTest(e) {\n        // \n        if (testName > \"\") {\n            setRevealAlert(true);\n            setAlertStyle({\n                variantHead: \"info\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n        }\n    }\n    const saveReload = (a) => {\n        // saves current test to localStorage in order to return back to it after reload location\n        if (a) {\n            let text = {\n                main: {\n                    author: currentUser.uid,\n                    authorName: currentUser.displayName,\n                    categories: selectedOption,\n                    name: testName,\n                    description: testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            reloadNeeded();\n        }\n    }\n    function StopScroll(){\n        // prevent scrolling\n        var x=window.scrollX;\n        var y=window.scrollY;\n        window.onscroll=function(){window.scrollTo(x, y);};    \n    }\n    useEffect(() => {\n        // reloading page with saved test\n        fetchCategories();\n        let pasteItem = JSON.parse(localStorage.getItem('testCopy'));\n        if ((pasteItem !== null)) getTestfromDB(pasteItem)\n        localStorage.removeItem('testCopy');\n    }, []);\n    return (\n        <div className=\"makerContainer\">\n            \n            <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onLocal={n => { console.log(\"test loaded\") }} onChange={n => getTestfromDB(n)} />\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <div className='navContainer' >\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Test editing panel</strong></h3>\n\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128187;</button>\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload to web &#128228;</button>\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update on web &#128257;</button>}\n\n            </div>\n            <label className='headerStyle' >Enter test Name (keep it under 30 symbols)\n                    <input id=\"testName\" onChange={e => setTestName(e.target.value)} />\n            </label>\n            <br />\n            <label className='headerStyle' >Enter test description\n                    <textarea id=\"testDescription\" onChange={e => setTestDescription(e.target.value)} />\n            </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <select id=\"visibility\" onChange={e => setVisibility(e.target.value)} >\n                            <option value=\"Private\">Private</option>\n                            <option value=\"Public\">Public</option>\n                        </select>\n                        Is this test Private or Public?\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <select id=\"editability\" onChange={e => setEditability(e.target.value)}>\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                        Would you allow others to edit content of test?\n                    </label>\n                </section>\n            </div>\n            {selectedOption &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red', marginLeft: '1.5%' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\n            }\n            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: \"1% 0 0 1.5%\" }} onClick={e => handleNewCategory(e)}>Add New Category</button>\n            <div className=\"panel2 containerGrid\">\n                <section className='headerStyle' >Enter time (if there are no time limit enter 0 0 0):</section>\n                <section className='panel1 headerStyle' style={{ float: 'left' }}>\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '5ch' }} onChange={e => setTestHH(e.target.value)} /> hh\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestMM(e.target.value)} /> mm\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestSS(e.target.value)} /> ss\n            </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />\n                        Add/change BACKGROUND to your test\n                </label>\n                    <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '98%' }}>\n\n                        <label className='headerStyle'>Enter test background image link or upload your image from computer\n                        <input id=\"background\" onChange={e => setTestBackground(e.target.value)} />\n                        </label>\n                        <Cloudinary getImgUrl={getImgUrl} />\n                    </div>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\n                    Add/change background GRADIENT to your test\n               </label>\n                    <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '98%' }}>\n                        <label className='headerStyle' >Enter test background gradient CSS here\n                        <textarea id=\"backgroundGradient\" onChange={e => setTestGradient(e.target.value)} />\n                        </label>\n                        <GetGradient reloadNeeded={saveReload} onChange={n => getGradientCSS(n)} />\n                    </div>\n                </section>\n            </div>\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\n            {show &&\n                <div className=\"modalContainer\" style={{top: window.pageYOffset}}>\n                    <div className=\"closeTag\" style={{position:'absolute',top:'2%', right:'2%'}} onClick={(e) =>{ setShow(false); window.onscroll=function(){};}}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} status={\"create\"} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\n                </div>\n            }\n            {testArray[displayQ] &&\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\n            }\n          <div style={{width:'100%', marginLeft:\"10px\", pointerEvents:\"cursor\"}}>&copy; 2021 <Link to=\"/about\">Sergey Bolotnikov</Link> </div>  \n        </div >\n    )\n}\nexport default ToRenderEverything;\n","import React from \"react\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.scss';\n// Components\nimport Signup from \"./components/Signup\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport About from \"./components/About\"\nimport Logout from \"./components/Logout\"\nimport RedirectMain from \"./components/RedirectMain\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport DirectTestPage from \"./components/DirectTestPage\"\nimport Nav from \"./components/Nav\"\n//Pages\nimport testPage from './pages/testPage';\nimport makeTest from './pages/makeTest';\n\nfunction App() {\n\n  return (\n    <Router>\n      <AuthProvider>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={testPage} />\n            <Route exact path=\"/redirect\" component={RedirectMain} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\n          </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
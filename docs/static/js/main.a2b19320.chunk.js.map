{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/Logout.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/alertMenu.js","components/testNav/index.js","components/LayoutBox/index.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/ChooseCategory/index.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","components/CustomSelect.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","console","log","updateProfile","displayName","photoURL","then","catch","error","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","to","e","a","preventDefault","current","length","className","style","width","maxWidth","src","alt","onSubmit","id","type","ref","required","disabled","Dashboard","toLogin","setToLogin","marginTop","padding","margin","onClick","Login","Logout","logoutHandle","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","Cloudinary","imageSelected","setImageSelected","display","alignItems","justifyContent","marginLeft","onChange","event","target","files","formData","FormData","append","Axios","post","response","data","parentElement","previousSibling","getImgUrl","pictureUpload","UpdateProfile","userNameRef","userURLRef","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","document","querySelector","childNodes","variant","AlertMenu","button1Color","setbutton1Color","button2Color","setbutton2Color","Object","values","keys","indexOf","styling","color1","color","color2","height","position","variantHead","heading","text","inputField","marginBottom","inputValue","backgroundColor","onReturn","button1","button2","TestNav","timerInterval","stringTime","hours","minutes","seconds","displayTime","setDisplayTime","revealAlert","setRevealAlert","alertStyle","setAlertStyle","secondsLeft","h","m","s","stopTest","clearInterval","classList","add","querySelectorAll","forEach","userItem","onExit","questionNumberSet","n","questionNow","Number","isInteger","parseInt","qNumber","navButton","remove","decision1","top","left","zIndex","setInterval","background","fontSize","min","max","toString","right","backgroundImage","borderWidth","borderRadius","LayoutBox","i","checked","checkedMarks","opacity","vis","minHeight","maxHeight","minWidth","lineHeight","textAlign","textShadow","question","alignContent","flexWrap","overflow","answers","map","answerOption","j","choice","checkingMulti","img","backgroundRepeat","backgroundSize","LayoutSimple","window","innerWidth","info","alignSelf","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","gradientValue","gradient","comma","overflowY","layout","ch","GetResults","db","firestore","testRecords","setTestsRecords","resultsData","collection","where","testId","get","querySnapshot","doc","sort","b","result","time","fetchData","test","ResultsDisplay","testeeName","setTesteeName","testeeId","uid","handleDont","location","assign","timeInSeconds","t","split","rate","res","userId","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","visible","setVisible","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","toFixed","answersSet","rights","concat","wrongs","positions","local","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollpased","imgDisplay","setImgDisplay","handleNavCollpase","imgLink","float","ChooseCategory","GetTests","testRecordsDisplay","setTestsRecordsDisplay","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","categoriesLayout","setCategoriesLayout","setChecked","testFromDB","setTestFromDB","checkEditLocalTestVisible","setCheckEditLocalTestVisible","arrTemp","forPage","docs","filter","author","editability","visibility","nameA","toUpperCase","nameB","fetchCategories","label","option","recordSet","chosenRec","tempArr","findIndex","getChoosenTests","whiteSpace","recId","getAttribute","handleLink","elementPos","x","objFound","authorName","handleDelete","cursor","item","handleClick","evt","f","r","FileReader","onload","parse","onLocal","readAsText","alert","readSingleFile","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","l","getTestfromDB","GetText","answer","answerText","setAnswerText","setImgLink","checkBox","setCheckBox","sendBack","num","cor","changeInput","changeImage","GetAnswers","setAnswers","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","isSelected","control","styles","singleValue","isDisabled","transition","CustomSelect","options","isMulti","closeMenuOnSelect","isSearchable","demoArr","emptyQ","defOptionArray","testName","setTestName","authorId","testAuthor","setTestAuthor","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","reload","newTest","removeItem","set","newItem","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","upload","size","getGradientCSS","oldArray","record1","handleMove","slice","handleShow","handleUpdateQuestion","questCopy","handleInsertQuestion","pointerEvents","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","exact","path","makeTest","testPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"oNAIMA,G,oBAAMC,IAASC,cAAc,CACjCC,OAAQC,0CACRC,WAAYD,oCACZE,YAAaF,0CACbG,UAAWH,oBACXI,cAAeJ,gCACfK,kBAAmBL,eACnBM,MAAON,+CAGIO,EAAOX,EAAIW,OACTX,I,OCZTY,EAAcC,IAAMC,gBAEnB,SAASC,IACd,OAAOC,qBAAWJ,GAGb,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACHC,qBADG,mBAClCC,EADkC,KACrBC,EADqB,OAEXF,oBAAS,GAFE,mBAElCG,EAFkC,KAEzBC,EAFyB,KAwCzCC,qBAAU,WAMR,OALoBb,EAAKc,oBAAmB,SAAAC,GAC1CL,EAAeK,GACfH,GAAW,QAIZ,IAEH,IAAMI,EAAQ,CACZP,cACAQ,MA5CF,SAAeC,EAAOC,GACpB,OAAOnB,EAAKoB,2BAA2BF,EAAOC,IA4C9CE,OAhDF,SAAgBH,EAAOC,GACrB,OAAOnB,EAAKsB,+BAA+BJ,EAAOC,IAgDlDI,OA1CF,WACE,OAAOvB,EAAKwB,WA0CZC,cAvCF,SAAuBP,GACrB,OAAOlB,EAAK0B,uBAAuBR,IAuCnCS,YApCF,SAAqBT,GACnB,OAAOT,EAAYkB,YAAYT,IAoC/BU,eAjCF,SAAwBT,GACtB,OAAOV,EAAYmB,eAAeT,IAiClCU,WA9BF,SAAoBC,EAAMC,GAGxB,OAFAC,QAAQC,IAAI,mBAAqBH,EAAOC,GACxCC,QAAQC,IAAIxB,GACLA,EAAYyB,cAAc,CAC/BC,YAAaL,EACbM,SAAUL,IACTM,MAAK,eAELC,OAAM,SAAUC,GACjBP,QAAQC,IAAI,gCAwBhB,OACE,cAAChC,EAAYuC,SAAb,CAAsBxB,MAAOA,EAA7B,UACIL,GAAWJ,I,MCnEJ,SAASkC,IACtB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACnBtB,EAAWjB,IAAXiB,OAJuB,EAKLb,mBAAS,IALJ,mBAKxB+B,EALwB,KAKjBO,EALiB,OAMDtC,oBAAS,GANR,mBAMxBG,EANwB,KAMfC,EANe,OAOHJ,oBAAS,GAPN,mBAOxBuC,EAPwB,KAOhBC,EAPgB,KAQ/B,IAAe,IAAXD,EAAmB,OAAO,cAAC,IAAD,CAAUE,GAAG,MARZ,4CAU/B,WAA4BC,GAA5B,SAAAC,EAAA,yDACED,EAAEE,iBAEER,EAAYS,QAAQrC,QAAU6B,EAAmBQ,QAAQrC,MAH/D,yCAIW8B,EAAS,2BAJpB,YAMMF,EAAYS,QAAQrC,MAAMsC,OAAS,GANzC,yCAOWR,EAAS,gDAPpB,OASE,IACEA,EAAS,IACTlC,GAAW,GACXS,EAAOqB,EAASW,QAAQrC,MAAO4B,EAAYS,QAAQrC,OACnDgC,GAAU,GAEV,SACAF,EAAS,+BAGXlC,GAAW,GAnBb,4CAV+B,sBAgC/B,OACE,qBAAK2C,UAAU,gBAAf,SACE,sBAAKC,MAAO,CAAEC,MAAO,MAAOC,SAAU,SAAtC,UACE,sBAAKH,UAAU,cAAf,UAEE,qBAAIA,UAAU,UAAd,oBACE,qBAAKI,IAAKlE,kCAAgDmE,IAAI,cAAcL,UAAU,YACvFhB,GAAS,uBAAOgB,UAAU,aAAjB,SAA+BhB,IACzC,uBAAMsB,SAxCiB,4CAwCvB,UACE,wBAAON,UAAU,cAAjB,kBACQ,uBAAOO,GAAG,QAAQC,KAAK,QAAQC,IAAKtB,EAAUuB,UAAQ,OAE9D,wBAAOV,UAAU,cAAjB,qBACQ,uBAAOO,GAAG,WAAWC,KAAK,WAAWC,IAAKpB,EAAaqB,UAAQ,OAEvE,wBAAOV,UAAU,cAAjB,kCACQ,uBAAOO,GAAG,mBAAmBC,KAAK,WAAWC,IAAKnB,EAAoBoB,UAAQ,OAEtF,wBAAQC,SAAUvD,EAAS4C,UAAU,SAASQ,KAAK,SAAnD,2BAMJ,sBAAKR,UAAU,WAAf,sCAC2B,cAAC,IAAD,CAAMA,UAAU,QAAQN,GAAG,SAA3B,4BCzDpB,SAASkB,IAAa,IAAD,EACR3D,mBAAS,IADD,mBAC3B+B,EAD2B,KACpBO,EADoB,OAEF1C,IAAxBK,EAF0B,EAE1BA,YAAac,EAFa,EAEbA,OAFa,EAGJf,oBAAS,GAHL,mBAG3B4D,EAH2B,KAGlBC,EAHkB,KAIlC,IAAgB,IAAZD,EAAoB,OAAO,cAAC,IAAD,CAAUnB,GAAG,WAJV,4CAKlC,sBAAAE,EAAA,6DACEL,EAAS,IADX,kBAIUvB,IAJV,OAKI8C,GAAW,GALf,gDAOIvB,EAAS,qBAPb,0DALkC,sBAgBlC,OACE,qBAAKS,UAAU,gBAAf,SACE,sBAAKC,MAAO,CAAEC,MAAO,MAAOC,SAAU,QAASY,UAAU,MAAzD,UACE,sBAAKf,UAAU,cAAcC,MAAO,CAACe,QAAQ,SAA7C,UACE,qBAAIhB,UAAU,UAAd,sBACA,qBAAKI,IAAKlE,kCAAgDmE,IAAI,cAAcL,UAAU,YACrFhB,GAAS,uBAAOgB,UAAU,aAAjB,SAA+BhB,IACzC,qBAAIgB,UAAU,WAAd,cAA0B,8CAA1B,IAAqD9C,EAAY0B,eACjE,qBAAIoB,UAAU,WAAd,eAA2B,4CAA3B,IAAoD9C,EAAYS,MAAhE,OACA,qBAAKsC,MAAO,CAAEC,MAAO,MAAOe,OAAO,UAAYb,IAAKlD,EAAY2B,SAAW,GAAK3B,EAAY2B,SAAW3C,qCAAmDmE,IAAI,gBAC9J,cAAC,IAAD,CAAMX,GAAG,kBAAT,SACE,wBAAQM,UAAU,SAAlB,8BAIF,cAAC,IAAD,CAAMN,GAAG,QAAT,SACE,wBAAQM,UAAU,SAAlB,0BAIF,cAAC,IAAD,CAAMN,GAAG,UAAT,SACE,wBAAQM,UAAU,SAAlB,+BAKJ,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,WAAWkB,QA3CA,2CA2C1B,4BC3CK,SAASC,IACtB,IAAMhC,EAAWC,mBACXC,EAAcD,mBACZ1B,EAAUb,IAAVa,MAHsB,EAIJT,mBAAS,IAJL,mBAIvB+B,EAJuB,KAIhBO,EAJgB,OAKAtC,oBAAS,GALT,mBAKvBG,EALuB,KAKdC,EALc,OAMFJ,oBAAS,GANP,mBAMvBuC,EANuB,KAMfC,EANe,KAO9B,IAAe,IAAXD,EAAmB,OAAO,cAAC,IAAD,CAAUE,GAAG,MAPb,4CAQ9B,WAA4BC,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAIIN,EAAS,IACTlC,GAAW,GALf,SAMUK,EAAMyB,EAASW,QAAQrC,MAAO4B,EAAYS,QAAQrC,OAN5D,OAQIgC,GAAU,GARd,gDAUIF,EAAS,oBAVb,QAaElC,GAAW,GAbb,0DAR8B,sBAwB9B,OACE,qBAAK2C,UAAU,gBAAf,SACE,sBAAKC,MAAO,CAAEC,MAAO,MAAOC,SAAU,SAAtC,UACE,sBAAKH,UAAU,cAAf,UACE,qBAAIA,UAAU,UAAd,mBACE,qBAAKI,IAAKlE,kCAAgDmE,IAAI,cAAcL,UAAU,SADxF,OAEChB,GAAS,uBAAOgB,UAAU,aAAjB,SAA+BhB,IACzC,uBAAMsB,SA/BgB,4CA+BtB,UACE,wBAAON,UAAU,cAAjB,kBACQ,uBAAOO,GAAG,QAAQC,KAAK,QAAQC,IAAKtB,EAAUuB,UAAQ,OAE9D,wBAAOV,UAAU,cAAjB,qBACQ,uBAAOO,GAAG,WAAWC,KAAK,WAAWC,IAAKpB,EAAaqB,UAAQ,OAEvE,wBAAQC,SAAUvD,EAAS4C,UAAU,SAASQ,KAAK,SAAnD,uBAIF,qBAAKR,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,QAAQN,GAAG,mBAA3B,mCAGJ,sBAAKM,UAAU,WAAf,8BACmB,cAAC,IAAD,CAAMA,UAAU,QAAQN,GAAG,UAA3B,6BC1BZ0B,MArBf,WAAmB,IAEPpD,EAAWnB,IAAXmB,OAFM,4CAGd,sBAAA4B,EAAA,+EAEc5B,IAFd,sDAIQS,QAAQC,IAAI,qBAJpB,yDAHc,sBAgBd,OALApB,qBAAU,YAXI,mCAaV+D,KAED,IAEC,cAAC,IAAD,CAAU3B,GAAG,Y,eCjBN,SAAS4B,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAC9DvE,EAAgBL,IAAhBK,YAER,OACE,cAAC,IAAD,2BACMuE,GADN,IAEEC,OAAQ,SAAAC,GACN,OAAOzE,EAAc,cAACqE,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAUjC,GAAG,eCPtD,SAASkC,IACtB,IAAMzC,EAAWC,mBACTlB,EAAkBrB,IAAlBqB,cAF+B,EAGbjB,mBAAS,IAHI,mBAGhC+B,EAHgC,KAGzBO,EAHyB,OAITtC,mBAAS,IAJA,mBAIhC4E,EAJgC,KAIvBC,EAJuB,OAKT7E,oBAAS,GALA,mBAKhCG,EALgC,KAKvBC,EALuB,iDAOvC,WAA4BsC,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAIIiC,EAAW,IACXvC,EAAS,IACTlC,GAAW,GANf,SAOUa,EAAciB,EAASW,QAAQrC,OAPzC,OAQIqE,EAAW,6CARf,kDAUIvC,EAAS,4BAVb,QAaElC,GAAW,GAbb,2DAPuC,sBAuBvC,OACE,qBAAK2C,UAAU,gBAAf,SACE,sBAAKC,MAAO,CAAEC,MAAO,MAAOC,SAAU,SAAtC,UACE,sBAAKH,UAAU,cAAf,UACE,qBAAIA,UAAU,UAAd,2BACE,qBAAKI,IAAKlE,kCAAgDmE,IAAI,cAAcL,UAAU,YACvFhB,GAAS,uBAAOgB,UAAU,aAAjB,SAA+BhB,IACxC6C,GAAU,uBAAO7B,UAAU,eAAjB,SAAiC6B,IAC5C,uBAAMvB,SA/ByB,4CA+B/B,UACE,wBAAON,UAAU,cAAjB,kBACQ,uBAAOO,GAAG,QAAQC,KAAK,QAAQC,IAAKtB,EAAUuB,UAAQ,OAE9D,wBAAQC,SAAUvD,EAAS4C,UAAU,SAASQ,KAAK,SAAnD,+BAIF,qBAAKR,UAAU,WAAf,SACE,cAAC,IAAD,CAAMN,GAAG,SAASM,UAAU,QAA5B,wBAGJ,sBAAKA,UAAU,WAAf,8BACmB,cAAC,IAAD,CAAMN,GAAG,UAASM,UAAU,QAA5B,6B,qBCfZ+B,MA5Bf,SAAoBJ,GAAQ,IAAD,EACiB1E,mBAAS,IAD1B,mBAChB+E,EADgB,KACDC,EADC,KAoBvB,OACI,sBAAKhC,MAAO,CAACiC,QAAQ,OAAQC,WAAW,SAAUC,eAAe,QAASC,WAAW,KAAMlC,SAAS,SAApG,UACI,uBAAOK,KAAK,OAAOP,MAAO,CAACC,MAAM,OAAQoC,SAAU,SAACC,GAAD,OAASN,EAAiBM,EAAMC,OAAOC,MAAM,OAChG,qBAAKzC,UAAU,4BAA4BkB,QAAS,SAACvB,IArBzC,SAAC4C,GAClB,IAAMG,EAAU,IAAIC,SACpBD,EAASE,OAAO,OAAQZ,GACxBU,EAASE,OAAO,gBAAgB1G,WAChC2G,IAAMC,KACF,uDACAJ,GAEH5D,MAAK,SAAAiE,GACLd,EAAiB,IACjBxD,QAAQC,IAAIqE,EAASC,KAAKxE,KAC1BC,QAAQC,IAAI6D,EAAMC,OAAOS,cAAcC,gBAAgBzF,OACvD8E,EAAMC,OAAOS,cAAcC,gBAAgBzF,MAAM,GACjDkE,EAAMwB,UAAUJ,EAASC,KAAKxE,QAE7BO,OAAM,SAAAY,GAAIlB,QAAQC,IAAI,2BAMuC0E,CAAczD,IAAxE,8BCvBG,SAAS0D,IACtB,IAAMlE,EAAWC,mBACXC,EAAcD,mBACdkE,EAAalE,mBACbmE,EAAYnE,mBACZE,EAAqBF,mBALW,EAM0BvC,IAAxDK,EAN8B,EAM9BA,YAAamB,EANiB,EAMjBA,eAAgBD,EANC,EAMDA,YAAaE,EANZ,EAMYA,WANZ,EAOZrB,mBAAS,IAPG,mBAO/B+B,EAP+B,KAOxBO,EAPwB,OAQRtC,oBAAS,GARD,mBAQ/BG,EAR+B,KAQtBC,EARsB,OASVJ,oBAAS,GATC,mBAS/BuC,EAT+B,KASvBC,EATuB,KAkDtC,OALAnC,qBAAU,WACRmB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,oBACZ,KAEW,IAATc,EAAsB,cAAC,IAAD,CAAUE,GAAG,MAErC,qBAAKM,UAAU,gBAAf,SACE,sBAAKC,MAAO,CAAEC,MAAO,MAAOC,SAAU,SAAtC,UACE,sBAAKH,UAAU,cAAf,UACE,qBAAIA,UAAU,UAAd,2BACA,qBAAKI,IAAKlE,kCAAgDmE,IAAI,cAAcL,UAAU,YACrFhB,GAAS,uBAAOgB,UAAU,aAAjB,SAA+BhB,IACzC,uBAAMsB,SA3Cd,SAAsBX,GAEpB,GADAA,EAAEE,iBACER,EAAYS,QAAQrC,QAAU6B,EAAmBQ,QAAQrC,MAC3D,OAAO8B,EAAS,0BAGlB,IAAMiE,EAAW,GACjBnG,GAAW,GACXkC,EAAS,IAELJ,EAASW,QAAQrC,QAAUP,EAAYS,OACzC6F,EAASC,KAAKrF,EAAYe,EAASW,QAAQrC,QAEzC4B,EAAYS,QAAQrC,OACtB+F,EAASC,KAAKpF,EAAegB,EAAYS,QAAQrC,QAE9C6F,EAAYxD,QAAQrC,QAASP,EAAY0B,aAAe2E,EAAWzD,QAAQrC,QAASP,EAAY2B,UACnG2E,EAASC,KAAKnF,EAAWgF,EAAYxD,QAAQrC,MAAO8F,EAAWzD,QAAQrC,QAEzEiG,QAAQC,IAAIH,GACT1E,MAAK,WACJW,GAAU,MAEXV,OAAM,WACLQ,EAAS,+BAEVqE,SAAQ,WACPvG,GAAW,OAgBT,UACI,wBAAO2C,UAAU,cAAjB,wBACE,uBAAOO,GAAG,WAAWC,KAAK,OAAOC,IAAK6C,EAAaO,aAAc3G,EAAY0B,YAAakF,YAAY,oCAExG,wBAAO9D,UAAU,cAAcO,GAAG,UAAlC,gCACE,uBAAQC,KAAK,OAAOC,IAAK8C,EAAYM,aAAc3G,EAAY2B,WAC/D,cAAC,EAAD,CAAYoB,MAAO,CAACC,MAAO,QAAS6D,UAAW,QAAS9C,OAAQ,QAASkC,UAtDrE,SAAC3E,GACjBwF,SAASC,cAAc,YAAYC,WAAW,GAAGzG,MAAMe,EACvD+E,EAAWzD,QAAQrC,MAAMe,EACzBC,QAAQC,IAAI6E,EAAWzD,QAAQrC,aAqDvB,wBAAOuC,UAAU,cAAjB,kBACE,uBAAOO,GAAG,QAAQC,KAAK,QAAQC,IAAKtB,EAAUuB,UAAQ,EAACmD,aAAc3G,EAAYS,WAEnF,wBAAOqC,UAAU,cAAjB,qBACE,uBAAOO,GAAG,WAAWC,KAAK,WAAWC,IAAKpB,EAAayE,YAAY,oCAErE,wBAAO9D,UAAU,cAAjB,kCACE,uBAAOO,GAAG,mBAAmBC,KAAK,WAAWC,IAAKnB,EAAoBwE,YAAY,oCAEpF,wBAAQnD,SAAUvD,EAAS4C,UAAU,SAASQ,KAAK,SAAnD,0BAKN,qBAAKR,UAAU,WAAf,SACE,cAAC,IAAD,CAAMN,GAAG,IAAIM,UAAU,QAAvB,2BCrFR,IAAImE,EAAU,CACZ,OAAU,CACR,MAAS,UACT,gBAAmB,UACnB,YAAe,WAGjB,QAAW,CACT,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEhB,UAAa,CACZ,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEjB,QAAW,CACT,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEjB,KAAQ,CACN,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEjB,GAAI,IAES,SAASC,EAAUzC,GAAQ,IAAD,EACD1E,mBAAS,IADR,mBAChCoH,EADgC,KAClBC,EADkB,OAEDrH,mBAAS,IAFR,mBAEhCsH,EAFgC,KAElBC,EAFkB,KAOvC,OAJAlH,qBAAU,WACRgH,EAAgBG,OAAOC,OAAOP,GAASM,OAAOE,KAAKR,GAASS,QAAQjD,EAAMkD,QAAQC,SAASC,OAC3FP,EAAgBC,OAAOC,OAAOP,GAASM,OAAOE,KAAKR,GAASS,QAAQjD,EAAMkD,QAAQG,SAASD,SAC5F,IAGC,qBAAK9E,MAAO,CAAEC,MAAO,QAAS+E,OAAQ,QAASC,SAAU,YAAzD,SACE,sBAAKlF,UAAU,iBAAf,UACE,uBAAOA,UAAU,iBAAiBC,MAAOwE,OAAOC,OAAOP,GAASM,OAAOE,KAAKR,GAASS,QAAQjD,EAAMkD,QAAQM,cAA3G,SAA2HxD,EAAMkD,QAAQO,UACzI,oBAAIpF,UAAU,iBAAd,SAAgC2B,EAAMkD,QAAQQ,OAC7C1D,EAAMkD,QAAQS,YAAc,uBAAO/E,GAAG,aAAaN,MAAO,CAAEC,MAAO,OAAQqF,aAAc,QAAU1B,aAAclC,EAAM6D,aAC/F,KAAvB7D,EAAMkD,QAAQC,QAAgB,wBAAQ9E,UAAU,iBAAiBC,MAAO,CAACwF,gBAAgBpB,EAAcU,MAAM,SAAU7D,QAAS,SAAAvB,GAAOgC,EAAM+D,SAAS/D,EAAMkD,QAAQc,QAAUhE,EAAMkD,QAAQS,WAAatB,SAASC,cAAc,eAAexG,MAAQ,OAAzN,SAC7BkE,EAAMkD,QAAQc,UAEQ,KAAvBhE,EAAMkD,QAAQG,QAAe,wBAAQhF,UAAU,iBAAiBC,MAAO,CAACwF,gBAAgBlB,EAAcQ,MAAM,SAAU7D,QAAS,SAAAvB,GAAOgC,EAAM+D,SAAS/D,EAAMkD,QAAQe,UAAtI,SAC5BjE,EAAMkD,QAAQe,eCsEVC,MApHf,SAAiBlE,GACb,IAAImE,EADgB,EAEkB7I,mBAAS8I,EAAWpE,EAAMqE,MAAOrE,EAAMsE,QAAStE,EAAMuE,UAFxE,mBAEbC,EAFa,KAEAC,EAFA,OAGkBnJ,oBAAS,GAH3B,mBAGboJ,EAHa,KAGAC,EAHA,OAIgBrJ,mBAAS,IAJzB,mBAIbsJ,EAJa,KAIDC,EAJC,KAKhBC,EAA4B,KAAd9E,EAAMqE,MAA+B,GAAhBrE,EAAMsE,QAAetE,EAAMuE,QAoClE,SAASH,EAAWW,EAAGC,EAAGC,GACtB,MAAM,GAAN,OAAUF,EAAI,GAAK,IAAMA,EAAIA,EAA7B,YAAkCC,EAAI,GAAK,IAAMA,EAAIA,EAArD,YAA0DC,EAAI,GAAK,IAAMA,EAAIA,GAEjF,SAASC,IACLC,cAAchB,GACdrH,QAAQC,IAAI,OACZsF,SAASC,cAAc,YAAY8C,UAAUC,IAAI,aACjChD,SAASiD,iBAAiB,YAChCC,SAAQ,SAAUC,GACxBA,EAASJ,UAAUC,IAAI,gBAE3BrF,EAAMyF,OAAOjB,GAEjB,SAASkB,EAAkBC,GACvB,IAAIC,EAAcvD,SAASC,cAAc,iBACzC,GAAIuD,OAAOC,UAAUH,GAEP,IAANA,IAC0B,KAAtBC,EAAY9J,MAAgB8J,EAAY9J,MAAQ,EAC3CiK,SAASH,EAAY9J,OAASkE,EAAMgG,QAAWJ,EAAY9J,MAAQiK,SAASH,EAAY9J,OAAS,GAEtG8J,EAAY9J,MAAQ,EACpB+I,EAAc,CACVrB,YAAa,SACbC,QAAS,UACTC,KAAK,qCACLP,OAAQ,SACRa,QAAS,SACTX,OAAQ,YACRY,QAAS,WAEbU,GAAe,MAGZ,IAAPgB,IAC0B,KAAtBC,EAAY9J,MAAgB8J,EAAY9J,MAAQkE,EAAMgG,QACjDD,SAASH,EAAY9J,OAAS,EAAK8J,EAAY9J,OAAS,EAC5D8J,EAAY9J,MAAQkE,EAAMgG,cAGnC,GAAU,MAANL,EAAW,CACX,IAAIM,EAAY5D,SAASiD,iBAAiB,YAC1CW,EAAUV,SAAQ,SAAUC,GACxBA,EAASJ,UAAUc,OAAO,iBAE9BD,EAAY5D,SAASiD,iBAAiB,kBAC5BC,SAAQ,SAAUC,GACxBA,EAASJ,UAAUc,OAAO,gBAE9B7D,SAASC,cAAc,aAAa8C,UAAUC,IAAI,aAClDO,EAAY9J,MAAQ,OACjB8J,EAAY9J,MAAQ6J,EAExB,MAANA,EAAa3F,EAAMW,SAAS,GAAKX,EAAMW,SAASoF,SAASH,EAAY9J,QAE1E,OACI,eAAC,WAAD,WACK4I,GAAe,cAACjC,EAAD,CAAWsB,SA5FlB,SAACoC,GACdxB,GAAe,GACG,WAAdwB,GACDjB,KAyFgDhC,QAAS0B,IACxD,wBAAQvG,UAAU,UAAUO,GAAG,WAAWN,MAAO,CAAEiF,SAAU,WAAY6C,IAAK,OAAQC,KAAM,OAAQC,OAAQ,OACxG/G,QAxFZ,SAAmBqB,GACf,IAAI2D,EAAUvE,EAAMuE,QAChBD,EAAUtE,EAAMsE,QAChBD,EAAQrE,EAAMqE,MAClBqB,EAAkB,KAClB9E,EAAM1C,iBACW,IAAZqG,GAA+B,IAAZD,GAA6B,IAAVD,IACvCF,EAAgBoC,aAAY,WACxBzB,IACgB,IAAZP,EACAA,EAAU,GAETA,IACW,KAAZA,IACgB,IAAZD,GACAA,EAAU,GACVD,KACGC,KAEXG,EAAeL,EAAWC,EAAOC,EAASC,IACrB,IAAhBO,IACDK,cAAchB,GACd9B,SAASC,cAAc,YAAY8C,UAAUC,IAAI,aACjDrF,EAAMyF,OAAO,eAGlB,OA6DH,mBAEA,wBAAQpH,UAAU,oBAAoBC,MAAO,CAAEiF,SAAU,WAAY6C,IAAK,OAAQC,KAAM,EAAGG,WAAY,cAAeF,OAAQ,MAC1H/G,QAAS,SAAAvB,GAAO0H,GAAmB,IADvC,wBAEA,wBAAOrH,UAAU,oBAAoBC,MAAO,CAACiF,SAAU,WAAW6C,IAAI,IAAIC,KAAK,IAAK/G,OAAO,aAAcmH,SAAU,mBAAoBH,OAAQ,MAA/I,UACI,uBAAOjI,UAAU,yBAAyBC,MAAO,CAAEC,MAAO,MAAOkI,SAAU,oBAAsB5H,KAAK,SAASD,GAAG,eAAe8H,IAAI,IAAIC,IAAK3G,EAAMgG,QAAQY,WAAYrH,QAAS,SAAAvB,GAAC,OAAI0H,EAAkB1H,EAAE6C,OAAO/E,UADrN,MAEQkE,EAAMgG,WACd,wBAAQ3H,UAAU,qBAAqBC,MAAO,CAAEiF,SAAU,WAAY6C,IAAK,OAAQS,MAAO,EAAGL,WAAY,cAAeF,OAAQ,MAC5H/G,QAAS,SAAAvB,GAAO0H,EAAkB,IADtC,wBAGA,uBAAOrH,UAAU,oBAAoBC,MAAO,CAAEiF,SAAU,WAAYiD,WAAY,cAAeJ,IAAK,EAAGC,KAAM,OAAQ9H,MAAO,MAAO+H,OAAQ,MAA3I,SAAoJ9B,IACpJ,wBAAQnG,UAAU,oBAAoBO,GAAG,YAAaN,MAAO,CAAEiF,SAAU,WAAY6C,IAAK,EAAGS,MAAO,EAAEzH,UAAU,SAAU0H,gBAAgB,OAAD,OAAQvM,gCAAR,KAAwDgE,MAAO,MAAO+E,OAAQ,MAAOyD,YAAa,MAAMC,aAAa,MAAOV,OAAQ,MACzQ/G,QAAS2F,Q,iBC/CV+B,G,MA/DG,SAAAjH,GA2Bd,OAxBArE,qBAAU,WACN,IAAK,IAAIuL,EAAI,EAAGA,EAAI7E,SAASiD,iBAAiB,aAAalH,OAAQ8I,IAC/D7E,SAASC,cAAc,WAAa4E,GAAGC,SAAU,EAC7CnH,EAAMoH,aAAanE,QAAQiE,IAAM,IAAG7E,SAASC,cAAc,WAAa4E,GAAGC,SAAU,MAsB7F,cAAC,WAAD,UACI,sBAAKvI,GAAG,uBAAuBN,MAAO,CAAE+I,QAASrH,EAAMsH,KAAvD,UACI,yBAASjJ,UAAU,kBAAnB,SACI,cAAC,IAAD,CAASsI,IAAK,IACVD,IAAK,GACLpI,MAAO,CACH8E,MAAM,QACNmE,UAAW,MACXC,UAAW,MACXC,SAAU,MACVjJ,SAAU,MACVkJ,WAAY,EACZpI,OAAO,OACPqI,UAAU,SACVC,WAAY,qBAXpB,SAYQ5H,EAAM6H,aAGlB,yBAASxJ,UAAU,gBAAgBC,MAAO,CAAEiC,QAAS,OAAQE,eAAgB,gBAAgBqH,aAAa,SAAUC,SAAU,OAAQxJ,MAAO,MAAOyJ,SAAS,WAA7J,SACKhI,EAAMiI,QAAQC,KAAI,SAACC,EAAcC,GAC9B,OACI,wBAAO/J,UAAU,cAAmCC,MAAO,CAACC,MAAM,MAAMgJ,UAAU,MAAOC,UAAW,QAAShJ,SAAS,SAAtH,UACI,uBAAOK,KAAK,WAAWR,UAAU,WAAgCO,GAAI,UAAYwJ,EAAGtM,MAAOsM,EAAGzH,SAAU,SAAA3C,GAAC,OAxCrI,SAAuBA,GACnB,GAAmB,IAAfgC,EAAMnB,KAAY,CAClB,IAAK,IAAIqI,EAAI,EAAGA,EAAIlH,EAAMiI,QAAQ7J,OAAQ8I,IACtC7E,SAASC,cAAc,WAAa4E,GAAGC,SAAU,EAGrD9E,SAASC,cAAc,IAAMtE,EAAE6C,OAAOjC,IAAIuI,SAAU,EAGxD,IADA,IAAIkB,EAAS,GACJnB,EAAI,EAAGA,EAAIlH,EAAMiI,QAAQ7J,OAAQ8I,KACiB,IAAnD7E,SAASC,cAAc,WAAa4E,GAAGC,SACvCkB,EAAOvG,KAAKoF,GAGpBlH,EAAMW,SAAS0H,GA0BsHC,CAActK,KAA1E,WAAaoK,GAC9D,sBAAK/J,UAAU,eAAeC,MAAO,CAAEwI,gBAAgB,OAAD,OAASqB,EAAaI,IAAtB,KAA8BC,iBAAkB,YAAaC,eAAgB,aAAnI,UACI,qBAAKpK,UAAU,WAAf,cAA+B,SAAW+J,GAC1C,qBAAK/J,UAAU,OAA2BC,MAAO,CAACC,MAAM,QAAxD,SAAkE4J,EAAazE,MAApD,UAAY0E,QAJX,WAAaA,e,MCyB9DM,MA1Ef,SAAsB1I,GA2BlB,OAzBArE,qBAAU,WACNmB,QAAQC,IAAIiD,EAAMiI,SAClB,IAAK,IAAIf,EAAI,EAAGA,EAAIlH,EAAMiI,QAAQ7J,OAAQ8I,IACtC7E,SAASC,cAAc,WAAa4E,GAAGC,SAAU,EAC7CnH,EAAMoH,aAAanE,QAAQiE,IAAM,IAAG7E,SAASC,cAAc,WAAa4E,GAAGC,SAAU,KAG9F,IAmBC,sBAAKvI,GAAG,0BAA0BN,MAAO,CAAE+I,QAASrH,EAAMsH,KAA1D,UACI,0BAASjJ,UAAU,kBAAkBC,MAAO,CAAEiC,QAAS,OAAQE,eAAgB,eAAgBD,WAAY,SAAUuH,SAAU,OAAQxJ,MAAO,MAAOyJ,SAAU,UAA/J,UACI,qBAAK1J,MAAO,CAACC,MAAM,OAAOgC,QAAS,OAAOE,eAAe,SAAUD,WAAY,SAAU8C,OAAQqF,OAAOC,WAAa,IAAM,MAAQ,OAAnI,SACI,qBAAKnK,IAAKuB,EAAM6I,KAAKN,IAAKjK,MAAO,CAAEgF,OAAO,OAAQwF,UAAU,UAAWpK,IAAKsB,EAAM6I,KAAKN,QAE3F,qBAAKjK,MAAO,CAACC,MAAM,OAAQ+E,OAAQqF,OAAOC,WAAa,IAAM,MAAQ,OAArE,SACI,cAAC,IAAD,CAASjC,IAAK,IACVD,IAAK,GACLpI,MAAO,CACH8E,MAAO,QACPmE,UAAW,MACXC,UAAW,MACXC,SAAU,MACVjJ,SAAU,MACVkJ,WAAY,EACZpI,OAAQ,OACRqI,UAAW,SACXC,WAAY,qBAXpB,SAYQ5H,EAAM6H,gBAGtB,yBAASxJ,UAAU,gBAAgBC,MAAO,CAAEiC,QAAS,OAAQE,eAAgB,eAAgBD,WAAY,SAAUuH,SAAU,OAAQxJ,MAAO,MAAOyJ,SAAU,UAA7J,SACKhI,EAAMiI,QAAQC,KAAI,SAACC,EAAcC,GAC9B,OACI,wBAAO/J,UAAU,gBAAwCC,MAAO,CAAEgF,OAAO,GAAD,OAAK,GAAKtD,EAAMiI,QAAQ7J,OAAxB,MAAxE,UACI,uBAAOS,KAAK,WAAWR,UAAU,WAAmCO,GAAI,UAAYwJ,EAAGtM,MAAOsM,EAAGzH,SAAU,SAAA3C,GAAC,OA3CpI,SAAuBA,GACnB,GAA2B,IAAvBgC,EAAM6I,KAAKE,QAAe,CAC1B,IAAK,IAAI7B,EAAI,EAAGA,EAAIlH,EAAMiI,QAAQ7J,OAAQ8I,IACtC7E,SAASC,cAAc,WAAa4E,GAAGC,SAAU,EAGrD9E,SAASC,cAAc,IAAMtE,EAAE6C,OAAOjC,IAAIuI,SAAU,EAGxD,IADA,IAAIkB,EAAS,GACJnB,EAAI,EAAGA,EAAIlH,EAAMiI,QAAQ7J,OAAQ8I,KACiB,IAAnD7E,SAASC,cAAc,WAAa4E,GAAGC,SACvCkB,EAAOvG,KAAKoF,GAGpBlH,EAAMW,SAAS0H,GA6BqHC,CAActK,KAA7E,cAAgBoK,GACjE,qBAAK/J,UAAU,eAAf,SACI,cAAC,IAAD,CAASA,UAAU,OAA8BsI,IAAK,IAClDD,IAAK,GACLpI,MAAO,CACHiJ,UAAW,MACXC,UAAW,MACXC,SAAU,MACVjJ,SAAU,MACVkJ,WAAY,EACZC,UAAW,SACXC,WAAY,qBATpB,SAUQO,EAAazE,MAVU,aAAe0E,IADf,YAAcA,KAFf,cAAgBA,YClC/DY,EAlBS,SAAAhJ,GAAU,IAAD,EACW1E,mBAAS,IADpB,mBACtB2N,EADsB,KACRC,EADQ,KAS7B,OAPAvN,qBAAU,WACN,IAAIwN,EAAkBnJ,EAAMwG,WAAWpI,OAAO,EAAzB,cAAoC4B,EAAMwG,WAA1C,KAAwD,GACzE4C,EAAgBpJ,EAAMqJ,SAASjL,OAAO,EAAvB,WAA+B4B,EAAMqJ,UAAW,GAC/DC,EAAStJ,EAAMwG,WAAWpI,OAAO,GAAO4B,EAAMqJ,SAASjL,OAAO,EAAI,IAAI,GAC1E8K,EAAiBE,EAAcE,EAAMH,GACrCrM,QAAQC,IAAIiD,EAAM6H,YACnB,IAEK,sBAAKvJ,MAAO,CAACgF,OAAO,QAAQ/E,MAAM,OAAOuI,gBAAgBmC,EAAeT,iBAAkB,YAAaC,eAAgB,QAASc,UAAW,SAAUhG,SAAU,SAA/J,UAC2B,QAAtBvD,EAAM6I,KAAKW,OAAmB,cAAC,EAAD,CAAW3K,KAAMmB,EAAM6I,KAAKE,QAASzB,IAAKtH,EAAMsH,IAAKO,SAAU7H,EAAM6H,SAAUI,QAASjI,EAAMiI,QAASb,aAAcpH,EAAMoH,aAAczG,SAAU,SAAC8I,GAASzJ,EAAMW,SAAS8I,MACrM,qBAAKnL,MAAO,CAAEiC,QAAS,UACN,WAAtBP,EAAM6I,KAAKW,OAAsB,cAAC,EAAD,CAAcX,KAAM7I,EAAM6I,KAAMvB,IAAKtH,EAAMsH,IAAKO,SAAU7H,EAAM6H,SAAUI,QAASjI,EAAMiI,QAASb,aAAcpH,EAAMoH,aAAczG,SAAU,SAAC8I,GAASzJ,EAAMW,SAAS8I,MACnM,qBAAKnL,MAAO,CAAEiC,QAAS,cCkC9BmJ,MAjDf,SAAoB1J,GAChB,IAAM2J,EAAKvP,EAASwP,YADG,EAEgBtO,mBAAS,IAFzB,mBAEhBuO,EAFgB,KAEHC,EAFG,KAyBvB,OAtBAnO,qBAAU,WACN,IAAIoO,EAAc,IACH,uCAAG,sBAAA9L,EAAA,sDAEd0L,EAAGK,WAAW,WAAWC,MAAM,SAAU,KAAMjK,EAAMkK,QAAQC,MAAMhN,MAAK,SAACiN,GACrEA,EAAc7E,SAAQ,SAAC8E,GAEnBN,EAAYjI,KAAKuI,EAAIhJ,WAEzB0I,EAAYO,MAAK,SAAUrM,EAAGsM,GAC1B,OAAIA,EAAEC,SAAWvM,EAAEuM,OAAiBD,EAAEE,KAAOxM,EAAEwM,KAAqBF,EAAEC,OAASvM,EAAEuM,UAErFV,EAAgBC,MAVN,2CAAH,qDAefW,GACA5N,QAAQC,IAAI8M,KAEb,IAGC,qBAAKvL,MAAO,CAAEC,MAAO,OAAQiJ,UAAW,OAAQQ,SAAU,OAAQL,UAAW,SAAUlH,eAAgB,SAASuG,aAAa,OAAQF,gBAAiB,ueAAtJ,SACI,wBAAOxI,MAAO,CAAEgB,OAAO,QAAvB,UACI,+BACI,sCACA,wCACA,8CAEJ,gCACCuK,GAAeA,EAAY3B,KAAI,SAACyC,EAAMvC,GACnC,OACI,+BACI,6BAAoBuC,EAAK1N,aAAhB,OAAOmL,GAChB,6BAAsBuC,EAAKH,QAAlB,SAASpC,GAClB,6BAAoBuC,EAAKF,MAAhB,OAAOrC,KAHXA,cCwClBwC,EA1EQ,SAAA5K,GAAU,IACrBzE,EAAgBL,IAAhBK,YADoB,EAEQD,mBAASC,EAAcA,EAAY0B,YAAc,IAFzD,mBAErB4N,EAFqB,KAETC,EAFS,KAGtBC,EAAWtN,iBAAOlC,EAAcA,EAAYyP,IAAM,IAoBxD,SAASC,IACLtC,OAAOuC,SAASC,OAAO5Q,qBACvBuC,QAAQC,IAAI,qBAGhB,SAASqO,EAAcC,GACnB,IAAIZ,EAAOY,EAAEC,MAAM,KACnB,OAA2B,KAApBvF,SAAS0E,EAAK,IAAiC,GAApB1E,SAAS0E,EAAK,IAAW1E,SAAS0E,EAAK,IAE7E,OAEI,sBAAKnM,MAAO,CAAEiC,QAAS,OAAQwH,SAAU,OAAQxJ,MAAO,OAAQ+E,OAAQ,QAASwE,aAAc,SAAUrH,eAAgB,SAAU2C,MAAO,QAASwE,WAAY,kBAC9Jd,gBAAiB,seAAwe2B,eAAgB,aAD1gB,UAEIzI,EAAMkK,OAAO9L,OAAS,GAAM,oBAAIE,MAAO,CAAEC,MAAO,OAAQoJ,UAAW,UAAvC,yBAC5B3H,EAAMkK,OAAO9L,OAAS,GAAK,cAAC,EAAD,CAAY8L,OAAQlK,EAAMkK,SACtD,wBAAQ7L,UAAU,UAAUC,MAAO,CAACiF,SAAS,WAAY6C,IAAI,EAAES,MAAM,EAAGL,WAAW,cAAcO,YAAY,MAAOT,OAAO,MAClH/G,QAAS,SAAAvB,GAAC,OAAIiN,KADvB,SAEa,qBAAKxM,IAAMlE,+BAA2CmE,IAAI,QAAQJ,MAAO,CAACC,MAAM,MAAM+E,OAAO,WAEzG,qBAAIhF,MAAO,CAAEC,MAAO,OAAQoJ,UAAW,UAAvC,sBAA6D3H,EAAMuL,KAAnE,KAA2EH,EAAcpL,EAAMyK,MAA/F,cACC,qBAAKnM,MAAO,CAAEC,MAAO,OAAQiJ,UAAW,OAAQQ,SAAU,OAAQL,UAAW,SAAUlH,eAAgB,SAASuG,aAAa,QAA7H,SACA,wBAAO1I,MAAO,CAAEgB,OAAQ,QAAxB,UACO,+BACI,0CACA,2CAGHU,EAAMwL,IAAItD,KAAI,SAACsD,EAAKpD,GACjB,OACI,+BACI,6BAAoBA,EAAI,GAAf,MAAMA,GACf,6BAAuBoD,EAAM,0CAAuB,2CAA3C,UAAUpD,KAFd,IAAIA,WAS5BpI,EAAMkK,OAAO9L,OAAS,GAAK,oBAAIE,MAAO,CAAEC,MAAO,OAAQoJ,UAAW,UAAvC,6CAE3BoD,EAAS5M,QAAQC,QAAU,GAAK,wBAAOC,UAAU,cAAcC,MAAO,CAAEC,MAAO,OAAQoJ,UAAW,UAAlE,iEACzB,uBAAO/I,GAAG,WAAWN,MAAO,CAAEoC,WAAY,QAAUC,SAAU,SAAA3C,GAAC,OAAI8M,EAAc9M,EAAE6C,OAAO/E,aAEjGkE,EAAMkK,OAAO9L,OAAS,GAAK,wBAAQC,UAAU,UAAUC,MAAO,CAAEgB,OAAQ,OAASC,QAAS,SAAAvB,GAtDpF5D,EAASwP,YACjBI,WAAW,WAAW3E,IAAI,CACzB6E,OAAQlK,EAAMkK,OACdjN,YAAa4N,EACbY,OAAQV,EAAS5M,QACjBqM,OAAQxK,EAAMuL,KACdd,KAAMW,EAAcpL,EAAMyK,QAC3BtN,MAAK,SAAAqN,GAASS,OAChB7N,OAAM,SAAAY,GAAIlB,QAAQC,IAAI,6BA8CS,6BAC3BiD,EAAMkK,OAAO9L,OAAS,GAAK,wBAAQC,UAAU,UAAUC,MAAO,CAAEgB,OAAQ,OAASC,QAAS,SAAAvB,GAAC,OAAIiN,KAApE,4BAC5B,qBAAK3M,MAAO,CAACiC,QAAS,OAAQhC,MAAO,OAAOkC,eAAgB,UAA5D,SACCT,EAAMkK,OAAO9L,QAAU,GAAK,wBAAQC,UAAU,UAAUC,MAAO,CAAEgB,OAAQ,OAASC,QAAS,SAAAvB,GAAC,OAAIiN,KAApE,8B,MCiD1BS,MApHf,SAAiB1L,GACf,IAAI2L,EAAe,CAAC5F,SAAS/F,EAAM2K,KAAKiB,KAAKvH,OAAQ0B,SAAS/F,EAAM2K,KAAKiB,KAAKtH,SAAUyB,SAAS/F,EAAM2K,KAAKiB,KAAKrH,UAC7GsH,EAAiB7L,EAAM2K,KAAKiB,KAAKpF,WACjCsF,EAAW9L,EAAM2K,KAAKA,KACtBA,EAAO,GACPoB,EAAY,GALM,EAMUzQ,mBAAS,GANnB,mBAMf0Q,EANe,KAMLC,EANK,OAOc3Q,mBAAS,IAPvB,mBAOf4Q,EAPe,KAOHC,EAPG,OAQQ7Q,mBAAS,IARjB,mBAQf8Q,EARe,KAQNC,EARM,OASQ/Q,mBAAS,IATjB,mBASfgR,EATe,KASNC,EATM,OAUMjR,mBAAS,GAVf,mBAUfkR,EAVe,KAUPC,EAVO,OAWQnR,mBAAS,GAXjB,mBAWfoR,EAXe,KAWNC,EAXM,OAYoBrR,mBAAS,IAZ7B,mBAYfsR,EAZe,KAYAC,EAZA,KAatB,SAASC,EAAWC,GAKlB,IAHA,IAAIC,EAAY,GACZC,EAAcF,EAAI3O,OAClB8O,EAAY,EACPhG,EAAI,EAAGA,EAAI+F,EAAa/F,IAC/BgG,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAAI3O,QAC3C4O,EAAUlL,KAAKiL,EAAIG,IACnBH,EAAIO,OAAOJ,EAAW,GAGxB,OAAOF,EAGT,SAASO,EAAaR,EAAKpH,GAIzB,IAFA,IAAIqH,EAAY,GACZE,EAAY,EACPhG,EAAI,EAAGA,EAAIvB,EAAGuB,IACrBgG,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAAI3O,QAC3C4O,EAAUlL,KAAKiL,EAAIG,IACnBH,EAAIO,OAAOJ,EAAW,GAExB,OAAOF,EA4BT,SAASQ,EAAcnC,GACrB,IAAI0B,EAAM,GACNpH,EAAI,EACR7I,QAAQC,IAAIsO,GACZ,IAAIoC,EAhBN,WAGE,IAFA,IAAIV,EAAM,GACNW,EAAW,GACNxG,EAAI,EAAGA,EAAI0F,EAAcxO,OAAQ8I,IAAK,CAC7CwG,EAAW,GACX,IAAK,IAAItF,EAAI,EAAGA,EAAIwE,EAAc1F,GAAGe,QAAQ7J,OAAQgK,KACR,IAAvCwE,EAAc1F,GAAGe,QAAQG,GAAGC,QAAiBqF,EAAS5L,KAAKsG,GAEjE2E,EAAIjL,KAAK4L,GAEX,OAAOX,EAMUY,GACjBhB,EAAW,GACX,IAAK,IAAIzF,EAAI,EAAGA,EAAIuG,EAAWrP,OAAQ8I,IACrC0G,KAAKC,UAAUJ,EAAWvG,MAAQ0G,KAAKC,UAAUzB,EAAQlF,IAAM6F,EAAIjL,MAAK,GAAQiL,EAAIjL,MAAK,IAC1E,IAAXiL,EAAI7F,KAAavB,GAAK,GAE5B7I,QAAQC,KAAM4I,EAAI8H,EAAWrP,OAAS,KAAK0P,QAAQ,GAAIlH,YACvD6F,GAAY9G,EAAI8H,EAAWrP,OAAS,KAAK0P,QAAQ,IACjDvB,EAAWQ,GACXZ,EAAcd,GACdvO,QAAQC,IAAIuP,GAyBd,OAtBA3Q,qBAAU,WACRmB,QAAQC,IAAIiD,EAAM2K,KAAK/L,IAEvB,IADA,IAAImP,EAAa,GACR7G,EAAI,EAAGA,EAAI4E,EAAS1N,OAAQ8I,IAEnC6G,EAAajB,EADbiB,EAAaR,EAAazB,EAAS5E,GAAG8G,OAAQlC,EAAS5E,GAAG2B,KAAKE,SAASkF,OAAOV,EAAazB,EAAS5E,GAAGgH,OAAQpC,EAAS5E,GAAG2B,KAAKsF,UAAYrC,EAAS5E,GAAG2B,KAAKE,WAG9J4B,EAAK7I,KAAK,CACR,KAAQgK,EAAS5E,GAAG2B,KACpB,SAAYiD,EAAS5E,GAAGW,SACxB,QAAWkG,IAEbhC,EAAUuB,OAAO,EAAG,EAAG,IAGzBjB,EAAWN,GACXc,EAAiBlC,GACjBtI,SAASC,cAAc,cAAchE,MAAMiC,QAAU,SACpD,IAKD,qCACG+L,EAAQlO,OAAS,GAAK,cAAC,EAAD,CAAgBoN,IAAKc,EAASf,KAAMiB,EAAQ/B,KAAMyB,EAAY1F,WAAYqF,EAAgB3B,OAAQlK,EAAMoO,MAAM,GAAGpO,EAAM2K,KAAK/L,KAClJgO,GAAiBN,EAAQlO,QAAU,GACpC,qBAAKE,MAAO,CAAEiF,SAAU,WAAY6C,IAAK,EAAGC,KAAM,EAAG9H,MAAO,OAAQ+E,OAAQ,OAA5E,SACA,cAAC,EAAD,CAAS0C,QAAS4G,EAAcxO,OAAQiG,MAAOsH,EAAa,GAAIrH,QAASqH,EAAa,GAAIpH,QAASoH,EAAa,GAAIlG,OAAQ,SAAC4F,GAAQmC,EAAcnC,IAAM1K,SAAU,SAAC0N,IAhExK,SAA8BA,GACxBA,EAAI,EAAKpC,EAAYoC,EAAI,IAE3BpC,EAAYoC,GACZ1B,EAAW,IA4DiK2B,CAAqBD,QAGhMzB,GAAiBN,EAAQlO,QAAU,GAAK,cAAC,EAAD,CAAiBoI,WAAYqF,EAAgBxC,SAAUrJ,EAAM2K,KAAKiB,KAAKvC,SAAYR,KAAM+D,EAAcZ,GAAUnD,KAAMvB,IAAKoF,EAAS7E,SAAU+E,EAAcZ,GAAUnE,SAAUI,QAAS2E,EAAcZ,GAAU/D,QAASb,aAAcgF,EAAQJ,GAAWrL,SAAU,SAAC8I,IAzEpT,SAAuBA,GACrB,IAAI8E,EAAenC,EACnBmC,EAAajB,OAAOtB,EAAU,EAAGvC,GACjC4C,EAAWkC,GAsEgTC,CAAc/E,UCjH9T,SAASgF,IAAiB,MAEjBnT,mBAAS,IAFQ,mBAEhCqP,EAFgC,KAE1B+D,EAF0B,OAGXpT,oBAAS,GAHE,mBAGhCG,EAHgC,KAGvBC,EAHuB,KAIjCiO,EAAKvP,EAASwP,YACdhL,EAAO+P,cAAP/P,GAcN,OAbAjD,qBAAU,WACPgO,EAAGK,WAAW,SAASK,IAAIzL,GAAIuL,MAAMhN,MAAK,SAACiN,GAE1CsE,EAAQ,2BAAKtE,EAAc/I,QAApB,IAA4BzC,GAAIA,KACvClD,GAAW,MAEX0B,OAAM,SAAAC,GACNP,QAAQC,IAAIM,QAKb,IAED,mCACH5B,GAAW,cAAC,EAAD,CAASkP,KAAMA,EAAMyD,OAAO,M,MCkFzBQ,MArGf,SAAa5O,GAAQ,IAAD,EAC4B1E,oBAAS,GADrC,mBACTuT,EADS,KACOC,EADP,KAERvT,EAAgBL,IAAhBK,YAFQ,EAGoBD,mBAAS,IAH7B,mBAGTyT,EAHS,KAGGC,EAHH,KAKhB,SAASC,IACLH,GAAmBD,GAkCvB,OAhCAlT,qBAAU,WACN,IAAIuT,EAAW3U,qCACXgB,GAAcA,EAAY2B,SAAS,GAAK8R,EAAczT,EAAY2B,UAElE8R,EAAcE,KAGnB,CAAC3T,IACJI,qBAAU,WACHgN,OAAOC,WAAW,MAEjBvG,SAASC,cAAc,cAAchE,MAAMiC,QAD3CsO,EACmD,OAGA,WAIzD,CAACA,IACHlT,qBAAU,WACFgN,OAAOC,YAAY,KACnBvG,SAASC,cAAc,cAAchE,MAAMiC,QAAQ,OACnD8B,SAASC,cAAc,cAAchE,MAAMmC,eAAe,SAC1D4B,SAASC,cAAc,cAAchE,MAAMC,MAAM,OAGjD8D,SAASC,cAAc,cAAchE,MAAMiC,QAAQ,SAIzD,CAACoI,OAAOC,aAGN,sBAAKvK,UAAU,SAAf,UAEKsK,OAAOC,WAAW,IAAO,cAAC,IAAD,CAAM7K,GAAG,IAAT,SAAa,qBAAKM,UAAU,eAAeI,IAAKsQ,EAAYrQ,IAAI,aACxF,eAAC,IAAD,CAAMX,GAAG,IAAIM,UAAU,YAAvB,cAAoC,qBAAKI,IAAMlE,kCAA8CmE,IAAI,QAAQJ,MAAO,CAACC,MAAM,QAAQ+E,OAAO,YAChJqF,OAAOC,WAAW,IAAO,eAAC,IAAD,CAAM7K,GAAG,IAAIM,UAAU,YAAvB,UACjB,qBAAKI,IAAMlE,kCAA8CmE,IAAI,OAAOJ,MAAO,CAACC,MAAM,MAAM+E,OAAO,SAD9E,eAC0G,KAC1HqF,OAAOC,WAAW,IAAO,sBAAMhK,GAAG,iBAAkBW,QAAS0P,EAApC,SACtB,qBAAK3Q,MAAO,CAAEC,MAAO,MAAO+E,OAAQ,MAAM6L,MAAM,UAAhD,SACIN,EACC,qBAAKpQ,IAAMlE,gCAA4CmE,IAAI,SAC5D,qBAAKD,IAAMlE,+BAA2CmE,IAAI,cAEzD,KAEL,qBAAIE,GAAG,YAAP,WAGKrD,GAAe,oBAAI8C,UAAU,WAAd,SACZ,cAAC,IAAD,CAAMN,GAAG,SAASM,UAAU,WAAWkB,QAAS,SAAAqB,GAAK,OAAIqO,KAAzD,sBAKF1T,GAAe,oBAAI8C,UAAU,WAAd,SACb,cAAC,IAAD,CAAMN,GAAG,UAAUM,UAAU,WAAWkB,QAAS,SAAAqB,GAAK,OAAIqO,KAA1D,sBAMJ,oBAAI5Q,UAAU,WAAd,SACI,cAAC,IAAD,CAAMN,GAAG,QAAQM,UAAU,WAAWkB,QAAS,SAAAqB,GAAK,OAAIqO,KAAxD,0BAIF1T,EAAc,oBAAI8C,UAAU,WAAd,SACZ,cAAC,IAAD,CAAMN,GAAG,UAAUM,UAAU,WAAWkB,QAAS,SAAAqB,GAAK,OAAIqO,KAA1D,4BAGE,GACN,oBAAI5Q,UAAU,WAAd,SACI,cAAC,IAAD,CAAMN,GAAG,IAAIM,UAAU,WAAWkB,QAAS,SAAAqB,GAAK,OAAIqO,KAApD,qBAIJ,oBAAI5Q,UAAU,WAAd,SACI,cAAC,IAAD,CAAMN,GAAG,UAAUM,UAAU,WAAWkB,QAAS,SAAAqB,GAAK,OAAKqO,KAA3D,yBAOXtG,OAAOC,WAAW,IAAO,KAAM,cAAC,IAAD,CAAM7K,GAAG,IAAT,SAC7B,qBAAKM,UAAU,eAAgBI,IAAKsQ,EAAYrQ,IAAI,wBCrDpD0Q,G,MA7CQ,SAAApP,GA2BnB,OAxBArE,qBAAU,WACN,IAAK,IAAIuL,EAAI,EAAGA,EAAGlH,EAAMiI,QAAQ7J,OAAQ8I,IACrC7E,SAASC,cAAc,aAAe4E,GAAGC,SAAU,EAC/CnH,EAAMoH,aAAanE,QAAQiE,IAAM,IAAG7E,SAASC,cAAc,aAAe4E,GAAGC,SAAU,GAE/FrK,QAAQC,IAAIiD,EAAMiI,WACpB,IAmBE,cAAC,WAAD,UACQ,yBAAS5J,UAAU,oBAAnB,SACK2B,EAAMiI,QAAQC,KAAI,SAACC,EAAcC,GAC9B,OACI,wBAAO/J,UAAU,cAAmCC,MAAO,CAACC,MAAM,MAAMiJ,UAAU,QAAShJ,SAAS,QAASc,OAAO,OAApH,UACI,uBAAOT,KAAK,WAAWR,UAAU,WAAgCO,GAAI,YAAcwJ,EAAGtM,MAAOsM,EAAGzH,SAAU,SAAA3C,GAAC,OAvBvI,SAAuBA,GACnB,GAAmB,IAAfgC,EAAMnB,KAAY,CAClB,IAAK,IAAIqI,EAAI,EAAGA,EAAIlH,EAAMiI,QAAQ7J,OAAQ8I,IACtC7E,SAASC,cAAc,aAAe4E,GAAGC,SAAU,EAGvD9E,SAASC,cAAc,IAAMtE,EAAE6C,OAAOjC,IAAIuI,SAAU,EAGxD,IADA,IAAIkB,EAAS,GACJnB,EAAI,EAAGA,EAAIlH,EAAMiI,QAAQ7J,OAAQ8I,KACmB,IAArD7E,SAASC,cAAc,aAAe4E,GAAGC,SACzCkB,EAAOvG,KAAKoF,GAGpBlH,EAAMW,SAAS0H,GASwHC,CAActK,KAA5E,WAAaoK,GAC9D,sBAAK/J,UAAU,eAAeC,MAAO,CAAEwI,gBAAgB,OAAD,OAASqB,EAAaI,IAAtB,KAA8BC,iBAAkB,YAAaC,eAAgB,aAAnI,UACI,qBAAKpK,UAAU,WAAf,cAA+B,SAAW+J,GAC1C,qBAAK/J,UAAU,OAA2BC,MAAO,CAACC,MAAM,QAAxD,SAAkE4J,EAAazE,MAApD,UAAY0E,QAJX,WAAaA,YCoL9DiH,MAjNf,SAAkBrP,GACd,IAAM2J,EAAKvP,EAASwP,YACZrO,EAAgBL,IAAhBK,YAFa,EAGkBD,mBAAS,IAH3B,mBAGduO,EAHc,KAGDC,EAHC,OAIgCxO,mBAAS,IAJzC,mBAIdgU,EAJc,KAIMC,EAJN,OAKiBjU,oBAAS,GAL1B,mBAKdoJ,EALc,KAKDC,EALC,OAMerJ,mBAAS,IANxB,mBAMdsJ,EANc,KAMFC,EANE,OAOiBvJ,oBAAS,GAP1B,mBAOdkU,EAPc,KAODC,EAPC,OAQuBnU,mBAAS,MARhC,mBAQdoU,EARc,KAQEC,EARF,OASerU,mBAAS,IATxB,mBASdsU,EATc,KASFC,EATE,OAU2BvU,mBAAS,IAVpC,mBAUdwU,EAVc,KAUIC,EAVJ,OAWSzU,mBAAS,IAXlB,mBAWd6L,EAXc,KAWL6I,EAXK,OAYe1U,mBAAS,IAZxB,mBAYd2U,EAZc,KAYFC,EAZE,QAa6C5U,oBAAS,GAbtD,qBAad6U,GAbc,MAaaC,GAbb,MA6Ef1F,GAAS,uCAAG,8BAAAzM,EAAA,6DACVoS,EAAU,GADA,SAEK1G,EAAGK,WAAW,SAASG,MAF5B,OAER9I,EAFQ,QAIVgP,EADkB,WAAlBrQ,EAAMsQ,QACIjP,EAAKkP,KAAKrI,KAAI,SAAAmC,GAAG,kCAAUA,EAAIhJ,QAAd,IAAsBzC,GAAIyL,EAAIzL,QAAO4R,QAAO,SAAAnG,GAAG,OAAKA,EAAIuB,KAAK6E,SAAWzQ,EAAMnE,MAAmC,QAAzBwO,EAAIuB,KAAK8E,eAElHrP,EAAKkP,KAAKrI,KAAI,SAAAmC,GAAG,kCAAUA,EAAIhJ,QAAd,IAAsBzC,GAAIyL,EAAIzL,QAAO4R,QAAO,SAAAnG,GAAG,OAAKA,EAAIuB,KAAK6E,SAAWzQ,EAAMnE,MAAkC,WAAxBwO,EAAIuB,KAAK+E,eACxHrG,MAAK,SAAUrM,EAAGsM,GACtB,IAAIqG,EAAQ3S,EAAE2N,KAAKhP,KAAKiU,cACpBC,EAAQvG,EAAEqB,KAAKhP,KAAKiU,cACxB,OAAID,EAAQE,GACA,EAERF,EAAQE,EACD,EAIJ,KAGXhH,EAAgBuG,GAChBd,EAAuBc,GAtBT,2CAAH,qDAwBTU,GAAe,uCAAG,8BAAA9S,EAAA,sEAED0L,EAAGK,WAAW,cAAcG,MAF3B,OAEd9I,EAFc,QAGhBgP,EAAUhP,EAAKkP,KAAKrI,KAAI,SAAAmC,GAAG,sBAAUA,EAAIhJ,YACrCiJ,MAAK,SAAUrM,EAAGsM,GACtB,IAAIqG,EAAQ3S,EAAE+S,MAAMH,cAChBC,EAAQvG,EAAEyG,MAAMH,cACpB,OAAID,EAAQE,GACA,EAERF,EAAQE,EACD,EAIJ,KAGXjB,EAAcQ,GACdA,EAAUA,EAAQnI,KAAI,SAAA+I,GAAY,MAAQ,CAAE,KAAQA,EAAOnV,MAAOyM,IAAKhO,sCACvEuC,QAAQC,IAAIsT,GACZN,EAAoBM,GArBA,2CAAH,qDA2ErB,OAnBA1U,qBAAU,WACNoV,KACArG,OACD,IACH/O,qBAAU,WACN,IAAIuV,EAAYrH,EACZsH,EAAY,GAEhB,GADArU,QAAQC,IAAI2S,GACRA,EACA,IADiB,IAAD,WACPxI,GAEL,IADA,IAAIkK,EAAU,GACLhJ,EAAI,EAAGA,EAAI8I,EAAU9S,OAAQgK,IAC9B8I,EAAU9I,GAAGwD,KAAKgE,WAAWyB,WAAU,SAAU1L,GAAK,OAAOA,EAAE7J,QAAU4T,EAAexI,GAAGpL,UAAa,GAAGsV,EAAQtP,KAAKoP,EAAU9I,IAE1I+I,EAAYA,EAAUlD,OAAOmD,IALxBlK,EAAI,EAAGA,EAAIwI,EAAetR,OAAQ8I,IAAM,EAAxCA,GAQbqI,EAAuB4B,KACxB,CAACzB,IAEA,sBAAKpR,MAAO,CAAEC,MAAO,OAAQC,SAAU,QAAS8E,OAAQ,OAAQhE,OAAQ,UAAxE,UACKwQ,GACG,cAAC,EAAD,CAAgBjR,KAAMiR,EAAiB1R,OAAQ6J,QAAS6H,EAAkB1I,aAAcD,EAASxG,SAAU,SAAC8I,IAvDxH,SAAyBA,GACrBuG,EAAWvG,GACVA,EAAGrL,OAAS,EAAKuR,EAAkBC,EAAWY,QAAO,SAAC7K,EAAGyC,GAAJ,OAAUqB,EAAGxG,QAAQmF,IAAM,MAAMuH,EAAkBC,GAqDoB0B,CAAgB7H,MAEzI,qBAAKnL,MAAO,CAAEwF,gBAAiB,QAASvF,MAAO,MAAO+E,OAAQ,MAAO0E,SAAU,OAAQ1I,OAAQ,QAA/F,SACKgQ,GAAsBA,EAAmBpH,KAAI,SAACyC,EAAMvC,GACjD,OACI,sBAA0B9J,MAAO,CAAEiC,QAAS,OAAQjB,OAAQ,OAA5D,UACI,wBAAQjB,UAAU,UAAUC,MAAO,CAAEmI,SAAU,kBAAmBnH,OAAQ,EAAGiS,WAAY,UAAqCzV,MAAO6O,EAAK/L,GAAIW,QAAS,SAAAvB,GAAC,OA1JhL,SAAoBA,GAChB,IAAIwT,EAAQxT,EAAE6C,OAAO4Q,aAAa,SAClC3U,QAAQC,IAAIyU,GACZ3M,EAAc,CACVrB,YAAa,UACbC,QAAS,sBACTC,KAAK,wDAAD,OAA0D8N,GAC9DrO,OAAQ,GACRa,QAAS,GACTX,OAAQ,YACRY,QAAS,WAEbU,GAAe,GA8IiK+M,CAAW1T,IAAvK,8BAA0G,eAAiBoK,GACvG,WAAlBpI,EAAMsQ,SACJ,yBAAQjS,UAAU,UAAUC,MAAO,CAAEmI,SAAU,kBAAmBnH,OAAQ,EAAGiS,WAAY,UAAsCzV,MAAO6O,EAAK/L,GAAIW,QAAS,SAAAvB,GAAC,OA9IrL,SAAsBA,GAClB,IAAIwT,EAAQxT,EAAE6C,OAAO4Q,aAAa,SAClChC,EAAe+B,GACf,IAAIG,EAAa9H,EAAY3B,KAAI,SAAU0J,GAAK,OAAOA,EAAEhT,MAAOqE,QAAQuO,GACpEK,EAAWhI,EAAY8H,GAC3B9M,EAAc,CACVrB,YAAa,SACbC,QAAS,UACTC,KAAK,mCAAD,OAAqCmO,EAASjG,KAAKhP,KAAnD,sBAAqEiV,EAASjG,KAAKkG,YACvF3O,OAAQ,SACRa,QAAS,SACTX,OAAQ,YACRY,QAAS,WAEbU,GAAe,GAgIsKoN,CAAa/T,IAA1K,iBAAkL,qBAAKS,IAAKlE,+BAA6CmE,IAAI,QAAQJ,MAAO,CAAEC,MAAO,iBAAkB+E,OAAQ,sBAArL,gBAAkB8E,GAEhI,sBAA2B/J,UAAU,WAAWC,MAAO,CAAE0T,OAAQ,UAAWT,WAAY,SAAUhT,MAAO,QAAUzC,MAAO6O,EAAK/L,GAAIW,QAAS,SAAAvB,GAAC,OAhIrK,SAAqB2M,GACjB7N,QAAQC,IAAI4N,EAAK9J,OAAO4Q,aAAa,UACf,WAAlBzR,EAAMsQ,SACNzL,EAAc,CACVrB,YAAa,SACbC,QAAS,UACTC,KAAK,yEACLP,OAAQ,SACRa,QAAS,UACTX,OAAQ,YACRY,QAAS,WAEbU,GAAe,GACfuL,EAAcrG,EAAY2G,QAAO,SAAAyB,GAAI,OAAIA,EAAKrT,KAAO+L,EAAK9J,OAAO4Q,aAAa,YAAU,KACnFzR,EAAMW,SAASkJ,EAAY2G,QAAO,SAAAyB,GAAI,OAAIA,EAAKrT,KAAO+L,EAAK9J,OAAO4Q,aAAa,YAAU,IAkHmES,CAAYlU,IAA7J,UAAmK2M,EAAKiB,KAAKhP,KAA7K,OAAuL+N,EAAKiB,KAAKkG,WAAjM,MAAU,YAAc1J,KALlB,WAAaA,QAWlC7M,GAAe,kCACZ,uBAAOsD,KAAK,WAAWD,GAAG,qBAAqBN,MAAO,CAAEoC,WAAY,MAAQC,SAAU,SAAA3C,GAAC,OAAIoS,GAA6B/N,SAASC,cAAc,uBAAuB6E,YAD1J,oCAIf5L,GAAe4U,IAA6B,uBAAOtR,KAAK,OAAOD,GAAG,YAAY+B,SAAU,SAAA3C,GAAC,OAvElG,SAAwBmU,GACpB,IAAIC,EAAID,EAAItR,OAAOC,MAAM,GACzB,GAAIsR,EAAG,CACH,IAAIC,EAAI,IAAIC,WACZD,EAAEE,OAAS,SAAUvU,GACjBkS,EAActC,KAAK4E,MAAMxU,EAAE6C,OAAO2J,SACZ,WAAlBxK,EAAMsQ,SACNzL,EAAc,CACVrB,YAAa,SACbC,QAAS,UACTC,KAAK,yEACLP,OAAQ,SACRa,QAAS,UACTX,OAAQ,YACRY,QAAS,WAEbU,GAAe,KAEf3E,EAAMW,SAASiN,KAAK4E,MAAMxU,EAAE6C,OAAO2J,SACnCxK,EAAMyS,SAAQ,KAItBJ,EAAEK,WAAWN,QAGbO,MAAM,uBA6CwFC,CAAe5U,MAC5G0G,GAAe,cAACjC,EAAD,CAAWsB,SA1LlB,SAACoC,GACdxB,GAAe,GACG,WAAdwB,GACAwD,EAAGK,WAAW,SAASK,IAAImF,GAAaqD,SACnC1V,MAAK,SAAAqO,GACF1O,QAAQC,IAAI,WACZiD,EAAM8S,cAAa,MAEtB1V,OAAM,SAAAC,GACHP,QAAQC,IAAI,8BAGN,YAAdoJ,IACAnG,EAAMW,SAASsP,GACfjQ,EAAMyS,SAAQ,KA4KiCvP,QAAS0B,IACpC,SAAlB5E,EAAMsQ,SAAuB,cAAC,IAAD,CAAMvS,GAAG,iCAAT,SAC3B,wBAAQM,UAAU,SAAlB,kC,MCvLD0U,MAlBf,WAA+B,IAAD,EAEIzX,oBAAS,GAFb,mBAErB0X,EAFqB,KAEXC,EAFW,OAGM3X,oBAAS,GAHf,mBAGrB4X,EAHqB,KAGVC,EAHU,KAIpB5X,EAAgBL,IAAhBK,YAMR,OACE,sBAAK8C,UAAU,gBAAf,WACI2U,GAAY,cAAC,EAAD,CAAUnX,KAAMN,EAAcA,EAAYyP,IAAM,GAAIsF,QAAS,OAAQmC,QAAS,SAAAW,GAAC,OAAID,EAAaC,IAAIzS,SAAU,SAAAgF,GAAC,OANjI,SAAuBA,GACrB7I,QAAQC,IAAI4I,GACZsN,EAAYtN,GAIuH0N,CAAc1N,MAC9IqN,GAAY,cAAC,EAAD,CAASrI,KAAMqI,EAAU5E,MAAO8E,Q,QCgCpCI,MAlDf,SAAiBtT,GAAQ,IAAD,EACgB1E,mBAAS0E,EAAMuT,OAAO7P,MADtC,mBACb8P,EADa,KACDC,EADC,OAEUnY,mBAAS0E,EAAMuT,OAAOhL,KAFhC,mBAEb2G,EAFa,KAEJwE,EAFI,OAGYpY,qBAHZ,mBAGbqY,EAHa,KAGHC,EAHG,KAkBpB,SAASC,EAAS5V,EAAGsM,GACjB,IAAIlC,EAAS,CACT3E,KAAMzF,EACNsK,IAAKgC,EACLuJ,IAAK9T,EAAM8T,KAEf9T,EAAMW,SAAS0H,GAanB,OAXA1M,qBAAU,WACN8X,EAAczT,EAAMuT,OAAO7P,MACvB1D,EAAMuT,OAAOhL,IAAInK,OAAS,GAC1BwV,GAAY,GACZvR,SAASC,cAAc,UAAUtC,EAAM8T,IAAI9T,EAAM+T,KAAK5M,SAAQ,EAC9DuM,EAAW1T,EAAMuT,OAAOhL,OAExBlG,SAASC,cAAc,UAAUtC,EAAM8T,IAAI9T,EAAM+T,KAAK5M,SAAQ,EAC9DyM,GAAY,MAEjB,CAAC5T,EAAMuT,SAEF,gCACI,0BAAUjV,MAAO,CAAEC,MAAO,QAAUzC,MAAO0X,EAAY7S,SAAU,SAAA3C,GAAC,OA9B9E,SAAqBA,GACjByV,EAAczV,EAAE6C,OAAO/E,OACvB+X,EAAS7V,EAAE6C,OAAO/E,MAAOoT,GA4BqD8E,CAAYhW,MAClF,wBAAOM,MAAO,CAAE8E,MAAO,QAAS7E,MAAO,QAAvC,UACI,uBAAOM,KAAK,WAAWD,GAAI,SAAWoB,EAAM8T,IAAI9T,EAAM+T,IAAKpT,SAAU,SAAA3C,GAAC,OAAI4V,EAAYvR,SAASC,cAAc,UAAUtC,EAAM8T,IAAI9T,EAAM+T,KAAK5M,YADhJ,6BAGCwM,GAAY,gCACT,uBAAO9U,KAAK,OAAOP,MAAO,CAAEC,MAAO,MAAO8I,QAASsM,GAAY7X,MAAOoT,EAASvO,SAAU,SAAA3C,GAAC,OA/B1G,SAAqBA,GACjB0V,EAAW1V,EAAE6C,OAAO/E,OACpBgB,QAAQC,IAAImS,GACZ2E,EAASL,EAAYxV,EAAE6C,OAAO/E,OA4B4EmY,CAAYjW,MAC1G,cAAC,EAAD,CAAYM,MAAO,CAAEC,MAAO,QAAS6D,UAAW,QAAS9C,OAAQ,QAAUkC,UAzCzE,SAAC3E,GACfwF,SAASC,cAAc,YAAYxG,MAAQe,EAC3C6W,EAAW7W,GACXgX,EAASL,EAAY3W,aC8CdqX,MApDf,SAAoBlU,GAAO,MA2BO1E,mBAAS,IA3BhB,mBA2BhB2M,EA3BgB,KA2BPkM,EA3BO,KA+BvB,OAHAxY,qBAAU,WACNwY,EAAWnU,EAAMiI,WAClB,CAACjI,EAAMiI,UAEN,qBAAK3J,MAAO,CAACiC,QAAQ,OAAQC,WAAW,QAASC,eAAe,SAAhE,SACI,qBAAKnC,MAAO,CAACC,MAAM,OAAnB,SACI,gCACK0J,GAAWA,EAAQC,KAAI,SAACC,EAAcC,GACnC,OACI,sBAA6C9J,MAAO,CAAEiF,SAAU,WAAYjE,OAAQ,OAApF,UACI,wBAAQjB,UAAU,UAAUC,MAAO,CAACmI,SAAS,kBAAmB0I,MAAM,QAAQ7P,OAAO,GAAiExD,MAAOsM,EAAG7I,QAAS,SAAAvB,GAAC,OAjBtM,SAAsBA,GAClBgC,EAAMoU,SAASpW,EAAE6C,OAAO/E,OAgB8KiW,CAAa/T,IAA3L,SAA+L,qBAAKS,IAAMlE,+BAA2CmE,IAAI,QAAQJ,MAAO,CAACC,MAAM,kBAAkB+E,OAAO,sBAAzMtD,EAAM+I,QAAQ,kBAAkB,kBAAoBX,GACnJ,wBAAQ/J,UAAU,UAAUC,MAAO,CAACmI,SAAS,kBAAmB0I,MAAM,QAAS7P,OAAO,GAAgExD,MAAOsM,EAAG7I,QAAS,SAAAvB,GAAC,OAftM,SAAoBA,GAChBgC,EAAMqU,OAAOrW,EAAE6C,OAAO/E,OAcgLwY,CAAWtW,IAAzL,6BAAiGgC,EAAM+I,QAAQ,iBAAiB,iBAAmBX,GACnJ,cAAC,EAAD,CAA2D2L,IAAK/T,EAAM+I,QAAQ,QAAQ,QAAS+K,IAAK1L,EAAGmL,OAAQpL,EAAciM,SAAU,SAAApW,GAAC,OAAIA,EAAE6C,OAAO/E,OAAOyY,MAAO,SAAAvW,GAAC,OAAIA,EAAE6C,OAAO/E,OAAO6E,SAAU,SAAC0K,GAAD,OA7B9N,SAA0BA,GACtB,IAAImJ,EAAWxU,EAAMiI,QACrB,GAAgB,KAAXoD,EAAE3H,MAA2B,KAAV2H,EAAE9C,IACtBiM,EAASlH,OAAOjC,EAAEyI,IAAK,OACpB,CACH,IAAIW,EAAc,CAAE/Q,KAAM2H,EAAE3H,KAAM6E,IAAK8C,EAAE9C,IAAKF,OAAQrI,EAAM+I,SAC5DyL,EAASlH,OAAOjC,EAAEyI,IAAK,EAAGW,GAE9BzU,EAAMW,SAAS6T,GAqBkNE,CAAiBrJ,KAA5MrL,EAAM+I,QAAQ,aAAaX,EAAE,aAAaA,KAHlDpI,EAAM+I,QAAQ,QAAQX,EAAE,QAAQA,MAQlD,wBAAQ/J,UAAU,UAAUC,MAAO,CAACmI,SAAS,kBAAmBnH,OAAO,GAAKC,QAAS,SAAAvB,IAxCrG,WACI,IAAI2W,EAAU/G,KAAK4E,MAAMoC,aAAaC,QAAQ,eAC9B,OAAZF,IACJA,EAAUtM,OAAOrI,EAAM+I,QACvB/I,EAAMuU,MAAMI,IAoC4FG,IAA5F,+BACA,wBAAQzW,UAAU,UAAUC,MAAO,CAACmI,SAAS,kBAAmBnH,OAAO,GAAKC,QAAS,SAAAvB,IA7CrG,WACI,IAAI+W,EAAW,CAAErR,KAAM,GAAI6E,IAAK,GAAIF,OAAQrI,EAAM+I,SAClD/I,EAAMuU,MAAMQ,GA2C4FC,IAA5F,gCC2DLC,MAzGf,SAAqBjV,GACjB,IAAIkV,EAAc,GADM,EAGI5Z,mBAAS,IAHb,mBAGjB0S,EAHiB,KAGTmH,EAHS,OAII7Z,mBAAS,IAJb,mBAIjB4S,EAJiB,KAITkH,EAJS,KAqBxB,SAASC,EAAiBhK,EAAGiK,GACrBA,EACAJ,EAAYlH,OAAS3C,EAGrB6J,EAAYhH,OAAS7C,EAGzBrL,EAAMW,SAASuU,GAEnB,SAASK,EAAe5P,EAAG2P,GACdJ,EAARI,EAAsBtV,EAAMqO,EAAEL,OAAOrI,GAAmB3F,EAAMqO,EAAEH,OAAOvI,GACxEiP,aAAaY,QAAQ,aAAc5H,KAAKC,UAAUqH,IAEtD,SAASO,EAAUzX,EAAGsX,GACdA,GACAJ,EAAclV,EAAMqO,EAAEL,QACVlM,KAAK,CAAE4B,KAAM1F,EAAE0F,KAAM6E,IAAKvK,EAAEuK,IAAKF,QAAQ,KAErD6M,EAAclV,EAAMqO,EAAEH,QACVpM,KAAK,CAAE4B,KAAM1F,EAAE0F,KAAM6E,IAAKvK,EAAEuK,IAAKF,QAAQ,IAEzDrI,EAAMW,SAASuU,GAInB,SAASQ,EAAU/P,EAAG2P,GACdA,GACAJ,EAAclV,EAAMqO,EAAEL,QACVV,OAAO3H,EAAG,IAEtBuP,EAAclV,EAAMqO,EAAEH,QACVZ,OAAO3H,EAAG,GAE1B3F,EAAMW,SAASuU,GAGnB,OA/CAvZ,qBAAU,WACN0G,SAASC,cAAc,aAAaxG,MAAQkE,EAAMqO,EAAExG,SACpDxF,SAASC,cAAc,YAAYxG,MAAQkE,EAAMqO,EAAExF,KAAKN,IACxDlG,SAASC,cAAc,mBAAmBxG,MAAQkE,EAAMqO,EAAExF,KAAKsF,UAC/D9L,SAASC,cAAc,iBAAiBxG,MAAQkE,EAAMqO,EAAExF,KAAKE,QAC7D1G,SAASC,cAAc,YAAYxG,MAAQkE,EAAMqO,EAAExF,KAAKW,OACxD2L,EAAUnV,EAAMqO,EAAEL,QAClBoH,EAAUpV,EAAMqO,EAAEH,UAEnB,CAAClO,EAAMqO,IAuCN,eAAC,WAAD,WACI,wBAAOhQ,UAAU,cAAjB,gCACA,0BAAUO,GAAG,WAAW+B,SAAU,SAAA3C,GAAOgC,EAAMW,SAAS,CAAE,SAAY3C,EAAE6C,OAAO/E,cAE/E,uBACA,wBAAOuC,UAAU,cAAjB,kEACA,uBAAOO,GAAG,UAAU+B,SAAU,SAAA3C,GAAOgC,EAAMW,SAAS,CAAE,QAAW3C,EAAE6C,OAAO/E,cAE1E,cAAC,EAAD,CAAY0F,UA9DF,SAAC3E,GACfwF,SAASC,cAAc,YAAYxG,MAAQe,EAC3CmD,EAAMW,SAAS,CAAE,QAAW9D,OA6DxB,wBAAOwB,UAAU,cAAjB,mCACI,wBAAQO,GAAG,UAAU+B,SAAU,SAAA3C,GAAOgC,EAAMW,SAAS,CAAE,QAAW3C,EAAE6C,OAAO/E,SAA3E,SA3DE,CAAC,SAAU,OA4DAoM,KAAI,SAAC+I,EAAQ/J,GAClB,OACI,wBAAQpL,MAAOmV,EAAf,SAAkDA,GAAtB,gBAAkB/J,WAM9D,sBAAK7I,UAAU,gBAAf,UACI,yBAASA,UAAU,SAAnB,SACI,kCACI,uBAAOO,GAAG,iBAAiBC,KAAK,SAAS6H,IAAK,EAAGC,IAAKqH,EAAO5P,OAAS8P,EAAO9P,OAASuC,SAAU,SAAA3C,GAAOgC,EAAMW,SAAS,CAAE,eAAkB3C,EAAE6C,OAAO/E,WADvJ,2FAKJ,yBAASuC,UAAU,SAAnB,SACI,kCACI,uBAAOO,GAAG,eAAeC,KAAK,SAAS6H,IAAK,EAAGC,IAAKqH,EAAO5P,OAASuC,SAAU,SAAA3C,GAAOgC,EAAMW,SAAS,CAAE,aAAgB3C,EAAE6C,OAAO/E,WADnI,4GAMR,sBAAKuC,UAAU,gBAAf,UACI,0BAASA,UAAU,SAAnB,UACI,uBAAOA,UAAU,cAAjB,gDACC2P,GAAU,cAAC,EAAD,CAAY/F,QAAS+F,EAAQjF,SAAS,EAAMqL,SAAU,SAACzO,GAAD,OAAO+P,EAAU/P,EAAG,IAAI4O,MAAO,SAACvW,GAAD,OAAOyX,EAAUzX,EAAG,IAAI2C,SAAU,SAAC0K,GAAD,OAAOgK,EAAiBhK,EAAG,IAAIgJ,OAAQ,SAAChJ,GAAD,OAAOkK,EAAelK,EAAG,SAEtM,0BAAShN,UAAU,SAAnB,UACI,uBAAOA,UAAU,cAAjB,8CACC6P,GAAU,cAAC,EAAD,CAAYjG,QAASiG,EAAQnF,SAAS,EAAOqL,SAAU,SAACzO,GAAD,OAAO+P,EAAU/P,EAAG,IAAI4O,MAAO,SAACvW,GAAD,OAAOyX,EAAUzX,EAAG,IAAI2C,SAAU,SAAC0K,GAAD,OAAOgK,EAAiBhK,EAAG,IAAIgJ,OAAQ,SAAChJ,GAAD,OAAOkK,EAAelK,EAAG,gB,MCRxMsK,MA5Ff,SAAuB3V,GAAQ,IAAD,EAEF1E,mBAAS,IAFP,mBAEnBsa,EAFmB,KAEbC,EAFa,OAGIva,oBAAS,GAHb,mBAGnBwa,EAHmB,KAGVC,EAHU,KAY1B,SAASrQ,EAAkBC,GACvB,IAAIC,EAAcvD,SAASC,cAAc,iBACrCuD,OAAOC,UAAUH,IAEP,IAANA,IAC0B,KAAtBC,EAAY9J,MAAgB8J,EAAY9J,MAAQ,EAC3CiK,SAASH,EAAY9J,OAASkE,EAAMgG,QAAWJ,EAAY9J,MAAQiK,SAASH,EAAY9J,OAAS,EACrG8J,EAAY9J,MAAQ,IAElB,IAAP6J,IAC0B,KAAtBC,EAAY9J,MAAgB8J,EAAY9J,MAAQkE,EAAMgG,QACjDD,SAASH,EAAY9J,OAAS,EAAK8J,EAAY9J,OAAS,EAC5D8J,EAAY9J,MAAQkE,EAAMgG,UAGzB,MAANL,GACgBtD,SAASiD,iBAAiB,YAChCC,SAAQ,SAAUC,GACxBA,EAASJ,UAAUc,OAAO,gBAE9B7D,SAASC,cAAc,aAAa8C,UAAUC,IAAI,aAClDO,EAAY9J,MAAQ,GACjB8J,EAAY9J,MAAQ6J,EAExB,MAANA,EAAa3F,EAAMW,SAAS,GAAKX,EAAMW,SAASoF,SAASH,EAAY9J,QAkB1E,OAlDAH,qBAAU,WACN0G,SAAS2T,eAAe,gBAAgBla,MAAQ,IACjD,IACHH,qBAAU,WAEN,IADA,IAAIoR,EAAM,GACD7F,EAAI,EAAGA,EAAIlH,EAAMgG,QAASkB,IAAO6F,EAAIjL,KAAKoF,EAAI,GACvD2O,EAAQ9I,KACT,CAAC/M,EAAMgG,UA6CN,sBAAK3H,UAAU,eAAeC,MAAO,CAAEiF,SAAU,YAAjD,UACI,oBAAIjF,MAAO,CAAEC,MAAO,OAAQoJ,UAAW,SAAUlB,SAAU,MAAOrD,MAAO,WAAzE,SAAsF,8DACtF,wBAAQ/E,UAAU,UACdkB,QAAS,SAAAvB,GAAO0H,EAAkB,MADtC,oBAEA,wBAAQrH,UAAU,UACdkB,QAAS,SAAAvB,GAAO0H,GAAmB,IADvC,wBAEA,uBAAOrH,UAAU,2BAA2BC,MAAO,CAACC,MAAM,OAAQM,KAAK,SAASD,GAAG,eAAgB8H,IAAI,IAAIC,IAAK3G,EAAMgG,QAAQY,WAAYrH,QAAS,SAAAvB,GAAC,OAAI0H,EAAkB1H,EAAE6C,OAAO/E,UACnL,wBAAQuC,UAAU,UACdkB,QAAS,SAAAvB,GAAO0H,EAAkB,IADtC,wBAEA,wBAAQrH,UAAU,UACdkB,QAAS,SAAAvB,GAAO0H,EAAkB1F,EAAMgG,QAAQY,aADpD,oBAEA,wBAAQvI,UAAU,UACdkB,QAAS,SAAAvB,GAAOgC,EAAMuU,MAAM,IAAKlS,SAASC,cAAc,iBAAiBxG,OAASkE,EAAMgG,QAAU,GAAGY,YADzG,uBAEA,yBAAQvI,UAAU,UACdkB,QAAS,SAAAvB,IAhCrB,WACIgC,EAAMiW,MAAM,IACZ,IAAItQ,EAAItD,SAASC,cAAc,iBAC3B4T,EAAI,GACJnQ,SAASJ,EAAE7J,SAAWkE,EAAMgG,SAC5BkQ,EAAIvQ,EAAE7J,MACN6J,EAAE7J,MAAQoa,IAEVA,EAAIvQ,EAAE7J,MACN6J,EAAE7J,OAASiK,SAASmQ,GAAK,GAAGtP,YAuBRuP,IADpB,UACmC,qBAAK1X,IAAMlE,+BAA2CmE,IAAI,QAAQJ,MAAO,CAACC,MAAM,kBAAkB+E,OAAO,qBAD5I,YAEA,wBAAQjF,UAAU,UACdkB,QAAS,SAAAvB,GAAOA,EAAEE,iBAAkB8B,EAAMqU,OAAO,KADrD,8BAEA,wBAAQhW,UAAU,UACdkB,QAAS,SAAAvB,GAAOA,EAAEE,iBAAkB8B,EAAMoW,QAAQ,IAAK/T,SAASC,cAAc,iBAAiBxG,OAASiK,SAAS1D,SAASC,cAAc,iBAAiBxG,OAAS,GAAG8K,YADzK,+BAEA,wBAAQvI,UAAU,UACdkB,QAAS,SAAAvB,GAAOgC,EAAMqW,OAAO,KADjC,iCAEErW,EAAMgG,QAAU,GAAM,wBAAQ3H,UAAU,UACtCkB,QAAS,SAAAvB,GA3BjB8X,EAAUzT,SAASC,cAAc,eAAe8C,UAAUc,OAAO,aAAe7D,SAASC,cAAc,eAAe8C,UAAUC,IAAI,aACpI0Q,GAAYD,IAyBgB,iCAEtB9V,EAAMgG,QAAU,GAAM4P,GAAQ,wBAAQhX,GAAG,aAAaP,UAAU,qCAAqCsC,SAAU,SAAA3C,GAC7GgC,EAAMsW,OAAO,CAACvQ,SAAS1D,SAASC,cAAc,iBAAiBxG,OAAS,EAAGiK,SAAS/H,EAAE6C,OAAO/E,SAC7FuG,SAASC,cAAc,iBAAiBxG,OAASiK,SAAS/H,EAAE6C,OAAO/E,OAAS,GAAG8K,YAFnD,SAI3BgP,EAAK1N,KAAI,SAAC+I,EAAQ/J,GACf,OAAQ,wBAAgBpL,MAAOoL,EAAvB,SAA2B0O,EAAK1O,IAAnBA,Y,MCU1BqP,OA7Ff,SAAqBvW,GACjB,IAAM2J,EAAKvP,EAASwP,YADI,EAEctO,oBAAS,GAFvB,mBAEjBoJ,EAFiB,KAEJC,EAFI,OAGYrJ,mBAAS,IAHrB,mBAGjBsJ,EAHiB,KAGLC,EAHK,OAIcvJ,oBAAS,GAJvB,mBAIjBkU,EAJiB,KAIJC,EAJI,OAKUnU,mBAAS,IALnB,mBAKjBkb,EALiB,KAKNC,EALM,OAMcnb,mBAAS,IANvB,mBAMjBob,EANiB,KAMJC,EANI,OAOsBrb,mBAAS,IAP/B,mBAOjBsb,EAPiB,KAOAC,EAPA,OAQkCvb,oBAAS,GAR3C,mBAQjBwb,EARiB,KAQMC,EARN,KAwDlBC,EAAc,uCAAG,8BAAA/Y,EAAA,sEAEA0L,EAAGK,WAAW,aAAaG,MAF3B,OAEb9I,EAFa,OAGfgP,EAAUhP,EAAKkP,KAAKrI,KAAI,SAAAmC,GAAG,kCAAUA,EAAIhJ,QAAd,IAAsBzC,GAAIyL,EAAIzL,QAC7D6X,EAAapG,GAJM,2CAAH,qDAUpB,OAJA1U,qBAAU,WACNqb,MACD,IAGC,sBAAK1Y,MAAO,CAAEC,MAAO,OAAQ0Y,YAAY,QAAzC,gDAAsF,mBAAG5Y,UAAU,MAAM6Y,KAAK,iCAAiCrW,OAAO,SAASsW,IAAI,sBAA7E,4BACjFzS,GAAe,cAACjC,EAAD,CAAWsB,SA1DlB,SAACoC,GACdxB,GAAe,GACG,WAAdwB,GACAwD,EAAGK,WAAW,aAAaK,IAAImF,GAAaqD,SACvC1V,MAAK,SAAAqO,GACF1O,QAAQC,IAAI,WACZ0Z,EAAaD,EAAUhG,QAAO,SAAAyB,GAAI,OAAIA,EAAKrT,KAAO4Q,SAErDpS,OAAM,SAAAC,GACHP,QAAQC,IAAI,+BAiD2BmG,QAAS0B,IACvD4R,GAAaA,EAAUtO,KAAI,SAAC+J,EAAM7J,GAC/B,OACI,sBAAK9J,MAAO,CAAEiC,QAAS,OAAQjB,OAAQ,OAAvC,UACI,sBAA8BhB,MAAO,CAAE0T,OAAQ,UAAWzT,MAAO,MAAO+E,OAAQ,OAAQ0D,aAAa,OAAQY,WAAY,qBAAsBd,gBAAiBmL,EAAKnW,MAAO2M,eAAgB,SAC3L3M,MAAOmW,EAAKrT,GAAIW,QAAS,SAAAvB,GAAC,OArB/C,SAAqBoZ,GACjB,IAAIC,EAAKb,EAAUhG,QAAO,SAAAyB,GAAI,OAAIA,EAAKrT,KAAOwY,EAAKvW,OAAO4Q,aAAa,YACvEzR,EAAMW,SAAS0W,EAAG,GAAGvb,OAmB0BoW,CAAYlU,IAD3C,UACiDiU,EAAKrV,KADtD,MAAU,gBAAgBwL,GAE1B,yBAAQ/J,UAAU,UAAUC,MAAO,CAACmI,SAAS,kBAAmBnH,OAAO,EAAGiS,WAAY,UAA2CzV,MAAOmW,EAAKrT,GAAIW,QAAS,SAAAvB,GAAC,OAxC/K,SAAsBA,GAClB,IAAIwT,EAAQxT,EAAE6C,OAAO4Q,aAAa,SAClChC,EAAe+B,GACf,IAAIG,EAAa6E,EAAUtO,KAAI,SAAU0J,GAAK,OAAOA,EAAEhT,MAAOqE,QAAQuO,GACtE3M,EAAc,CACVwB,KAAM,IACND,IAAK,IACL5C,YAAa,SACbC,QAAS,UACTC,KAAK,gCAAD,OAAkC8S,EAAU7E,GAAY/U,KAAxD,KACJuG,OAAQ,SACRa,QAAS,SACTX,OAAQ,YACRY,QAAS,WAGbU,GAAe,GAwBgKoN,CAAa/T,IAA5K,gBAAmL,qBAAKS,IAAMlE,+BAA2CmE,IAAI,QAAQJ,MAAO,CAACC,MAAM,iBAAiB+E,OAAO,sBAAnL,sBAAsB8E,KAH7E,YAAYA,MAQzE,kCACI,uBAAOvJ,KAAK,WAAWD,GAAG,sBAAsB+B,SAAU,SAAA3C,GAAC,OAAI+Y,EAAyB1U,SAASC,cAAc,wBAAwB6E,YAD3I,uEAIA,sBAAK7I,MAAO,CAAEiC,QAASuW,EAAwB,QAAU,OAAQvY,MAAO,QAAxE,UACI,uBAAOF,UAAU,cAAjB,gCACA,0BAAUO,GAAG,wBAAwBN,MAAO,CAAEC,MAAO,QAAUoC,SAAU,SAAA3C,GAAC,OAAI2Y,EAAe3Y,EAAE6C,OAAO/E,UACtG,uBAAOuC,UAAU,cAAjB,iCACA,uBAAOO,GAAG,wBAAwBN,MAAO,CAAEC,MAAO,QAAUoC,SAAU,SAAA3C,GAAC,OAAI6Y,EAAmB7Y,EAAE6C,OAAO/E,UACvG,wBAAQuC,UAAU,UAAUC,MAAO,CAACmI,SAAS,kBAAmBnH,OAAO,EAAGiS,WAAY,UAAahS,QAAS,SAAAvB,GAhEpH2L,EAAGK,WAAW,aAAa3E,IAAI,CAAEzI,KAAMga,EAAiB9a,MAAO4a,IAC1DvZ,MAAK,SAAAqO,GACF1O,QAAQC,IAAI,SACZiD,EAAM8S,cAAa,MAGtB1V,OAAM,SAAAC,GACHP,QAAQC,IAAI,+BAyDZ,qC,SCvFVua,GAAe,CACjBC,KAAM,SAACC,EAAUC,GAAX,mBAAC,eACAD,GADD,IAEFjZ,MAAOkZ,EAAMC,YAAYnZ,MACzBoZ,aAAc,kBACdvU,MAAOqU,EAAMC,YAAYE,UACzBvY,QAAS,MAEb4R,OAAQ,SAACuG,EAAUC,GAAX,mBAAC,eACFD,GADC,IAEJG,aAAc,kBACdvU,MAAOqU,EAAMI,WAAa,MAAQ,OAClCxY,QAAS,MAEbyY,QAAQ,SAAAC,GAAM,kCAAUA,GAAV,IAAkBjU,gBAAiB,WAEjDkU,YAAa,SAACR,EAAUC,GACpB,IAAMpQ,EAAUoQ,EAAMQ,WAAa,GAAM,EAGzC,OAAO,2BAAKT,GAAZ,IAAsBnQ,UAAS6Q,WAFZ,oBAcZC,OAPf,YAAoE,IAA7C7Z,EAA4C,EAA5CA,MAAM0S,EAAsC,EAAtCA,MAAMoH,EAAgC,EAAhCA,QAAQzX,EAAwB,EAAxBA,SAAS7E,EAAe,EAAfA,MAAMuc,EAAS,EAATA,QACtD,OAAO,sBAAK/Z,MAAOA,EAAZ,UACF0S,EACD,cAAC,KAAD,CAAQ+G,OAAQT,GAAce,QAASA,EAASC,mBAAmB,EAAMC,cAAY,EAAEH,QAASA,EAASzX,SAAUA,EAAU7E,MAAOA,QCnBxI0c,GAAU,GACVC,GAAS,CACT5Q,SAAU,GACVmG,OAAQ,CAAC,CAAEtK,KAAM,GAAI6E,IAAK,GAAIF,QAAQ,IACtC6F,OAAQ,CAAC,CAAExK,KAAM,GAAI6E,IAAK,GAAIF,QAAQ,IACtCQ,KAAM,CACFsF,UAAW,EACXpF,QAAS,EACTS,OAAQ,GACRjB,IAAK,KAmbEwK,OAhbf,WACI,IAAI2F,EAAiB,GACbnd,EAAgBL,IAAhBK,YAFkB,EAGMD,mBAAS,IAHf,mBAGnBqd,EAHmB,KAGTC,EAHS,OAIUtd,mBAAS,CAAEud,SAAU,GAAIjc,KAAM,GAAIsN,OAAQ,KAJrD,mBAInB4O,EAJmB,KAIPC,EAJO,OAKUzd,mBAAS,IALnB,mBAKnBqV,EALmB,KAKPqI,EALO,OAMY1d,mBAAS,IANrB,mBAMnBoV,EANmB,KAMNuI,EANM,OAOM3d,mBAAS,GAPf,mBAOnB0Q,EAPmB,KAOTC,EAPS,OAQkB3Q,mBAAS,IAR3B,mBAQnBuQ,EARmB,KAQHqN,EARG,OASc5d,mBAAS,IATvB,mBASnB6d,EATmB,KASLC,EATK,OAUE9d,mBAAS,GAVX,mBAUnB+d,EAVmB,KAUXC,EAVW,OAWEhe,mBAAS,GAXX,mBAWnBie,EAXmB,KAWXC,EAXW,OAYEle,mBAAS,GAZX,oBAYnBme,GAZmB,MAYXC,GAZW,SAaFpe,oBAAS,GAbP,qBAanBqe,GAbmB,MAabC,GAba,SAcYte,oBAAS,GAdrB,qBAcnBoJ,GAdmB,MAcNC,GAdM,SAeUrJ,mBAAS,IAfnB,qBAenBsJ,GAfmB,MAePC,GAfO,SAgBQvJ,mBAAS,CAACmd,KAhBlB,qBAgBnBzL,GAhBmB,MAgBR6M,GAhBQ,SAiBkBve,mBAAS,IAjB3B,qBAiBnBoU,GAjBmB,MAiBHC,GAjBG,SAkBUrU,mBAAS,IAlBnB,qBAkBnBsU,GAlBmB,MAkBPC,GAlBO,SAmBkCvU,oBAAS,GAnB3C,qBAmBnBwe,GAnBmB,MAmBKC,GAnBL,SAoB8Bze,oBAAS,GApBvC,qBAoBnB0e,GApBmB,MAoBGC,GApBH,MAqBpBtQ,GAAKvP,EAASwP,YACdmH,GAAe,uCAAG,8BAAA9S,EAAA,sEAED0L,GAAGK,WAAW,cAAcG,MAF3B,OAEd9I,EAFc,QAGhBgP,EAAUhP,EAAKkP,KAAKrI,KAAI,SAAAmC,GAAG,sBAAUA,EAAIhJ,YACrCiJ,MAAK,SAAUrM,EAAGsM,GACtB,IAAIqG,EAAQ3S,EAAE+S,MAAMH,cAChBC,EAAQvG,EAAEyG,MAAMH,cACpB,OAAID,EAAQE,GACA,EAERF,EAAQE,EACD,EAIJ,KAEXjB,GAAcQ,GAjBM,2CAAH,qDAiFfyC,GAAe,SAAC7U,GAClB0K,OAAOuC,SAASgP,UA6FpB,SAAS7G,GAAc1N,GACnB7I,QAAQC,IAAI4I,GACZ,IAAIwU,EAAUxU,EACdkU,GAAaM,EAAQxP,MACrBsB,EAAY,GACZ5J,SAASC,cAAc,iBAAiBxG,MAAQ,EAChDid,EAAc,CAAEF,SAAUsB,EAAQvO,KAAK6E,OAAQ7T,KAAMud,EAAQvO,KAAKkG,WAAY5H,OAAQiQ,EAAQvb,KAC9F8Z,EAAiByB,EAAQvO,KAAKgE,WAC9BD,GAAkB+I,GAClBrW,SAASC,cAAc,aAAaxG,MAAQqe,EAAQvO,KAAKhP,KACzDgc,EAAYuB,EAAQvO,KAAKhP,MACzByF,SAASC,cAAc,eAAexG,MAAQqe,EAAQvO,KAAK+E,WAC3DqI,EAAcmB,EAAQvO,KAAK+E,YAC3BtO,SAASC,cAAc,gBAAgBxG,MAAQqe,EAAQvO,KAAK8E,YAC5DuI,EAAekB,EAAQvO,KAAK8E,aAC5BrO,SAASC,cAAc,eAAexG,MAAQqe,EAAQvO,KAAKpF,WAC3D0S,EAAkBiB,EAAQvO,KAAKpF,YAC/BnE,SAASC,cAAc,uBAAuBxG,MAAQqe,EAAQvO,KAAKvC,SACnE+P,EAAgBe,EAAQvO,KAAKvC,UAC7BhH,SAASC,cAAc,OAAOxG,MAAQqe,EAAQvO,KAAKvH,MACnDiV,EAAUa,EAAQvO,KAAKvH,OACvBhC,SAASC,cAAc,OAAOxG,MAAQqe,EAAQvO,KAAKtH,QACnDkV,EAAUW,EAAQvO,KAAKtH,SACvBjC,SAASC,cAAc,OAAOxG,MAAQqe,EAAQvO,KAAKrH,QACnDmV,GAAUS,EAAQvO,KAAKrH,SAyH3B,OANA5I,qBAAU,WACNoV,KACA,IAAI4D,EAAY/G,KAAK4E,MAAMoC,aAAaC,QAAQ,aAC7B,OAAdF,GAAqBtB,GAAcsB,GACxCC,aAAawF,WAAW,cACzB,IAEC,sBAAK/b,UAAU,iBAAf,UACI,cAAC,EAAD,CAAUxC,KAAMN,EAAYyP,IAAKsF,QAAS,SAAUwC,aAAcA,GAAcL,QAAS,SAAA9M,GAAO7I,QAAQC,IAAI,gBAAkB4D,SAAU,SAAAgF,GAAC,OAAI0N,GAAc1N,MAC1JjB,IAAe,cAACjC,EAAD,CAAWsB,SAhTlB,SAACoC,EAAWtC,GAKzB,GAJkB,YAAdsC,IACAxB,IAAe,GACfmO,MAEc,WAAd3M,EAAwB,CACxBxB,IAAe,GACf,IAAIjB,EAAO,CACPkI,KAAM,CACF6E,OAAQqI,EAAWD,SACnB/G,WAAYgH,EAAWlc,KACvBgT,WAAYF,GACZ9S,KAAM+b,EACNhI,WAAYA,EACZD,YAAaA,EACblK,WAAYqF,EACZxC,SAAU8P,EACV9U,MAAOgV,EACP/U,QAASiV,EACThV,QAASkV,IAEb9O,KAAMqC,IAEV4H,aAAaY,QAAQ,WAAY5H,KAAKC,UAAUnK,IAChDiG,GAAGK,WAAW,SAASK,IAAIyO,EAAW5O,QAAQmQ,IAAI3W,GAC7CvG,MAAK,SAAAqN,GACF1N,QAAQC,IAAI,gBACZ+V,QAEH1V,OAAM,SAAAY,GAAOlB,QAAQC,IAAI,2BAElC,GAAkB,QAAdoJ,EAEA,GADArJ,QAAQC,IAAI8G,IACmE,IAA1E+L,GAAW1H,KAAI,SAAU0J,GAAK,OAAOA,EAAE9V,SAAUmH,QAAQY,IAAwBA,EAAWzF,OAAS,EAAI,CAC1G,IAAIkc,EAAU,CAAEtJ,MAAOnN,EAAY/H,MAAO+H,GAC1C8F,GAAGK,WAAW,cAAc3E,IAAIiV,GAC3Bnd,MAAK,SAAAqN,GACF1N,QAAQC,IAAI,sBACZ8S,GAAc,GAAD,mBAAKD,IAAL,CAAiB0K,QAEjCld,OAAM,SAAAY,GAAOlB,QAAQC,IAAI,iCAC9B4H,IAAe,QAEfE,GAAc,CACVwB,KAAM,IACND,IAAK,IACL5C,YAAa,SACbC,QAAUI,EAAWzF,OAAS,EAAK,gBAAkB,qBACrDsF,KAAK,+EACLC,WAAY,OACZE,WAAYA,EACZV,OAAQ,SACRa,QAAS,MACTX,OAAQ,YACRY,QAAS,WAIH,WAAdkC,GACAxB,IAAe,IAqPgCzB,QAAS0B,KACxD,sBAAKvG,UAAU,eAAf,UACI,oBAAIC,MAAO,CAAEC,MAAO,OAAQoJ,UAAW,SAAUlB,SAAU,MAAOrD,MAAO,WAAzE,SAAsF,0DAEtF,wBAAQ/E,UAAU,UAAUkB,QAAS,SAAAvB,GAhDzC2a,EAAW,KACXhU,IAAe,GACfE,GAAc,CACVrB,YAAa,OACbC,QAAS,UACTC,KAAK,+DAAD,OAAiEiV,EAAjE,eAAiFG,EAAWlc,KAAO,GAAMkc,EAAWlc,KAAO,MAA3H,2BACJuG,OAAQ,SACRa,QAAS,UACTX,OAAQ,YACRY,QAAS,aAuCT,wBACA,wBAAQ5F,UAAU,UAAUkB,QAAS,SAAAvB,GAAC,OAvGlD,SAAkBA,GACd,IAAI0F,EAAOkK,KAAKC,UAAU,CACtBjC,KAAM,CACF6E,OAAQlV,EAAYyP,IACpB8G,WAAYvW,EAAY0B,YACxB2S,WAAYF,GACZ9S,KAAM+b,EACNhI,WAAYA,EACZD,YAAaA,EACblK,WAAYqF,EACZxC,SAAU8P,EACV9U,MAAOgV,EACP/U,QAASiV,EACThV,QAASkV,IAEb9O,KAAMqC,KAEVlQ,QAAQC,IAAI2G,GACZ,IACI6W,EAAUlY,SAASmY,cAAc,KACrCD,EAAQE,aAAa,OAAQ,iCAAmCC,mBAAmBhX,IACnF6W,EAAQE,aAAa,WAHN,YAIfF,EAAQjc,MAAMiC,QAAU,OACxB8B,SAASsY,KAAKC,YAAYL,GAC1BA,EAAQM,QACRxY,SAASsY,KAAKG,YAAYP,GA8EwBQ,IAA1C,mCACA,wBAAQ1c,UAAU,UAAUkB,QAAS,SAAAvB,GAAC,OAhIlD,SAAgBA,GACZ,IAAI0F,EAAO,CACPkI,KAAM,CACF6E,OAAQlV,EAAYyP,IACpB8G,WAAYvW,EAAY0B,YACxB2S,WAAYF,GACZ9S,KAAM+b,EACNhI,WAAYA,EACZD,YAAaA,EACblK,WAAYqF,EACZxC,SAAU8P,EACV9U,MAAOgV,EACP/U,QAASiV,EACThV,QAASkV,IAEb9O,KAAMqC,IAEVrD,GAAGK,WAAW,SAAS3E,IAAI3B,GACtBvG,MAAK,SAAAqN,GACF1N,QAAQC,IAAI,sBACZ+V,QAEH1V,OAAM,SAAAY,GAAOlB,QAAQC,IAAI,yBA0GoBie,IAA1C,wCACClC,EAAW5O,OAAS,IAAM,wBAAQ7L,UAAU,UAAUkB,QAAS,SAAAvB,GAAC,OA7EzE2G,IAAe,QACfE,GAAc,CACVrB,YAAa,UACbC,QAAS,UACTC,KAAK,2CAAD,OAA6CiV,EAA7C,eAA6DG,EAAWlc,KAAO,GAAMkc,EAAWlc,KAAO,MAAvG,aACJuG,OAAQ,SACRa,QAAS,SACTX,OAAQ,YACRY,QAAS,YAqEsB,2CAG/B,wBAAO5F,UAAU,cAAjB,iCACQ,uBAAOO,GAAG,WAAY+B,SAAU,SAAA3C,GAAC,OAAI4a,EAAY5a,EAAE6C,OAAO/E,aAElE,sBAAKuC,UAAU,gBAAf,UACI,yBAASA,UAAU,SAAnB,SACI,kCACA,yBAAQO,GAAG,aAAa+B,SAAU,SAAA3C,GAAC,OAAIgb,EAAchb,EAAE6C,OAAO/E,QAA9D,UACQ,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,uBAHR,uCAQJ,yBAASuC,UAAU,SAAnB,SACI,kCACA,yBAAQO,GAAG,cAAc+B,SAAU,SAAA3C,GAAC,OAAIib,EAAejb,EAAE6C,OAAO/E,QAAhE,UACQ,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,KAAd,mBAHR,0DASP4T,IACG,cAAC,GAAD,CAAc2I,SAAS,EAAM/Z,MAAO,CAAEC,MAAO,QAASqZ,UAAW,MAAMlX,WAAW,QAAU5E,MAAO4T,GAAgB/O,SAAUgP,GAAmByI,QAASxI,GAAYoB,MAAM,6BAE/K,wBAAQ3S,UAAU,UAAUC,MAAO,CAAEmI,SAAU,kBAAmBnH,OAAQ,eAAiBC,QAAS,SAAAvB,GAAC,OA9FzG2G,IAAe,QACfE,GAAc,CACVrB,YAAa,UACbC,QAAS,QACTC,KAAK,+EACLC,WAAY,OACZE,WAAY,GACZV,OAAQ,SACRa,QAAS,MACTX,OAAQ,YACRY,QAAS,YAoFT,8BACA,sBAAK5F,UAAU,uBAAf,UACA,yBAASA,UAAU,cAAnB,kEACA,0BAASA,UAAU,qBAAqBC,MAAO,CAAG6Q,MAAM,QAAxD,UACQ,uBAAOvQ,GAAG,KAAKC,KAAK,SAAS6H,IAAK,EAAGC,IAAK,GAAIsU,KAAM,EAAG3c,MAAO,CAAEC,MAAO,OAASoC,SAAU,SAAA3C,GAAC,OAAIsb,EAAUtb,EAAE6C,OAAO/E,UAD1H,MAEQ,uBAAO8C,GAAG,KAAKC,KAAK,SAAS6H,IAAK,EAAGC,IAAK,GAAIsU,KAAM,EAAG3c,MAAO,CAAEC,MAAO,OAASoC,SAAU,SAAA3C,GAAC,OAAIwb,EAAUxb,EAAE6C,OAAO/E,UAF1H,MAGQ,uBAAO8C,GAAG,KAAKC,KAAK,SAAS6H,IAAK,EAAGC,IAAK,GAAIsU,KAAM,EAAG3c,MAAO,CAAEC,MAAO,OAASoC,SAAU,SAAA3C,GAAC,OAAI0b,GAAU1b,EAAE6C,OAAO/E,UAH1H,YAMA,sBAAKuC,UAAU,gBAAf,UACI,0BAASA,UAAU,SAAnB,UACI,kCACI,uBAAOQ,KAAK,WAAWD,GAAG,yBAAyB+B,SAAU,SAAA3C,GAAC,OAAIic,GAAwB5X,SAASC,cAAc,2BAA2B6E,YADhJ,wCAIA,sBAAK7I,MAAO,CAAEiC,QAASyZ,GAAuB,QAAU,OAAQzb,MAAO,OAAvE,UAEI,wBAAOF,UAAU,cAAjB,gFACA,uBAAOO,GAAG,aAAc+B,SAAU,SAAA3C,GAAC,OAAIkb,EAAkBlb,EAAE6C,OAAO/E,aAElE,cAAC,EAAD,CAAY0F,UAvSd,SAAC3E,GACfwF,SAASC,cAAc,eAAexG,MAAQe,EAC9Cqc,EAAkBrc,YAwSV,0BAASwB,UAAU,SAAnB,UACI,kCACI,uBAAOQ,KAAK,WAAWD,GAAG,uBAAuB+B,SAAU,SAAA3C,GAAC,OAAI+b,GAA0B1X,SAASC,cAAc,yBAAyB6E,YAD9I,iDAIA,sBAAK7I,MAAO,CAAEiC,QAASuZ,GAAyB,QAAU,OAAQvb,MAAO,OAAzE,UACI,wBAAOF,UAAU,cAAjB,oDACA,0BAAUO,GAAG,qBAAqB+B,SAAU,SAAA3C,GAAC,OAAIob,EAAgBpb,EAAE6C,OAAO/E,aAE1E,cAAC,GAAD,CAAagX,aAnGd,SAAC7U,GAChB,GAAIA,EAAG,CACH,IAAIyF,EAAO,CACPkI,KAAM,CACF6E,OAAQlV,EAAYyP,IACpB8G,WAAYvW,EAAY0B,YACxB2S,WAAYF,GACZ9S,KAAM+b,EACNhI,WAAYA,EACZD,YAAaA,EACblK,WAAYqF,EACZxC,SAAU8P,EACV9U,MAAOgV,EACP/U,QAASiV,EACThV,QAASkV,IAEb9O,KAAMqC,IAEV4H,aAAaY,QAAQ,WAAY5H,KAAKC,UAAUnK,IAChDoP,OAgFmDnS,SAAU,SAAAgF,GAAC,OA/S/C,SAACA,GACpBtD,SAASC,cAAc,uBAAuBxG,MAAQ6J,EACtDyT,EAAgBzT,GA6SsDuV,CAAevV,eAIjF,cAAC,EAAD,CAAeK,QAASgH,GAAU5O,OAAS4O,GAAU5O,OAAS,EAAGmW,MAAO,SAACvW,GAAD,OA7Q5E6b,IAAa,SAAAsB,GAAQ,4BAAQA,GAAR,CAAkB,CACnCtT,SAAU,GACVmG,OAAQ,CAAC,CAAEtK,KAAM,GAAI6E,IAAK,GAAIF,QAAQ,IACtC6F,OAAQ,CAAC,CAAExK,KAAM,GAAI6E,IAAK,GAAIF,QAAQ,IACtCQ,KAAM,CACFsF,UAAW,EACXpF,QAAS,EACTS,OAAQ,GACRjB,IAAK,UAGb0D,EAAYe,GAAU5O,aACtBtB,QAAQC,IAAIiP,IAiQqFiK,MAAO,SAAC5K,GAAD,OApPpGW,IAAagB,GAAU5O,OAAS,GAAG6N,EAAYD,EAAW,QAC9D6N,GAAa7M,GAAUwD,QAAO,SAAAyB,GAAI,OAAIjF,GAAU/J,QAAQgP,KAAUjG,OAmP8DsK,OAAQ,SAACjL,GAAD,OAjP5I,SAAoBA,GAChB,GAAIA,EAAE,KAAOA,EAAE,GAAI,CAGf,IAFA,IAAI0B,EAAM,GACNqO,EAAUpO,GAAU3B,EAAE,IACjBnE,EAAI,EAAGA,EAAI8F,GAAU5O,OAAQ8I,IAC9BA,IAAMmE,EAAE,GACJA,EAAE,GAAKA,EAAE,IACT0B,EAAIjL,KAAKkL,GAAU9F,IACnB6F,EAAIjL,KAAKsZ,KAETrO,EAAIjL,KAAKsZ,GACTrO,EAAIjL,KAAKkL,GAAU9F,KAGlBA,IAAMmE,EAAE,IAAI0B,EAAIjL,KAAKkL,GAAU9F,IAE5C2S,GAAa9M,GACbd,EAAYZ,EAAE,IACdvO,QAAQC,IAAIqe,EAASrO,IA+NsHsO,CAAWhQ,IAClJgL,OAAQ,SAACrY,GAAD,OAhQpB,WACI,IAAI+O,EAAMC,GAAUhB,GAAUgC,OAAOsN,MAAM,EAAGtO,GAAUhB,GAAUnD,KAAKE,SACvEyP,GAAUxL,GAAUhB,GAAUkC,OAAOoN,MAAM,EAAGtO,GAAUhB,GAAUnD,KAAKsF,UAAYnB,GAAUhB,GAAUnD,KAAKE,SAC5G,IAAK,IAAI7B,EAAI,EAAGA,EAAI6F,EAAI3O,OAAQ8I,IAC5BsR,GAAQ1W,KAAKiL,EAAI7F,IAErBpK,QAAQC,IAAIyb,IACLoB,IAAPD,IAyPuB4B,IAAe5a,SAAU,SAAC0N,IAhTrD,SAA8BA,GACbpC,EAAToC,EAAI,EAAiBA,EAAI,EAEbA,GA6SyCmN,CAAqBnN,IAAMgG,OAAQ,SAAChG,GA9R7FuG,aAAaY,QAAQ,eAAgB5H,KAAKC,UAAUb,GAAUhB,MA8RgEoK,QAAS,SAAC/H,IA5R5I,SAA8BrQ,GAC1B,IAAI+O,EAAM,GACN0O,EAAY7N,KAAK4E,MAAMoC,aAAaC,QAAQ,iBAChD,GAAkB,OAAd4G,EAAJ,CACA,IAAK,IAAIvU,EAAI,EAAGA,EAAI8F,GAAU5O,OAAQ8I,IAC9BA,IAAM8E,EAAW,GAAGe,EAAIjL,KAAK2Z,GACjC1O,EAAIjL,KAAKkL,GAAU9F,IAEnB8E,IAAagB,GAAU5O,OAAS,GAAG2O,EAAIjL,KAAK2Z,GAChD5B,GAAa9M,GACbd,EAAYD,EAAW,IAkRyH0P,MAC3I/B,IACG,sBAAKtb,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAWkB,QAAS,SAACvB,GAAD,OAAO4b,IAAQ,IAAlD,SAA0D,qBAAKnb,IAAKlE,+BAA6CmE,IAAI,QAAQJ,MAAO,CAAEC,MAAO,kBAAmB+E,OAAQ,uBACxK,cAAC,EAAD,CAAiBhF,MAAO,CAAEqd,cAAe,QAAUnV,WAAYqF,EAAgBxC,SAAU8P,EAActQ,KAAM,CAAEsF,UAAWnB,GAAUhB,GAAUnD,KAAKsF,UAAWpF,QAASiE,GAAUhB,GAAUnD,KAAKE,QAASS,OAAQwD,GAAUhB,GAAUnD,KAAKW,OAAQjB,IAAKyE,GAAUhB,GAAUnD,KAAKN,KAAOjB,IAAK,EAAGO,SAAUmF,GAAUhB,GAAUnE,SAAUI,QAASuQ,GAASpR,aAAc,GAAIzG,SAAU,SAAC8I,UAG7XuD,GAAUhB,IACP,cAAC,EAAD,CAAaqC,EAAGrB,GAAUhB,GAAWrL,SAAU,SAAC0K,GAAD,OAlT3D,SAA8BA,GAC1B,IAAI0B,EAAG,YAAOC,IAC2B,aAArClK,OAAO8Y,oBAAoBvQ,GAAG,KAAmB0B,EAAIf,GAAUnE,SAAWwD,EAAExD,UACvC,YAArC/E,OAAO8Y,oBAAoBvQ,GAAG,KAAkB0B,EAAIf,GAAUnD,KAAKN,IAAM8C,EAAEwQ,SACtC,YAArC/Y,OAAO8Y,oBAAoBvQ,GAAG,KAAkB0B,EAAIf,GAAUnD,KAAKW,OAAS6B,EAAEyQ,SACzC,mBAArChZ,OAAO8Y,oBAAoBvQ,GAAG,KAAyB0B,EAAIf,GAAUnD,KAAKsF,UAAY9C,EAAE0Q,gBACnD,iBAArCjZ,OAAO8Y,oBAAoBvQ,GAAG,KAAuB0B,EAAIf,GAAUnD,KAAKE,QAAUsC,EAAE2Q,cAC/C,WAArClZ,OAAO8Y,oBAAoBvQ,GAAG,KAAiB0B,EAAIf,GAAUgC,OAAS3C,EAAE2C,QACnC,WAArClL,OAAO8Y,oBAAoBvQ,GAAG,KAAiB0B,EAAIf,GAAUkC,OAAS7C,EAAE6C,QAC5E2L,GAAa9M,GAySiDkP,CAAqB5Q,UC3Z5E6Q,OAtBf,WAEE,OACE,cAAC,IAAD,UACE,eAAC9gB,EAAD,WACI,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAACuE,EAAD,CAAcwc,OAAK,EAACC,KAAK,IAAIvc,UAAWZ,IACxC,cAACU,EAAD,CAAcyc,KAAK,kBAAkBvc,UAAW6B,IAChD,cAAC,IAAD,CAAO0a,KAAK,UAAUvc,UAAWtC,IACjC,cAAC,IAAD,CAAO6e,KAAK,SAASvc,UAAWL,IAChC,cAAC,IAAD,CAAO4c,KAAK,UAAUvc,UAAWJ,IACjC,cAAC,IAAD,CAAO2c,KAAK,mBAAmBvc,UAAWI,IAC1C,cAACN,EAAD,CAAcwc,OAAK,EAACC,KAAK,UAAUvc,UAAWwc,KAC9C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,QAAQvc,UAAWyc,IACrC,cAAC,IAAD,CAAOF,KAAK,gBAAZ,SAA4B,cAAC3N,EAAD,eCrBzB8N,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtf,MAAK,YAAkD,IAA/Cuf,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAShd,OACP,cAAC,IAAMid,WAAP,UACE,cAAC,GAAD,MAEH3a,SAAS2T,eAAe,SAMzBuG,M","file":"static/js/main.a2b19320.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    if (passwordRef.current.value.length < 6) {\r\n      return setError(\"Passwords should be at least 6 symbols long\")\r\n    }\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n      setToRoot(true);\r\n\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n\r\n          <h2 className=\"header1\">Sign Up\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n                    <input id=\"password-confirm\" type=\"password\" ref={passwordConfirmRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Already have an account? <Link className=\"links\" to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const [toLogin, setToLogin] = useState(false);\r\n  if (toLogin === true) { return <Redirect to=\"/login\" /> }\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      setToLogin(true);\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop:'6%' }}>\r\n        <div className='registeCard' style={{padding:'.75em'}}>\r\n          <h2 className=\"header1\">Dashboard\r\n          <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <h6 className=\"divStyle\"> <strong>Welcome,</strong> {currentUser.displayName}</h6>\r\n          <h6 className=\"divStyle\">  <strong>Email:</strong> {currentUser.email} </h6>\r\n          <img style={{ width: '70%', margin:'3% 15%' }} src={currentUser.photoURL > \"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"} alt=\"profile pic\" />\r\n          <Link to=\"/update-profile\">\r\n            <button className=\"btnNav\">\r\n              Update Profile\r\n              </button>\r\n          </Link>\r\n          <Link to=\"/test\">\r\n            <button className=\"btnNav\">\r\n              Take Tests\r\n              </button>\r\n          </Link>\r\n          <Link to=\"/create\">\r\n            <button className=\"btnNav\">\r\n              Create Tests\r\n              </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          <div className='linkText' onClick={handleLogout}>\r\n            Log Out\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      // history.push(\"/test-editor/\")\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Log In\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /> </h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Log In\r\n            </button>\r\n          </form>\r\n          <div className=\"divStyle\">\r\n            <Link className=\"links\" to=\"/forgot-password\">Forgot Password?</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link className=\"links\" to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Password Reset\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          {message &&<label className='successStyle'>{message}</label> }\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Reset Password\r\n            </button>\r\n          </form>\r\n          <div className=\"divStyle\">\r\n            <Link to=\"/login\" className=\"links\" >Login</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link to=\"/signup\"className=\"links\" >Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div style={{display:'flex', alignItems:'center', justifyContent:'start', marginLeft:'2%', maxWidth:'600px'}}>\r\n            <input type='file' style={{width:'48%'}} onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button testNav\" onClick={(e)=>{pictureUpload(e)}}>Upload Image</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef= useRef()\r\n  const userURLRef= useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser} = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const getImgUrl = (url) => {\r\n    document.querySelector(\"#userURL\").childNodes[1].value=url;\r\n    userURLRef.current.value=url;\r\n    console.log(userURLRef.current.value)\r\n}\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value!== currentUser.displayName)||(userURLRef.current.value!== currentUser.photoURL)){\r\n      promises.push(updateUser(userNameRef.current.value, userURLRef.current.value))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUDNAME);\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUD_PRESET);\r\n  },[])\r\n\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\"}}>\r\n        <div className='registeCard' >\r\n          <h2 className=\"header1\">Update Profile\r\n          <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n              <label className='headerStyle'  >User's Name\r\n                <input id=\"userName\" type=\"text\" ref={userNameRef} defaultValue={currentUser.displayName} placeholder=\"Leave blank to keep the same\"  />\r\n              </label>              \r\n              <label className='headerStyle' id=\"userURL\" >User's picture link\r\n                <input  type=\"text\" ref={userURLRef} defaultValue={currentUser.photoURL}  />\r\n                <Cloudinary style={{width: \"200px\", objectFit: \"cover\", margin: \"10px\"}} getImgUrl={getImgUrl} />\r\n              </label>                   \r\n            <label className='headerStyle'  >Email\r\n              <input id=\"email\" type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n              <input id=\"password\" type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n              <input id=\"password-confirm\" type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </form>\r\n      </div>\r\n      <div className=\"divStyle\">\r\n        <Link to=\"/\" className=\"links\" >Cancel</Link>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React,{ useEffect, useState } from \"react\"\r\nvar variant = {\r\n  'danger': {\r\n    'color': '#721c24',\r\n    'backgroundColor': '#f8d7da',\r\n    'borderColor': '#f5c6cb'\r\n    \r\n  },\r\n  'success': {\r\n    'color': '#155724',\r\n    'backgroundColor': '#d4edda',\r\n    'borderColor': '#c3e6cb'\r\n   },\r\n   'secondary': {\r\n    'color': '#383d41',\r\n    'backgroundColor': '#e2e3e5',\r\n    'borderColor': '#d6d8db'\r\n  },\r\n  'warning': {\r\n    'color': '#856404',\r\n    'backgroundColor': '#fff3cd',\r\n    'borderColor': '#ffeeba'\r\n  },\r\n  'info': {\r\n    'color': '#0c5460',\r\n    'backgroundColor': '#d1ecf1',\r\n    'borderColor': '#bee5eb',\r\n  },\r\n  '': {},\r\n}\r\nexport default function AlertMenu(props) {\r\n  const [button1Color, setbutton1Color]=useState('');\r\n  const [button2Color, setbutton2Color]=useState('');\r\n  useEffect(() => {\r\n    setbutton1Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color1)].color);\r\n    setbutton2Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color2)].color);\r\n}, []);\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh', position: \"absolute\" }} >\r\n      <div className='alertContainer'>\r\n        <label className='alertItemStyle' style={Object.values(variant)[Object.keys(variant).indexOf(props.styling.variantHead)]}>{props.styling.heading}</label>\r\n        <h5 className=\"alertItemStyle\">{props.styling.text}</h5>\r\n        {props.styling.inputField && <input id=\"inputField\" style={{ width: \"100%\", marginBottom: \"10px\" }} defaultValue={props.inputValue} />}\r\n        {(props.styling.color1!==\"\") && <button className='alertItemStyle' style={{backgroundColor:button1Color, color:'white'}} onClick={e => { props.onReturn(props.styling.button1, (props.styling.inputField ? document.querySelector(\"#inputField\").value : null)); }}>\r\n          {props.styling.button1}\r\n        </button>}\r\n        {(props.styling.color2!==\"\") &&<button className=\"alertItemStyle\" style={{backgroundColor:button2Color, color:'white'}} onClick={e => { props.onReturn(props.styling.button2) }}>\r\n          {props.styling.button2}\r\n        </button>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { Fragment, useState } from 'react';\nimport AlertMenu from '../alertMenu';\nfunction TestNav(props) {\n    var timerInterval\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Finish\") { \n           stopTest();\n        }\n    }\n    function timerDraw(event) {\n        let seconds = props.seconds;\n        let minutes = props.minutes;\n        let hours = props.hours;\n        questionNumberSet('0');\n        event.preventDefault();\n        if ((seconds !== 0) || (minutes !== 0) || (hours !== 0)) {\n            timerInterval = setInterval(function () {\n                secondsLeft--;\n                if (seconds === 0) {\n                    seconds = 59;\n                }\n                else seconds--;\n                if (seconds === 59) {\n                    if (minutes === 0) {\n                        minutes = 59;\n                        hours--;\n                    } else minutes--;\n                }\n                setDisplayTime(stringTime(hours, minutes, seconds));\n                if ((secondsLeft === 0)) {\n                    clearInterval(timerInterval);\n                    document.querySelector(\".testNav\").classList.add('invisible');\n                    props.onExit(\"00:00:00\");\n                }\n\n            }, 1000);\n        }\n    };\n    function stringTime(h, m, s) {\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\n    }\n    function stopTest() {\n        clearInterval(timerInterval);\n        console.log('end')\n        document.querySelector(\".testNav\").classList.add('invisible');\n        let navButton = document.querySelectorAll(\".testNav\");\n        navButton.forEach(function (userItem) {\n            userItem.classList.add('invisible');\n        });\n        props.onExit(displayTime);\n    }\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else {\n                    questionNow.value = 1;\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Would you like to finish the test?`,\n                        color1: \"danger\",\n                        button1: \"Finish\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                }\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                navButton = document.querySelectorAll(\".testNavLight\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    return (\n        <Fragment>\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <button className=\"testNav\" id=\"startNav\" style={{ position: 'absolute', top: '44vh', left: \"43vw\", zIndex: '200' }}\n                onClick={timerDraw}>Start</button>\n            <button className=\"testNav invisible\" style={{ position: \"absolute\", top: '48vh', left: 0, background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <label className=\"testNav invisible\" style={{position: \"absolute\",top:'0',left:'0', margin:'1.25vh 1vw', fontSize: 'calc(10px + 1vw)', zIndex: 1500 }} >\n                <input className=\"testNavLight invisible\" style={{ width: '3ch', fontSize: 'calc(10px + 1vw)' }} type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n                of {props.qNumber}</label>\n            <button className=\"testNav invisible \" style={{ position: \"absolute\", top: '48vh', right: 0, background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n\n            <label className=\"testNav invisible\" style={{ position: \"absolute\", background: \"transparent\", top: 0, left: '38vw', width: '8ch', zIndex: 1500 }}>{displayTime}</label> \n            <button className=\"testNav invisible\" id=\"finishBtn\"  style={{ position: \"absolute\", top: 0, right: 0,marginTop:'1.25vh', backgroundImage:`url(${process.env.PUBLIC_URL + \"/icons/finish.svg\"})`,width: \"9vh\", height: \"3vh\", borderWidth: '0px',borderRadius:'5px', zIndex: 1500 }}\n                onClick={stopTest}></button>\n\n        </Fragment>\n    );\n}\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst LayoutBox = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i < document.querySelectorAll(\".checkOut\").length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n\n    });\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n            <div id='questionContainerBox' style={{ opacity: props.vis}}>\n                <section className=\"questionSection\">\n                    <Textfit max={256}\n                        min={24}\n                        style={{\n                            color:'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin:'auto',\n                            textAlign:\"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n              \n                </section>\n                <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-between',alignContent:'center', flexWrap: 'wrap', width: '99%', overflow:'visible' }}>\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{width:'49%',minHeight:'22%', maxHeight: '200px', maxWidth:'200px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Box\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n            </div>\n        </Fragment>\n    );\n}\nexport default LayoutBox;","import React, { useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nfunction LayoutSimple(props) {\n\n    useEffect(() => {\n        console.log(props.answers)\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n        \n    }, []);\n    function checkingMulti(e) {\n        if (props.info.correct === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <div id='questionContainerSimple' style={{ opacity: props.vis}}>\n            <section className=\"questionSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\n                <div style={{width:'100%',display: 'flex',justifyContent:'center', alignItems: 'center', height: window.innerWidth < 700 ? '30%' : '70%' }}>\n                    <img src={props.info.img} style={{ height:'100%', alignSelf:'center'}} alt={props.info.img} />\n                </div>\n                <div style={{width:'100%', height: window.innerWidth < 700 ? '70%' : '30%' }}>\n                    <Textfit max={256}\n                        min={24}\n                        style={{\n                            color: 'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin: 'auto',\n                            textAlign: \"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n                </div>\n            </section>\n            <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\n                {props.answers.map((answerOption, j) => {\n                    return (\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256}\n                                    min={24}\n                                    style={{\n                                        minHeight: \"90%\",\n                                        maxHeight: \"90%\",\n                                        minWidth: \"90%\",\n                                        maxWidth: \"90%\",\n                                        lineHeight: 1,\n                                        textAlign: \"center\",\n                                        textShadow: '1px 1px 2px black'\n                                    }}>{answerOption.text}</Textfit>\n                            </div>\n                        </label>\n                    )\n                })}\n            </section>\n        </div>\n    );\n}\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\nimport LayoutBox from '../../components/LayoutBox';\nimport LayoutSimple from '../../components/LayoutSimple';\nconst QuestionDisplay = props => {\n    const [backgroundVal,setBackgroundVal]= useState('')\n    useEffect(() => {\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\n        setBackgroundVal(gradientValue+comma+backgroundValue)\n        console.log(props.question)\n    }, []);\n    return (\n            <div style={{height:'100vh',width:'100%',backgroundImage:backgroundVal, backgroundRepeat: \"no-repeat\", backgroundSize: 'cover', overflowY: 'hidden', position: 'fixed'}}>\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}    \n            </div>\n    );\n}\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nfunction GetResults(props) {\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    useEffect(() => {\n        let resultsData = []\n        const fetchData = async () => {\n\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    resultsData.push(doc.data());\n                });\n                resultsData.sort(function (a, b) {\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\n                });\n                setTestsRecords(resultsData);\n            });\n\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\n        };\n        fetchData();\n        console.log(testRecords);\n\n    }, [])\n\n    return (\n        <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n            <table style={{ margin:'auto' }} >\n                <tr>\n                    <th>Name</th>\n                    <th>Result</th>\n                    <th>Time Left</th>\n                </tr>\n                <tbody>\n                {testRecords && testRecords.map((test, j) => {\n                    return (\n                        <tr key={j}>\n                            <td key={\"name\"+j}>{test.displayName}</td>\n                            <td key={\"result\"+j}>{test.result}</td>\n                            <td key={\"time\"+j}>{test.time}</td>\n                        </tr>\n\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default GetResults;","import React, { useState, useRef } from 'react';\nimport firebase from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport GetResults from \"../getResults\";\nconst ResultsDisplay = props => {\n    const { currentUser } = useAuth()\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\n    // const [toTest, setToTest] = useState([false]);\n\n\n    // useEffect(() => {\n    // if (toTest[0]===true){\n    //     return <Redirect to=\"/update-profile\" />;}\n    // },[toTest]);\n    function handleSave() {\n        const db = firebase.firestore();\n        db.collection(\"results\").add({\n            testId: props.testId,\n            displayName: testeeName,\n            userId: testeeId.current,\n            result: props.rate,\n            time: timeInSeconds(props.time)\n        }).then(result=>{handleDont()})\n        .catch(e=>{console.log('fail to record result')})\n        \n    }\n    function handleDont() {\n        window.location.assign(process.env.PUBLIC_URL + '/test');\n        console.log(\"redirect to /test\")\n        // setToTest([true]);\n    }\n    function timeInSeconds(t) {\n        let time = t.split(':');\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\n    }\n    return (\n\n        <div style={{ display: 'flex', flexWrap: 'wrap', width: '100%', height: '100vh', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '1px 1px #f5d142',\n         backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' , backgroundSize: '100% 100%' }}>\n           {props.testId.length > 0 &&  <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\n           {props.testId.length > 0 && <GetResults testId={props.testId} />}\n           <button className=\"testNav\" style={{position:\"absolute\", top:0,right:0, background:\"transparent\",borderWidth:'0px', zIndex:1500}}\n                    onClick={e => handleDont(e)}>\n                        <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:\"4vh\",height:\"4vh\"}}/>\n                        </button>  \n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\n             <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\"}}>\n             <table style={{ margin: 'auto' }} >\n                    <tr>\n                        <th>Question</th>\n                        <th>Result</th>\n                    </tr>\n\n                    {props.res.map((res, j) => {\n                        return (\n                            <tr key={\"n\"+j}>\n                                <td key={\"num\"+j} >{j + 1}</td>\n                                <td key={\"correct\"+j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            </div>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\n\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\n            </label>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</button>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</button>}\n            <div style={{display: 'flex', width: '100%',justifyContent: 'center'}}>\n            {props.testId.length <= 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</button>}\n            </div> \n        </div>\n    );\n}\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\nimport TestNav from '../testNav';\nimport QuestionDisplay from '../QuestionDisplay';\nimport ResultsDisplay from '../ResultsDisplay';\nimport \"./style.css\";\n\nfunction TestRun(props) {\n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\n  var testBackground = props.test.main.background;\n  var quizMain = props.test.test;\n  var test = [];\n  var choiceSet = [];\n  const [displayQ, setDisplayQ] = useState(0);\n  const [resultTime, setResultTime] = useState('');\n  const [choices, setChoices] = useState([]);\n  const [results, setResults] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [visible, setVisible] = useState(0);\n  const [testGenerated, setTestGenerated] = useState('');\n  function randomizer(arr) {\n\n    let testArray = [];\n    let answerCount = arr.length;\n    let positionN = 0;\n    for (let i = 0; i < answerCount; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n\n    }\n    return testArray\n  }\n\n  function randomChoice(arr, n) {\n\n    let testArray = [];\n    let positionN = 0;\n    for (let i = 0; i < n; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n    }\n    return testArray\n  }\n  function handleChoices(ch) {\n    let localChoices = choices;\n    localChoices.splice(displayQ, 1, ch)\n    setChoices(localChoices);\n\n  }\n  function handleChangeQuestion(q) {\n    if (q > 0) { setDisplayQ(q - 1) }\n    else {\n      setDisplayQ(q);\n      setVisible(1);\n\n    }\n  }\n  function correctAnswers() {\n    let arr = [];\n    let arrSmall = [];\n    for (let i = 0; i < testGenerated.length; i++) {\n      arrSmall = [];\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\n      }\n      arr.push(arrSmall)\n    }\n    return arr\n  }\n  function handleQuizEnd(t) {\n    let arr = [];\n    let n = 0;\n    console.log(t);\n    let correctArr = correctAnswers();\n    setVisible(0);\n    for (let i = 0; i < correctArr.length; i++) {\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\n      if (arr[i] === true) n += 1\n    }\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\n    setRating(((n / correctArr.length * 100).toFixed(2)));\n    setResults(arr);\n    setResultTime(t);\n    console.log(results)\n  }\n\n  useEffect(() => {\n    console.log(props.test.id)\n    let answersSet = [];\n    for (let i = 0; i < quizMain.length; i++) {\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\n      answersSet = randomizer(answersSet);\n\n      test.push({\n        \"info\": quizMain[i].info,\n        \"question\": quizMain[i].question,\n        \"answers\": answersSet,\n      })\n      choiceSet.splice(0, 0, [])\n\n    }\n    setChoices(choiceSet);\n    setTestGenerated(test);\n    document.querySelector(\"nav.navbar\").style.display = 'none';\n  }, []);\n\n\n\n  return (\n    <>\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testId={props.local?\"\":props.test.id} />}\n      {testGenerated && results.length <= 0 && \n      <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\n      <TestNav qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\n      </div>\n      }\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient}   info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\n    </>\n  )\n}\n\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\nimport firebase from \"../firebase\";\nimport {useParams} from 'react-router-dom'\nimport TestRun from './TestRun'\nexport default function DirectTestPage() {\n  // http://localhost:3000/taketest/DDKOWkpHKTC3l2Aav7bC\n  const [test, setTest]=useState({});\n  const [loading, setLoading]=useState(false)\n  const db = firebase.firestore();\n  let { id } = useParams();\n  useEffect(() => {\n     db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\n      \n      setTest({ ...querySnapshot.data(), id: id } );\n      setLoading(true);\n     })\n     .catch(error=>{\n      console.log(error)\n     })\n        \n    \n\n  }, [])\n  return (\n    <>\n{loading && <TestRun test={test} local={false} />}\n    </>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport  \"./Nav.scss\";\n\n\nfunction Nav(props) {\n    const [isNavCollapsed, setIsNavCollpased] = useState(true);\n    const { currentUser } = useAuth();\n    const [imgDisplay, setImgDisplay] = useState('');\n    \n    function handleNavCollpase() {\n        setIsNavCollpased(!isNavCollapsed)\n    }\n    useEffect(() => {\n        let imgLink =  process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\n        else{\n            setImgDisplay(imgLink)\n        }\n        \n    }, [currentUser]);\n    useEffect(()=>{\n        if(window.innerWidth<1000){\n        if (isNavCollapsed){\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"block\";\n        }\n    }\n\n    },[isNavCollapsed]);\n    useEffect(()=>{\n        if (window.innerWidth>=1000){\n            document.querySelector(\"#navbarNav\").style.display=\"flex\";\n            document.querySelector(\"#navbarNav\").style.justifyContent=\"center\";\n            document.querySelector(\"#navbarNav\").style.width=\"83%\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n       \n\n    },[window.innerWidth]);\n\n    return (\n        <nav className=\"navbar\" >\n            \n            {window.innerWidth<1000 ? <Link to=\"/\"><img className=\"member-photo\" src={imgDisplay} alt=\"avatar\"/></Link>\n             :<Link to=\"/\" className=\"navHeader\"> <img src={ process.env.PUBLIC_URL+\"/icons/logoName.svg\"} alt=\"close\" style={{width:'1.5em',height:'2em'}}/></Link> }\n\t\t\t{window.innerWidth<1000 ? <Link to=\"/\" className=\"navHeader\"> \n            <img src={ process.env.PUBLIC_URL+\"/icons/QuizLogo.svg\"} alt=\"logo\" style={{width:'4vw',height:'4vw'}}/>Quiz Land</Link> : null}\n            {window.innerWidth<1000 ? <span id=\"navbar-toggler\"  onClick={handleNavCollpase}>\n                <div style={{ width: '1em', height: '1em',float:'center' }}>\n                   {isNavCollapsed ? \n                     <img src={ process.env.PUBLIC_URL+\"/icons/burger.svg\"} alt=\"open\" /> :\n                    <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" />}\n                </div>\n            </span>: null}\n            \n                <ul id=\"navbarNav\">\n\n\n                   {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Login\n                        </Link>\n\n                    </li>}\n                    {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Signup\n                    </Link>\n\n                    </li>}\n\n                    <li className=\"nav-item\">\n                        <Link to=\"/test\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Take tests\n                    </Link>\n                    </li>\n                   {  currentUser ? <li className=\"nav-item\">\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Create tests\n                    </Link>\n                    </li>:\"\"}\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            About\n                    </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollpase()} >\n                            Logout\n                    </Link>\n                    </li>\n                </ul>\n            \n\n            {window.innerWidth<1000 ? null: <Link to=\"/\">\n               <img className=\"member-photo\"  src={imgDisplay} alt=\"member avatar\"/>\n            </Link>}\n        </nav>\n    );\n}\n\nexport default Nav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst ChooseCategory = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i <props.answers.length; i++) {\n            document.querySelector(\"#category_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#category_\" + i).checked = true;\n        }\n        console.log(props.answers)\n    },[]);\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#category_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#category_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n                <section className=\"categoriesSection\" >\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelCat\" + j} style={{width:'47%',maxHeight:'180px', maxWidth:'180px', margin:'5px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputCat\" + j} id={\"category_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divCat\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Cat\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n        </Fragment>\n    );\n}\nexport default ChooseCategory;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport ChooseCategory from \"../components/ChooseCategory\";\nimport { Link } from \"react-router-dom\";\nfunction GetTests(props) {\n    const db = firebase.firestore();\n    const { currentUser } = useAuth();\n    const [testRecords, setTestsRecords] = useState([]);\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [categories, setCategories] = useState([]);\n    const [categoriesLayout, setCategoriesLayout] = useState([]);\n    const [checked, setChecked] = useState([]);\n    const [testFromDB, setTestFromDB] = useState({})\n    const [checkEditLocalTestVisible, setCheckEditLocalTestVisible] = useState(false);\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('tests').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    props.reloadNeeded(true);\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n        if (decision1 === \"Proceed\") {\n            props.onChange(testFromDB);\n            props.onLocal(false);\n        }\n    }\n    function handleLink(e) {\n        let recId = e.target.getAttribute(\"value\");\n        console.log(recId)\n        setAlertStyle({\n            variantHead: \"success\",\n            heading: \"Direct link to Test\",\n            text: `https://sbolotnikov.github.io/test-editor/#/taketest/${recId}`,\n            color1: \"\",\n            button1: \"\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\n        let objFound = testRecords[elementPos];\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleClick(test) {\n        console.log(test.target.getAttribute(\"value\"))\n        if (props.forPage === 'create') {\n            setAlertStyle({\n                variantHead: \"danger\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n            setRevealAlert(true);\n            setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0])\n        } else { props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0]) }\n    }\n    const fetchData = async () => {\n        let arrTemp = [];\n        const data = await db.collection(\"tests\").get();\n        if (props.forPage === 'create')\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\n        else\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setTestsRecords(arrTemp);\n        setTestsRecordsDisplay(arrTemp);\n    };\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setCategories(arrTemp);\n        arrTemp = arrTemp.map(option => { return ({ 'text': option.value, img: process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\" }) });\n        console.log(arrTemp)\n        setCategoriesLayout(arrTemp);\n    };\n    function getChoosenTests(ch) {\n        setChecked(ch);\n        (ch.length > 0) ? setSelectedOption(categories.filter((n, j) => ch.indexOf(j) > -1)) : setSelectedOption(categories)\n    }\n    function readSingleFile(evt) {\n        var f = evt.target.files[0];\n        if (f) {\n            var r = new FileReader();\n            r.onload = function (e) {\n                setTestFromDB(JSON.parse(e.target.result));\n                if (props.forPage === 'create') {\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                        color1: \"danger\",\n                        button1: \"Proceed\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                } else {\n                    props.onChange(JSON.parse(e.target.result));\n                    props.onLocal(true);\n                }\n                // setLocalTest(true)\n            }\n            r.readAsText(f);\n\n        } else {\n            alert(\"Failed to load file\");\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        fetchData();\n    }, []);\n    useEffect(() => {\n        let recordSet = testRecords;\n        let chosenRec = [];\n        console.log(selectedOption);\n        if (selectedOption) {\n            for (let i = 0; i < selectedOption.length; i++) {\n                let tempArr = [];\n                for (let j = 0; j < recordSet.length; j++) {\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\n                }\n                chosenRec = chosenRec.concat(tempArr);\n            }\n        }\n        setTestsRecordsDisplay(chosenRec);\n    }, [selectedOption])\n    return (\n        <div style={{ width: '100%', maxWidth: \"600px\", height: \"40vh\", margin: '10% 0%' }}>\n            {categoriesLayout &&\n                <ChooseCategory type={categoriesLayout.length} answers={categoriesLayout} checkedMarks={checked} onChange={(ch) => { getChoosenTests(ch) }} />\n            }\n            <div style={{ backgroundColor: 'white', width: '97%', height: '45%', overflow: 'auto', margin: 'auto' }}>\n                {testRecordsDisplay && testRecordsDisplay.map((test, j) => {\n                    return (\n                        <div key={\"divTests\" + j} style={{ display: \"flex\", margin: '5px' }} >\n                            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: 0, whiteSpace: 'nowrap' }} key={\"linkBtnTests\" + j} value={test.id} onClick={e => handleLink(e)}>Link &#128279;</button>\n                            {(props.forPage === 'create') &&\n                                <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: 0, whiteSpace: 'nowrap' }} key={\"eraseBtnTests\" + j} value={test.id} onClick={e => handleDelete(e)}>Del <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(.9vw,10px)', height: 'max(.9vw,10px)' }} /></button>\n                            }\n                            <div key={\"textTests\" + j} className='testText' style={{ cursor: \"pointer\", whiteSpace: 'nowrap', width: \"auto\" }} value={test.id} onClick={e => handleClick(e)} >{test.main.name} by {test.main.authorName} </div>\n                        </div>\n                    )\n                }\n                )}\n            </div>\n            {currentUser && <label >\n                <input type=\"checkbox\" id=\"checkEditLocalTest\" style={{ marginLeft: '2%' }} onChange={e => setCheckEditLocalTestVisible(document.querySelector(\"#checkEditLocalTest\").checked)} />\n              Load local test from your disk\n              </label>}\n            {currentUser && checkEditLocalTestVisible && <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />}\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {(props.forPage === 'test') && <Link to=\"/taketest/RtqxyubO57LToxbaOzpj\">\n                <button className=\"btnNav\">\n                    Take Demo Test\n              </button>\n            </Link>}\n        </div>\n    );\n}\nexport default GetTests;","import React, { useState } from 'react';\nimport TestRun from '../../components/TestRun';\nimport GetTests from '../../components/getTests';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport \"./style.css\";\n\n\nfunction ToRenderEverything() {\n\n  const [testLoad, setTestLoad] = useState(false);\n  const [localTest, setLocalTest] = useState(false);\n  const { currentUser } = useAuth()\n\n  function getTestfromDB(n) {\n    console.log(n)\n    setTestLoad(n);\n  }\n  return (\n    <div className=\"testContainer\">\n      {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onLocal={l => setLocalTest(l)} onChange={n => getTestfromDB(n)} />}\n      {testLoad && <TestRun test={testLoad} local={localTest} />}\n    </div>\n  )\n}\n\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\nimport Cloudinary from './Cloudinary';\nfunction GetText(props) {\n    const [answerText, setAnswerText] = useState(props.answer.text);\n    const [imgLink, setImgLink] = useState(props.answer.img);\n    const [checkBox, setCheckBox] = useState();\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        setImgLink(url);\n        sendBack(answerText, url);\n    }\n    function changeInput(e) {\n        setAnswerText(e.target.value)\n        sendBack(e.target.value, imgLink);\n    }\n    function changeImage(e) {\n        setImgLink(e.target.value);\n        console.log(imgLink)\n        sendBack(answerText, e.target.value);\n    }\n    function sendBack(a, b) {\n        let choice = {\n            text: a,\n            img: b,\n            num: props.num\n        };\n        props.onChange(choice);\n    }\n    useEffect(() => {\n        setAnswerText(props.answer.text);\n        if (props.answer.img.length > 0) {\n            setCheckBox(true);\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\n            setImgLink(props.answer.img);\n        } else {\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\n            setCheckBox(false);\n        }\n    }, [props.answer]);\n    return (\n            <div >\n                <textarea style={{ width: '100%' }} value={answerText} onChange={e => changeInput(e)} />\n                <label style={{ color: 'black', width: '100%' }}>\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\n                check to add image link</label>\n                {checkBox && <div>\n                    <input type=\"text\" style={{ width: '80%', opacity: checkBox }} value={imgLink} onChange={e => changeImage(e)} />\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                </div>}\n            </div>\n    );\n}\nexport default GetText;","import React, { useEffect, useState } from 'react';\nimport GetText from './GetText.js';\n\nfunction GetAnswers(props) {\n    function handleNewText() {\n        let emptyNew = { text: '', img: '', choice: props.correct };\n        props.onNew(emptyNew);\n    }\n    function handlePasteText(){\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\n        if (pasteItem===null) return\n        pasteItem.choice=props.correct;\n        props.onNew(pasteItem);\n    }\n    function handleChangeText(t) {\n        let localArr = props.answers;\n        if ((t.text === '') && (t.img === '')) {\n            localArr.splice(t.num, 1);\n        } else {\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\n            localArr.splice(t.num, 1, answerRenew)\n        }\n        props.onChange(localArr);\n    }\n    function handleDelete(e) {\n        props.onDelete(e.target.value)\n    }\n    function handleCopy(e){\n        props.onCopy(e.target.value)\n    }\n    const [answers, setAnswers] = useState([]);\n    useEffect(() => {\n        setAnswers(props.answers);\n    }, [props.answers]);\n    return (\n        <div style={{display:\"flex\", alignItems:\"start\", justifyContent:\"start\"}}>\n            <div style={{width:'85%' }}>\n                <div>\n                    {answers && answers.map((answerOption, j) => {\n                        return (\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\", margin:0 }}  key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>&#128209;Copy</button>\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />         \n                            </div>\n                        )\n                    }\n                    )}\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handlePasteText() }}>&#128203;Paste</button>\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handleNewText() }}>New &#10133;</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\nimport GetAnswers from './GetAnswers.js';\nimport Cloudinary from './Cloudinary';\nfunction GetQuestion(props) {\n    var questionObj = {}\n\n    const [rights, setRights] = useState([]);\n    const [wrongs, setWrongs] = useState([]);\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        props.onChange({ \"mainImg\": url })\n    }\n    // list available layouts\n    var layouts = [\"simple\", \"box\"];\n    useEffect(() => {\n        document.querySelector(\"#question\").value = props.q.question;\n        document.querySelector(\"#mainImg\").value = props.q.info.img;\n        document.querySelector(\"#positionsCount\").value = props.q.info.positions;\n        document.querySelector(\"#correctCount\").value = props.q.info.correct;\n        document.querySelector(\"#layout1\").value = props.q.info.layout;\n        setRights(props.q.rights);\n        setWrongs(props.q.wrongs);\n\n    }, [props.q]);\n    function handleReturnData(t, corr) {\n        if (corr) {\n            questionObj.rights = t;\n            // setRights(localChoices);\n        } else {\n            questionObj.wrongs = t;\n            //  setWrongs(localChoices);\n        }\n        props.onChange(questionObj)\n    }\n    function handleCopyData(n, corr) {\n        (corr) ? questionObj = props.q.rights[n] : questionObj = props.q.wrongs[n];\n        localStorage.setItem('answerCopy', JSON.stringify(questionObj));\n    }\n    function newRecord(e, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.push({ text: e.text, img: e.img, choice: true });\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.push({ text: e.text, img: e.img, choice: false });\n        }\n        props.onChange(questionObj)\n    }\n\n\n    function delRecord(n, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.splice(n, 1);\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.splice(n, 1);\n        }\n        props.onChange(questionObj)\n    }\n\n    return (\n        <Fragment>\n            <label className='headerStyle'>Enter your question\n            <textarea id=\"question\" onChange={e => { props.onChange({ \"question\": e.target.value }) }} />\n            </label>\n            <br/>\n            <label className='headerStyle'>Add your question main picture link (if you have one)\n            <input id=\"mainImg\" onChange={e => { props.onChange({ \"mainImg\": e.target.value }) }} />\n            </label>\n            <Cloudinary getImgUrl={getImgUrl} />\n            <label className='headerStyle'>Choose question layout\n                <select id=\"layout1\" onChange={e => { props.onChange({ \"layout1\": e.target.value }) }} >\n                    {layouts.map((option, i) => {\n                        return (\n                            <option value={option} key={'layout_option' + i}>{option}</option>\n                        )\n                    }\n                    )}\n                </select>\n             </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label>\n                        <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length + wrongs.length}  onChange={e => { props.onChange({ \"positionsCount\": e.target.value }) }} />            \n                        How many positions would be displayed?(Maximum should be less then answers options)\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label>\n                        <input id=\"correctCount\" type=\"number\" min={0} max={rights.length}  onChange={e => { props.onChange({ \"correctCount\": e.target.value }) }} />           \n                        How many correct options should be selected?(Maximum should be less then correct answers options)\n                    </label>\n                </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel2'>\n                    <label className='headerStyle'>Enter text of the correct answers:</label>\n                    {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\n                </section>\n                <section className='panel1'>\n                    <label className='headerStyle'>Enter text of the wrong answers:</label>\n                    {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\n                </section>\n            </div>\n        </Fragment >\n    )\n}\nexport default GetQuestion;","import React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nfunction TestCreateNav(props) {\n\n    const [qArr, setqArr] = useState('');\n    const [moveVis, setMoveVis] = useState(false);\n    useEffect(() => {\n        document.getElementById('questionPage').value = 1;\n    }, []);\n    useEffect(() => {\n        let arr = [];\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\n        setqArr(arr);\n    }, [props.qNumber]);\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    function deleteRec() {\n        props.onDel('');\n        let n = document.querySelector(\"#questionPage\");\n        let k = \"\"\n        if (parseInt(n.value) !== props.qNumber) {\n            k = n.value;\n            n.value = k;\n        } else {\n            k = n.value;\n            n.value = (parseInt(k) - 1).toString();\n        }\n    }\n    function visibilityMoveTo() {\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\n        setMoveVis(!moveVis)\n    }\n    return (\n\n        <div className=\"navContainer\" style={{ position: 'relative' }} >\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#f5d142' }}><strong>Question editing panel</strong></h3>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet('1') }}>&#9198;</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <input className=\"testNavLight text-center\" style={{width:'3ch'}} type=\"number\" id=\"questionPage\"  min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\n            <button className=\"testNav\"\n                onClick={e => { deleteRec() }}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/>Delete</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\n            {(props.qNumber > 1) && <button className=\"testNav\"\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\n            }}>\n                {qArr.map((option, i) => {\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\n                }\n                )}\n            </select>}\n        </div>\n\n    );\n}\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nfunction GetGradient(props) {\n    const db = firebase.firestore();\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [gradients, setGradients] = useState([]);\n    const [newGradient, setNewGradient] = useState('');\n    const [newGradientName, setNewGradientName] = useState('');\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\n\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('gradients').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n    }\n    function handleAdd(e) {\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\n            .then(res => {\n                console.log('added');\n                props.reloadNeeded(true);\n                // setGradients(gradients.push({name:newGradientName,value:newGradient}))\n            })\n            .catch(error => {\n                console.log(\"can not delete a record\");\n            })\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\n        setAlertStyle({\n            left: \"0\",\n            top: \"0\",\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n\n        setRevealAlert(true)\n    }\n    function handleClick(grad) {\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\n        props.onChange(gr[0].value);\n    }\n    const fetchGradients = async () => {\n\n        const data = await db.collection(\"gradients\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n        setGradients(arrTemp);\n    };\n    useEffect(() => {\n        fetchGradients();\n    }, []);\n\n    return (\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {gradients && gradients.map((item, j) => {\n                return (\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius:'10px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\n                        <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  key={\"gradient_del_button\"+j} value={item.id} onClick={e => handleDelete(e)}>Del<img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(.9vw,10px)',height:'max(.9vw,10px)'}}/></button>\n                    </div>\n                )\n            }\n            )}\n            <label>\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} />\n                Add new background gradient CSS to our database of pre-set styles\n            </label>\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '100%' }}>\n                <label className='headerStyle'>Enter gradient CSS</label>\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\n                <label className='headerStyle'>Enter gradient name</label>\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\n                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  onClick={e => handleAdd(e)}>Add &#128504;</button>\n            </div>\n        </div>\n    );\n}\nexport default GetGradient;","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport GetQuestion from '../../components/GetQuestion.js';\nimport TestCreateNav from '../../components/testCreateNav';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport firebase from \"../../firebase\";\nimport \"./style.css\";\nimport GetTests from '../../components/getTests.js';\nimport GetGradient from '../../components/getGradient.js';\nimport AlertMenu from '../../components/alertMenu';\nimport Cloudinary from '../../components/Cloudinary';\nimport QuestionDisplay from '../../components/QuestionDisplay';\nimport CustomSelect from '../../components/CustomSelect';\n\nvar demoArr = [];\nvar emptyQ = {\n    question: '',\n    rights: [{ text: '', img: '', choice: true }],\n    wrongs: [{ text: '', img: '', choice: false }],\n    info: {\n        positions: 2,\n        correct: 1,\n        layout: '',\n        img: ''\n    }\n}\nfunction ToRenderEverything() {\n    var defOptionArray = [];\n    const { currentUser } = useAuth();\n    const [testName, setTestName] = useState('');\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\n    const [visibility, setVisibility] = useState('');\n    const [editability, setEditability] = useState('');\n    const [displayQ, setDisplayQ] = useState(0);\n    const [testBackground, setTestBackground] = useState('');\n    const [testGradient, setTestGradient] = useState('');\n    const [testHH, setTestHH] = useState(0);\n    const [testMM, setTestMM] = useState(0);\n    const [testSS, setTestSS] = useState(0);\n    const [show, setShow] = useState(false);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({})\n    const [testArray, setTestArray] = useState([emptyQ]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\n    const db = firebase.firestore();\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n        });\n        setCategories(arrTemp);\n    };\n    const onReturn = (decision1, inputValue) => {\n        if (decision1 === \"Proceed\") {\n            setRevealAlert(false);\n            reloadNeeded()\n        }\n        if (decision1 === \"Update\") {\n            setRevealAlert(false);\n            let text = {\n                main: {\n                    author: testAuthor.authorId,\n                    authorName: testAuthor.name,\n                    categories: selectedOption,\n                    name: testName,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            db.collection('tests').doc(testAuthor.testId).set(text)\n                .then(result => {\n                    console.log(\"file updated\");\n                    reloadNeeded();\n                })\n                .catch(e => { console.log(\"file fail to updated\"); })\n        }\n        if (decision1 === \"Add\") {\n            console.log(inputValue)\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\n                let newItem = { label: inputValue, value: inputValue }\n                db.collection('categories').add(newItem)\n                    .then(result => {\n                        console.log(\"categories updated\");\n                        setCategories([...categories, newItem]);\n                    })\n                    .catch(e => { console.log(\"categories fail to updated\"); })\n                setRevealAlert(false);\n            } else {\n                setAlertStyle({\n                    left: \"0\",\n                    top: \"0\",\n                    variantHead: \"danger\",\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n                    inputField: 'true',\n                    inputValue: inputValue,\n                    color1: \"danger\",\n                    button1: \"Add\",\n                    color2: \"secondary\",\n                    button2: \"Cancel\"\n                });\n            }\n        }\n        if (decision1 === \"Cancel\") {\n            setRevealAlert(false);\n        }\n    }\n    const reloadNeeded = (a) => {\n        window.location.reload();\n    }\n    const getImgUrl = (url) => {\n        document.querySelector(\"#background\").value = url;\n        setTestBackground(url);\n    }\n    const getGradientCSS = (n) => {\n        document.querySelector(\"#backgroundGradient\").value = n;\n        setTestGradient(n)\n    }\n    function handleUpdateQuestion(q) {\n        if (q > 0) { setDisplayQ(q - 1) }\n        else {\n            setDisplayQ(q);\n        }\n    }\n    function handleReturnQuestion(t) {\n        let arr = [...testArray];\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\n        setTestArray(arr);\n    }\n    function handleCopyQuestion(e) {\n        localStorage.setItem('questionCopy', JSON.stringify(testArray[displayQ]));\n    }\n    function handleInsertQuestion(e) {\n        let arr = [];\n        let questCopy = JSON.parse(localStorage.getItem('questionCopy'));\n        if (questCopy === null) return\n        for (let i = 0; i < testArray.length; i++) {\n            if (i === displayQ + 1) arr.push(questCopy)\n            arr.push(testArray[i])\n        }\n        if (displayQ === testArray.length - 1) arr.push(questCopy)\n        setTestArray(arr)\n        setDisplayQ(displayQ + 1)\n    }\n    function handleAdd(e) {\n        // e.preventDefault()\n        setTestArray(oldArray => [...oldArray, {\n            question: '',\n            rights: [{ text: '', img: '', choice: true }],\n            wrongs: [{ text: '', img: '', choice: false }],\n            info: {\n                positions: 2,\n                correct: 1,\n                layout: '',\n                img: ''\n            }\n        }]);\n        setDisplayQ(testArray.length);\n        console.log(displayQ);\n    }\n    function handleShow() {\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\n        for (let i = 0; i < arr.length; i++) {\n            demoArr.push(arr[i]);\n        }\n        console.log(demoArr);\n        show ? setShow(false) : setShow(true)\n    }\n    function handleDelete() {\n\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\n    }\n    function handleMove(t) {\n        if (t[0] !== t[1]) {\n            let arr = [];\n            let record1 = testArray[t[0]];\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === t[1]) {\n                    if (t[1] > t[0]) {\n                        arr.push(testArray[i]);\n                        arr.push(record1);\n                    } else {\n                        arr.push(record1);\n                        arr.push(testArray[i]);\n                    }\n                }\n                else if (i !== t[0]) arr.push(testArray[i])\n            }\n            setTestArray(arr);\n            setDisplayQ(t[1])\n            console.log(record1, arr)\n        }\n    }\n    function getTestfromDB(n) {\n        console.log(n)\n        let newTest = n;\n        setTestArray(newTest.test);\n        setDisplayQ(0);\n        document.querySelector(\"#questionPage\").value = 1;\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\n        defOptionArray = newTest.main.categories\n        setSelectedOption(defOptionArray);\n        document.querySelector(\"#testName\").value = newTest.main.name;\n        setTestName(newTest.main.name);\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\n        setVisibility(newTest.main.visibility);\n        document.querySelector(\"#editability\").value = newTest.main.editability;\n        setEditability(newTest.main.editability);\n        document.querySelector(\"#background\").value = newTest.main.background;\n        setTestBackground(newTest.main.background);\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n        setTestGradient(newTest.main.gradient);\n        document.querySelector(\"#hh\").value = newTest.main.hours;\n        setTestHH(newTest.main.hours);\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\n        setTestMM(newTest.main.minutes);\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\n        setTestSS(newTest.main.seconds);\n    }\n    function upload(e) {\n        let text = {\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        };\n        db.collection(\"tests\").add(text)\n            .then(result => {\n                console.log(\"file created in DB\");\n                reloadNeeded()\n            })\n            .catch(e => { console.log(\"no connectionto DB\"); })\n    }\n    function download(e) {\n        let text = JSON.stringify({\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        });\n        console.log(text)\n        let filename = \"test.txt\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n    function update(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Warning\",\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\n            color1: \"danger\",\n            button1: \"Update\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function handleNewCategory(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Alert\",\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n            inputField: 'true',\n            inputValue: \"\",\n            color1: \"danger\",\n            button1: \"Add\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function startNewTest(e) {\n        if (testName > \"\") {\n            setRevealAlert(true);\n            setAlertStyle({\n                variantHead: \"info\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n        }\n    }\n    const saveReload = (a) => {\n        if (a) {\n            let text = {\n                main: {\n                    author: currentUser.uid,\n                    authorName: currentUser.displayName,\n                    categories: selectedOption,\n                    name: testName,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            reloadNeeded();\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        let pasteItem = JSON.parse(localStorage.getItem('testCopy'));\n        if ((pasteItem !== null)) getTestfromDB(pasteItem)\n        localStorage.removeItem('testCopy');\n    }, []);\n    return (\n        <div className=\"makerContainer\">\n            <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onLocal={n => { console.log(\"test loaded\") }} onChange={n => getTestfromDB(n)} />\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <div className='navContainer' >\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#f5d142' }}><strong>Test editing panel</strong></h3>\n\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128187;</button>\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload to web &#128228;</button>\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update on web &#128257;</button>}\n\n            </div>\n            <label className='headerStyle' >Enter your test Name\n                    <input id=\"testName\"  onChange={e => setTestName(e.target.value)} />\n            </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                    <select id=\"visibility\" onChange={e => setVisibility(e.target.value)} >\n                            <option value=\"Private\">Private</option>\n                            <option value=\"Public\">Public</option>\n                        </select>\n                        Is this test Private or Public?\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label >\n                    <select id=\"editability\" onChange={e => setEditability(e.target.value)}>\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                        Would you allow others to edit content of test?\n                    </label>\n                </section>\n            </div>\n            {selectedOption &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red',marginLeft:'1.5%' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\n            }\n            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: \"1% 0 0 1.5%\" }} onClick={e => handleNewCategory(e)}>Add New Category</button>\n            <div className=\"panel2 containerGrid\">\n            <section className='headerStyle' >Enter time (if there are no time limit enter 0 0 0):</section>\n            <section className='panel1 headerStyle' style={{  float:'left' }}>\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '5ch' }} onChange={e => setTestHH(e.target.value)} /> hh\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestMM(e.target.value)} /> mm\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestSS(e.target.value)} /> ss\n            </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />           \n                        Add/change BACKGROUND to your test\n                </label>\n                    <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '98%' }}>\n\n                        <label className='headerStyle'>Enter test background image link or upload your image from computer\n                        <input id=\"background\"  onChange={e => setTestBackground(e.target.value)} />\n                        </label>\n                        <Cloudinary getImgUrl={getImgUrl} />\n                    </div>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\n                    Add/change background GRADIENT to your test\n               </label>\n                    <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '98%' }}>\n                        <label className='headerStyle' >Enter test background gradient CSS here\n                        <textarea id=\"backgroundGradient\" onChange={e => setTestGradient(e.target.value)} />\n                        </label>\n                        <GetGradient reloadNeeded={saveReload} onChange={n => getGradientCSS(n)} />\n                    </div>\n                </section>\n            </div>\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\n            {show &&\n                <div className=\"modalContainer\" >\n                    <div className=\"closeTag\" onClick={(e) => setShow(false)}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\n                </div>\n            }\n            {testArray[displayQ] &&\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\n            }\n\n        </div >\n    )\n}\nexport default ToRenderEverything;\n","import React from \"react\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.scss';\n// Components\nimport Signup from \"./components/Signup\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport Logout from \"./components/Logout\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport DirectTestPage from \"./components/DirectTestPage\"\nimport Nav from \"./components/Nav\"\n//Pages\nimport testPage from './pages/testPage';\nimport makeTest from './pages/makeTest';\n\nfunction App() {\n\n  return (\n    <Router>\n      <AuthProvider>\n          <Nav />\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\n            <Route exact path=\"/test\" component={testPage} />\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\n          </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
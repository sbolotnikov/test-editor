{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Footer.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/About.js","components/Logout.js","components/RedirectMain.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/alertMenu.js","components/testNav/index.js","components/LayoutBox/index.js","components/ZoomImage.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/SharePost.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/ChooseCategory/index.js","components/TestPopupInfo.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","components/CustomSelect.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleProvider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","res","console","log","user","catch","error","message","AuthContext","React","createContext","useAuth","useContext","AuthProvider","_ref","children","currentUser","setCurrentUser","useState","loading","setLoading","useEffect","onAuthStateChanged","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","updateProfile","displayName","photoURL","_jsx","Provider","Footer","_jsxs","id","style","position","left","bottom","width","marginLeft","pointerEvents","Link","to","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","Redirect","className","maxWidth","src","alt","onSubmit","async","e","preventDefault","current","length","margin","type","ref","required","disabled","Dashboard","testsCreated","setTestsCreated","testsResultsOnRec","setTestsResultsOnRec","testsAverageScore","setTestsAverageScore","userRating","setUserRating","db","firestore","collection","where","uid","get","result","docs","map","doc","data","resArray","averageRes","i","parseFloat","score","toFixed","rate","marginTop","padding","onClick","window","location","assign","height","float","maxHeight","textAlign","textDecoration","border","backgroundColor","borderRadius","whiteSpace","fontStyle","color","Login","display","justifyContent","alignItems","About","link","setLink","playState","setPlayState","visible","setVisible","marginBottom","minHeight","overflow","ReactPlayer","playing","controls","vis","sub","item","j","cursor","concat","fontSize","outlineColor","marginRight","n","parseInt","currentTarget","handleVisible","subItem","Logout","logoutHandle","RedirectMain","PrivateRoute","component","Component","rest","Route","render","props","ForgotPassword","setMessage","Cloudinary","imageSelected","setImageSelected","onChange","event","target","files","formData","FormData","append","Axios","post","response","parentElement","previousSibling","getImgUrl","pictureUpload","UpdateProfile","userNameRef","userURL","setUserURL","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","document","querySelector","childNodes","variant","AlertMenu","button1Color","setbutton1Color","button2Color","setbutton2Color","AllowScroll","onscroll","Object","values","keys","indexOf","styling","color1","color2","x","scrollX","y","scrollY","scrollTo","StopScroll","top","pageYOffset","zIndex","variantHead","heading","text","inputField","inputValue","onReturn","button1","button2","TestNav","timerInterval","displayTime","setDisplayTime","stringTime","hours","minutes","seconds","revealAlert","setRevealAlert","alertStyle","setAlertStyle","secondsLeft","h","m","s","stopTest","clearInterval","classList","add","querySelectorAll","forEach","userItem","onExit","questionNumberSet","questionNow","Number","isInteger","qNumber","navButton","remove","Fragment","decision1","setInterval","textShadow","background","min","max","toString","right","backgroundImage","borderWidth","LayoutBox","answers","checked","checkedMarks","opacity","Textfit","mode","minWidth","lineHeight","question","alignContent","flexWrap","answerOption","choice","checkingMulti","img","backgroundRepeat","backgroundSize","ZoomImage","visibility","closeModal","LayoutSimple","revealModal","setRevealModal","info","innerWidth","alignSelf","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","gradientValue","gradient","comma","status","layout","ch","GetResults","testRecords","setTestsRecords","resultsData","testId","querySnapshot","sort","a","b","time","fetchData","test","SharePost","socialMediaButton","FacebookShareButton","quote","title","hashtag","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","separator","WhatsappIcon","EmailShareButton","subject","body","media","image","EmailIcon","ResultsDisplay","testeeName","setTesteeName","testeeId","handleDont","timeInSeconds","t","split","userId","_Fragment","testName","description","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","answersSet","rights","wrongs","positions","local","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollapsed","imgDisplay","setImgDisplay","handleNavCollapse","imgLink","ChooseCategory","TestPopupInfo","author","questionsTotal","onRes","GetTests","testRecordsDisplay","setTestsRecordsDisplay","revealInfo","setRevealInfo","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","categoriesLayout","setCategoriesLayout","setChecked","testFromDB","setTestFromDB","checkEditLocalTestVisible","setCheckEditLocalTestVisible","testInfo","setTestInfo","arrTemp","nameA","label","toUpperCase","nameB","option","fetchCategories","forPage","filter","editability","recordSet","chosenRec","tempArr","findIndex","c","index","getChoosenTests","flexDirection","recId","getAttribute","elementPos","objFound","authorName","handleDelete","positionY","clientY","handleHover","handleClick","evt","f","r","FileReader","onload","parse","onLocal","readAsText","alert","readSingleFile","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","l","getTestfromDB","GetText","answerText","setAnswerText","answer","setImgLink","checkBox","setCheckBox","sendBack","num","cor","borderColor","changeInput","changeImage","GetAnswers","setAnswers","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","isSelected","control","styles","singleValue","isDisabled","transition","CustomSelect","options","isMulti","Select","closeMenuOnSelect","isSearchable","demoArr","emptyQ","defOptionArray","setTestName","testDescription","setTestDescription","testAuthor","setTestAuthor","authorId","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","reload","handleShow","slice","newTest","removeItem","set","newItem","element","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","download","upload","getGradientCSS","oldArray","record1","handleMove","handleUpdateQuestion","questCopy","handleInsertQuestion","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","Router","Switch","exact","path","testPage","makeTest","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"wXAIA,MAAMA,EAAMC,IAASC,cAAc,CACjCC,OAAQC,0CACRC,WAAYD,uCACZE,YAAaF,2CACbG,UAAWH,uBACXI,cAAeJ,mCACfK,kBAAmBL,eACnBM,MAAON,8CAEHO,EAAiB,IAAIV,IAASW,KAAKC,mBAC5BC,EAAmBA,KAC9BF,EAAKG,gBAAgBJ,GAAgBK,MAAMC,IACzCC,QAAQC,IAAIF,EAAIG,KAAK,IACpBC,OAAOC,IACRJ,QAAQC,IAAIG,EAAMC,QAAQ,GAC1B,EAESX,EAAOZ,EAAIY,OACTZ,Q,OCnBf,MAAMwB,EAAcC,IAAMC,gBAEnB,SAASC,IACd,OAAOC,qBAAWJ,EACpB,CAEO,SAASK,EAAYC,GAAgB,IAAf,SAAEC,GAAUD,EAEvC,MAAOE,EAAaC,GAAkBC,sBAC/BC,EAASC,GAAcF,oBAAS,GAsCvCG,qBAAU,IACYzB,EAAK0B,oBAAmBlB,IAC1Ca,EAAeb,GACfgB,GAAW,EAAM,KAIlB,IAEH,MAAMG,EAAQ,CACZP,cACAQ,MA5CF,SAAeC,EAAOC,GACpB,OAAO9B,EAAK+B,2BAA2BF,EAAOC,EAChD,EA2CEE,OAhDF,SAAgBH,EAAOC,GACrB,OAAO9B,EAAKiC,+BAA+BJ,EAAOC,EACpD,EA+CEI,OA1CF,WACE,OAAOlC,EAAKmC,SACd,EAyCEC,cAvCF,SAAuBP,GACrB,OAAO7B,EAAKqC,uBAAuBR,EACrC,EAsCES,YApCF,SAAqBT,GACnB,OAAOT,EAAYkB,YAAYT,EACjC,EAmCEU,eAjCF,SAAwBT,GACtB,OAAOV,EAAYmB,eAAeT,EACpC,EAgCEU,WA9BF,SAAoBC,EAAMC,GAGxB,OAFApC,QAAQC,IAAI,mBAAqBkC,EAAOC,GACxCpC,QAAQC,IAAIa,GACLA,EAAYuB,cAAc,CAC/BC,YAAaH,EACbI,SAAUH,IACTtC,MAAK,WACN,IACCK,OAAM,SAAUC,GACjBJ,QAAQC,IAAI,0BACd,GACF,GAsBA,OACEuC,cAAClC,EAAYmC,SAAQ,CAACpB,MAAOA,EAAMR,UAC/BI,GAAWJ,GAGnB,CChEe6B,MATf,WACI,OACIC,eAAA,OAAKC,GAAG,SAASC,MAAO,CAAEC,SAAU,WAAYC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,OAAQC,WAAY,OAAQC,cAAe,UAAWtC,SAAA,CAChI,aACe2B,cAACY,IAAI,CAACC,GAAG,SAAQxC,SAAC,wBAG1C,E,MCJe,SAASyC,IAGtB,MAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,oBACrB,YAAC1C,EAAW,OAAEY,GAAWjB,KACxBL,EAAOuD,GAAY3C,mBAAS,KAC5BC,EAASC,GAAcF,oBAAS,IAChC4C,EAAQC,GAAa7C,oBAAS,GACrC,IAAe,IAAX4C,EAAmB,OAAOpB,cAACsB,IAAQ,CAACT,GAAG,MAC3C,GAAIvC,EAAe,OAAO0B,cAACsB,IAAQ,CAACT,GAAG,cAuBvC,OACEV,eAAA,OAAKoB,UAAU,gBAAelD,SAAA,CAC5B8B,eAAA,OAAKE,MAAO,CAAEI,MAAO,MAAOe,SAAU,SAAUnD,SAAA,CAC9C8B,eAAA,OAAKoB,UAAU,cAAalD,SAAA,CAE1B8B,eAAA,MAAIoB,UAAU,UAASlD,SAAA,CAAC,UACtB2B,cAAA,OAAKyB,IAAK/E,kCAAgDgF,IAAI,cAAcH,UAAU,YACvF3D,GAASoC,cAAA,SAAOuB,UAAU,aAAYlD,SAAET,IACzCuC,eAAA,QAAMwB,SA9BdC,eAA4BC,GAG1B,GAFAA,EAAEC,iBAEEb,EAAYc,QAAQlD,QAAUqC,EAAmBa,QAAQlD,MAC3D,OAAOsC,EAAS,0BAElB,GAAIF,EAAYc,QAAQlD,MAAMmD,OAAS,EACrC,OAAOb,EAAS,+CAElB,IACEA,EAAS,IACTzC,GAAW,GACXQ,EAAO6B,EAASgB,QAAQlD,MAAOoC,EAAYc,QAAQlD,OACnDwC,GAAU,EAEZ,CAAE,MACAF,EAAS,8BACX,CAEAzC,GAAW,EACb,EAUqCL,SAAA,CAC3B8B,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,QACzB2B,cAAA,SAAOI,GAAG,QAAQC,MAAO,CAAEI,MAAO,OAAQwB,OAAQ,WAAaC,KAAK,QAAQC,IAAKpB,EAAUqB,UAAQ,OAE3GjC,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,WACzB2B,cAAA,SAAOI,GAAG,WAAWC,MAAO,CAAEI,MAAO,OAAQwB,OAAQ,WAAaC,KAAK,WAAWC,IAAKlB,EAAamB,UAAQ,OAEpHjC,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,wBACzB2B,cAAA,SAAOI,GAAG,mBAAmBC,MAAO,CAAEI,MAAO,OAAQwB,OAAQ,WAAaC,KAAK,WAAWC,IAAKjB,EAAoBkB,UAAQ,OAEnIpC,cAAA,UAAQqC,SAAU5D,EAAS8C,UAAU,UAAUlB,MAAO,CAAEI,MAAO,OAAQwB,OAAQ,WAAaC,KAAK,SAAQ7D,SAAC,kBAM9G8B,eAAA,OAAKoB,UAAU,WAAUlD,SAAA,CAAC,4BACC2B,cAACY,IAAI,CAACW,UAAU,QAAQV,GAAG,SAAQxC,SAAC,iBAGjE2B,cAACE,EAAM,MAGb,CC2BeoC,MA5Ff,WACE,MAAO1E,EAAOuD,GAAY3C,mBAAS,KAC7B,YAAEF,GAAgBL,KACjBsE,EAAcC,GAAmBhE,mBAAS,IAC1CiE,EAAmBC,GAAwBlE,mBAAS,IACpDmE,EAAmBC,GAAwBpE,mBAAS,IACpDqE,EAAYC,GAAiBtE,mBAAS,kBACvCuE,EAAKxG,EAASyG,YA0CpB,OAJArE,qBAAU,KA7BRoE,EAAGE,WAAW,SAASC,MAAM,cAAe,KAAM5E,EAAY6E,KAAKC,MAChE9F,MAAK+F,IAAYb,EAAgBa,EAAOC,KAAKC,KAAIC,IAAG,IAAUA,EAAIC,WAAWzB,OAAO,IACpFrE,OAAMkE,IAAOrE,QAAQC,IAAI,6BAA6B,IAKzDsF,EAAGE,WAAW,WAAWC,MAAM,SAAU,KAAM5E,EAAY6E,KAAKC,MAC7D9F,MAAK+F,IACJ,IAAIK,EAAWL,EAAOC,KAAKC,KAAIC,IAAG,IAAUA,EAAIC,WAC5CE,EAAa,EACjBnG,QAAQC,IAAIiG,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAS1B,OAAQ4B,IACnCD,GAAcE,WAAWH,EAASE,GAAGP,QAEvC,IAAIS,EAAQ,EACRJ,EAAS1B,OAAS,IAAG8B,GAASH,EAAaD,EAAS1B,QAAQ+B,QAAQ,IACxEnB,EAAqBkB,GACrBpB,EAAqBgB,EAAS1B,QAC9B,IAAIgC,EAAO,GACPF,GAAS,MAAKE,EAAO,iBACrBF,GAAS,KAAIE,EAAO,cACpBF,GAAS,KAAIE,EAAO,gBACpBF,GAAS,KAAIE,EAAO,gBACpBF,GAAS,KAAIE,EAAO,kBACxBlB,EAAckB,EAAK,IAClBrG,OAAMkE,IAAOrE,QAAQC,IAAI,2BAA2B,GAKlC,GACtB,IAED0C,eAAA,OAAKoB,UAAU,gBAAelD,SAAA,CAC5B8B,eAAA,OAAKE,MAAO,CAAEI,MAAO,MAAOe,SAAU,QAASyC,UAAW,MAAO5F,SAAA,CAC/D8B,eAAA,OAAKoB,UAAU,cAAclB,MAAO,CAAE6D,QAAS,SAAU7F,SAAA,CACvD8B,eAAA,OAAKoB,UAAU,WAAW4C,QAAUtC,IAAQuC,OAAOC,SAASC,OAAO5H,kBAA+B,EAAG2B,SAAA,CAAC,IAAC2B,cAAA,OAAKyB,IAAK/E,kCAAgDgF,IAAI,cAAcrB,MAAO,CAAEkE,OAAQ,QAClMvE,cAAA,OAAKyB,IAAK/E,+BAA6CgF,IAAI,QAAQrB,MAAO,CAAEI,MAAO,gBAAiB8D,OAAQ,gBAAiBC,MAAO,cAErI5G,GAASoC,cAAA,SAAOuB,UAAU,aAAYlD,SAAET,IACzCoC,cAAA,OAAKK,MAAO,CAAEmB,SAAU,MAAOiD,UAAW,OAAQxC,OAAQ,UAAYR,IAAKnD,EAAYyB,SAAW,GAAKzB,EAAYyB,SAAWrD,qCAAmDgF,IAAI,gBACrLvB,eAAA,MAAIoB,UAAU,WAAWlB,MAAO,CAAEqE,UAAW,SAAUjE,MAAO,OAAQe,SAAU,OAAQS,OAAQ,QAAS5D,SAAA,CAAC,IAAC2B,cAAA,UAAA3B,SAAQ,MAAWC,EAAYwB,eAC1IK,eAAA,MAAIoB,UAAU,WAAWlB,MAAO,CAAEqE,UAAW,SAAUC,eAAgB,aAActG,SAAA,CAAE,MAAIC,EAAYS,MAAM,UAE/GiB,cAAA,SAAOK,MAAO,CAAEI,MAAO,MAAOmE,OAAQ,kBAAmBC,gBAAiB,QAASC,aAAc,OAAQ7C,OAAQ,WAAY5D,SAC3H8B,eAAA,SAAA9B,SAAA,CACE8B,eAAA,MAAIE,MAAO,CAAEwE,gBAAiB,SAAUxG,SAAA,CACtC2B,cAAA,MAAA3B,SAAK2B,cAAA,OAAKK,MAAO,CAAE0E,WAAY,OAAQL,UAAW,SAAUjE,MAAO,QAASpC,SAAC,oBAC7E8B,eAAA,MAAA9B,SAAA,CAAI,IAAC2B,cAAA,QAAMK,MAAO,CAAE2E,UAAW,UAAWC,MAAO,WAAY5G,SAAEkE,UAEjEpC,eAAA,MAAIE,MAAO,CAAEwE,gBAAiB,SAAUxG,SAAA,CACtC2B,cAAA,MAAA3B,SAAI2B,cAAA,OAAKK,MAAO,CAAE0E,WAAY,OAAQL,UAAW,SAAUjE,MAAO,QAASpC,SAAC,4BAC5E8B,eAAA,MAAA9B,SAAA,CAAI,IAAC2B,cAAA,QAAMK,MAAO,CAAE2E,UAAW,UAAWC,MAAO,WAAY5G,SAAEoE,UAEjEtC,eAAA,MAAIE,MAAO,CAAEwE,gBAAiB,SAAUxG,SAAA,CACtC2B,cAAA,MAAA3B,SAAI2B,cAAA,OAAKK,MAAO,CAAE0E,WAAY,OAAQL,UAAW,SAAUjE,MAAO,QAASpC,SAAC,0BAC5E8B,eAAA,MAAA9B,SAAA,CAAI,IAAC8B,eAAA,QAAME,MAAO,CAAE2E,UAAW,UAAWC,MAAO,WAAY5G,SAAA,CAAEsE,EAAkB,aAEnF3C,cAAA,MAAIK,MAAO,CAAEwE,gBAAiB,eAAgBxG,SAC5C2B,cAAA,MAAA3B,SAAI2B,cAAA,OAAKK,MAAO,CAAE0E,WAAY,OAAQL,UAAW,SAAUjE,MAAO,OAAQwE,MAAO,eAAgB5G,SAAC,cAEpG8B,eAAA,MAAIE,MAAO,CAAEwE,gBAAiB,aAAcxG,SAAA,CAC1C2B,cAAA,MAAA3B,SAAI2B,cAAA,OAAKK,MAAO,CAAE0E,WAAY,OAAQL,UAAW,SAAUjE,MAAO,QAASpC,SAAC,iBAC5E8B,eAAA,MAAA9B,SAAA,CAAI,IAAC2B,cAAA,QAAMK,MAAO,CAAE2E,UAAW,UAAWC,MAAO,WAAY5G,SAAEwE,eAIrE7C,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAAEI,MAAO,OAAQwB,OAAQ,WAAakC,QA1E/EvC,iBACET,EAAS,IACTiD,OAAOC,SAASC,OAAO5H,gCACzB,EAuEqG2B,SAAC,sBAIlG2B,cAACE,EAAM,MAGb,EC1Fe,SAASgF,IAEtB,MAAMnE,EAAWC,mBACXC,EAAcD,oBACd,YAAE1C,EAAW,MAAEQ,GAAUb,KACxBL,EAAOuD,GAAY3C,mBAAS,KAC5BC,EAASC,GAAcF,oBAAS,IAChC4C,EAAQC,GAAa7C,oBAAS,GACrC,IAAe,IAAX4C,EAAmB,OAAOpB,cAACsB,IAAQ,CAACT,GAAG,MAiB3C,OACEV,eAAA,OAAKoB,UAAU,gBAAelD,SAAA,CAC5B8B,eAAA,OAAKE,MAAO,CAAEI,MAAO,MAAOe,SAAU,SAAUnD,SAAA,CAC9C8B,eAAA,OAAKoB,UAAU,cAAalD,SAAA,CAC1B8B,eAAA,MAAIoB,UAAU,UAASlD,SAAA,CAAC,SACtB2B,cAAA,OAAKyB,IAAK/E,kCAAgDgF,IAAI,cAAcH,UAAU,SAAS,OAChG3D,GAASoC,cAAA,SAAOuB,UAAU,aAAYlD,SAAET,IACzCuC,eAAA,QAAMwB,SAtBdC,eAA4BC,GAC1BA,EAAEC,iBAEF,IACEX,EAAS,IACTzC,GAAW,SACLI,EAAMiC,EAASgB,QAAQlD,MAAOoC,EAAYc,QAAQlD,OACxDwC,GAAU,EACZ,CAAE,MACAF,EAAS,mBACX,CAEAzC,GAAW,EACb,EASqCL,SAAA,CAC3B8B,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,QACzB2B,cAAA,SAAOI,GAAG,QAAQC,MAAO,CAAEI,MAAO,OAAQwB,OAAQ,WAAaC,KAAK,QAAQC,IAAKpB,EAAUqB,UAAQ,OAE3GjC,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,WACzB2B,cAAA,SAAOI,GAAG,WAAWC,MAAO,CAAEI,MAAO,OAAQwB,OAAQ,WAAaC,KAAK,WAAWC,IAAKlB,EAAamB,UAAQ,OAEpHpC,cAAA,UAAQqC,SAAU5D,EAAS8C,UAAU,UAAUlB,MAAO,CAAEI,MAAO,OAAQwB,OAAQ,WAAaC,KAAK,SAAQ7D,SAAC,cAI5G8B,eAAA,UAAQoB,UAAU,UAAU4C,QAAS/G,EAAkBiD,MAAO,CAAE8E,QAAS,OAAQC,eAAgB,eAAgB3E,MAAO,OAAQwB,OAAQ,UAAWoD,WAAY,SAAUnB,QAAS,SAAU7F,SAAA,CAC1L2B,cAAA,OAAKyB,IAAK/E,gCAA8C2D,MAAO,CAAEI,MAAO,OAASiB,IAAI,gBACrF1B,cAAA,QAAA3B,SAAM,6BAER2B,cAAA,OAAKuB,UAAU,WAAUlD,SACvB2B,cAACY,IAAI,CAACW,UAAU,QAAQV,GAAG,mBAAkBxC,SAAC,0BAGlD8B,eAAA,OAAKoB,UAAU,WAAUlD,SAAA,CAAC,oBACP2B,cAACY,IAAI,CAACW,UAAU,QAAQV,GAAG,UAASxC,SAAC,eAExD8B,eAAA,OAAKoB,UAAU,WAAUlD,SAAA,CAAC,gBACX2B,cAACY,IAAI,CAACW,UAAU,QAAQV,GAAG,iCAAgCxC,SAAC,yBAG7E2B,cAACE,EAAM,MAGb,C,qBChEe,SAASoF,IAiDtB,MAAOC,EAAMC,GAAWhH,mBAAS,KAC1BiH,EAAWC,GAAgBlH,oBAAS,IACpCmH,EAASC,GAAcpH,oBAAU,GAOxC,OACEwB,cAAA,OAAKuB,UAAU,gBAAelD,SAC5B2B,cAAA,OAAKK,MAAO,CAAEI,MAAO,MAAOe,SAAU,QAASyC,UAAU,MAAO4B,aAAa,MAAOxH,SAClF8B,eAAA,OAAKoB,UAAU,cAAalD,SAAA,CAC1B8B,eAAA,MAAIoB,UAAU,UAASlD,SAAA,CAAC,+BACtB2B,cAAA,OAAKyB,IAAK/E,kCAAgDgF,IAAI,cAAcH,UAAU,YAExFvB,cAAA,OAAKK,MAAO,CAAC4B,OAAO,QAAS6D,UAAU,OAAOC,SAAS,QAAQ1H,SAC/D2B,cAACgG,IAAW,CAACpG,IAAK2F,EAAMU,QAASR,EAAWS,UAAQ,EAACzF,MAAM,WAjE/C,CAClB,CACEd,KAAM,cAAed,MAAO,QAASsH,KAAK,EAC1CC,IAAK,CACH,CAAEzG,KAAM,yBAA0Bd,MAAO,SACzC,CAAEc,KAAM,6BAA8Bd,MAAO,SAC7C,CAAEc,KAAM,uBAAwBd,MAAO,SACvC,CAAEc,KAAM,aAAcd,MAAO,SAC7B,CAAEc,KAAM,kBAAmBd,MAAO,SAClC,CAAEc,KAAM,cAAed,MAAO,SAC9B,CAAEc,KAAM,2BAA4Bd,MAAO,WAG/C,CACEc,KAAM,YAAad,MAAO,QAASsH,KAAK,EACxCC,IAAK,CACH,CAAEzG,KAAM,iBAAkBd,MAAO,SACjC,CAAEc,KAAM,gBAAiBd,MAAO,WAGpC,CACEc,KAAM,gBAAiBd,MAAO,QAASsH,KAAK,EAC5CC,IAAK,CACH,CAAEzG,KAAM,8BAA+Bd,MAAO,SAC9C,CAAEc,KAAM,2BAA4Bd,MAAO,SAC3C,CAAEc,KAAM,0BAA2Bd,MAAO,SAC1C,CAAEc,KAAM,gCAAiCd,MAAO,SAChD,CAAEc,KAAM,qBAAsBd,MAAO,SACrC,CAAEc,KAAM,8BAA+Bd,MAAO,SAC9C,CAAEc,KAAM,uBAAwBd,MAAO,SACvC,CAAEc,KAAM,uCAAwCd,MAAO,WAG3D,CACEc,KAAM,wBAAyBd,MAAO,QAASsH,KAAK,EACpDC,IAAK,CACH,CAAEzG,KAAM,uBAAwBd,MAAO,UACvC,CAAEc,KAAM,aAAcd,MAAO,UAC7B,CAAEc,KAAM,oBAAqBd,MAAO,UACpC,CAAEc,KAAM,uBAAwBd,MAAO,UACvC,CAAEc,KAAM,gBAAiBd,MAAO,UAChC,CAAEc,KAAM,sBAAuBd,MAAO,UACtC,CAAEc,KAAM,+BAAgCd,MAAO,UAC/C,CAAEc,KAAM,+BAAgCd,MAAO,UAC/C,CAAEc,KAAM,mBAAoBd,MAAO,aAuBlB0E,KAAI,CAAC8C,EAAMC,IAEtBnG,eAAA,OAAKE,MAAO,CAAE4B,OAAQ,OAAQ5D,SAAA,CAC5B8B,eAAA,OAA6BE,MAAO,CAAEI,MAAO,OAAQ8D,OAAQ,OAAQO,aAAc,OAAQK,QAAS,OAAQN,gBAAiB,WAAYxG,SAAA,CACvI2B,cAAA,MAAIK,MAAO,CAAEkG,OAAQ,UAAWtB,MAAO,QAASP,UAAW,SAAUzC,OAAQ,QAAUkC,QAAStC,IAAO2D,EAAQ,kCAADgB,OAAmCH,EAAKxH,QAAU6G,GAAa,EAAK,EAAGrH,SAAGgI,EAAK1G,OAC7LK,cAAA,OAAKK,MAAO,CAAEoG,SAAU,kBAAmB7B,OAAQ,wBAAwB2B,OAAO,UAAWG,aAAc,cAAcvB,QAAQ,OAAOE,WAAW,SAAUsB,YAAY,OAAoCvG,GAAIkG,EAAE,SAAUnC,QAAStC,GArBtP,SAAuBA,GACrB,IAAI+E,EAAIC,SAAShF,EAAEiF,cAAc1G,IACrBwF,EAAZgB,IAAIjB,EAAmBiB,GAAe,EACxC,CAkB2PG,CAAclF,GAAGxD,SAC1P2B,cAAA,OAAKyB,IAAK/E,gBAA0B4J,IAAIX,EAAS,kBAAkB,oBAAqBjE,IAAI,OAAOrB,MAAO,CAAEI,MAAO,kBAAmB8D,OAAQ,sBADsC,kBAAoB+B,KAFlM,cAAgBA,GAMxBA,IAAIX,GAAYU,EAAKD,IAAI7C,KAAI,CAACyD,EAASpD,IAErC5D,cAAA,OAAgCK,MAAO,CAAEkG,OAAQ,WAC/CpC,QAAStC,IAAO2D,EAAQ,kCAADgB,OAAmCQ,EAAQnI,QAAU6G,GAAa,EAAK,EAAGrH,SAAG2I,EAAQrH,MADpG,iBAAmBiE,OATC,SAAW0C,WAwB7D,CCxEeW,MArBf,WAEI,MAAM,OAAE7H,GAAWnB,IAcnB,OALAU,qBAAU,MARViD,iBACI,UACUxC,GACV,CAAE,MACE5B,QAAQC,IAAI,oBAChB,CACJ,CAIIyJ,EAAc,GAEf,IAEClH,cAACsB,IAAQ,CAACT,GAAG,UAErB,ECbesG,MAPf,WAEI,OACInH,cAACsB,IAAQ,CAACT,GAAG,KAErB,ECJe,SAASuG,EAAYhJ,GAAqC,IAAlCiJ,UAAWC,KAAcC,GAAMnJ,EACpE,MAAM,YAAEE,GAAgBL,IAExB,OACE+B,cAACwH,IAAK,IACAD,EACJE,OAAQC,GACCpJ,EAAc0B,cAACsH,EAAS,IAAKI,IAAY1H,cAACsB,IAAQ,CAACT,GAAG,YAIrE,CCXe,SAAS8G,IAEtB,MAAM5G,EAAWC,oBACX,cAAE1B,GAAkBrB,KACnBL,EAAOuD,GAAY3C,mBAAS,KAC5BX,EAAS+J,GAAcpJ,mBAAS,KAChCC,EAASC,GAAcF,oBAAS,GAkBvC,OACEwB,cAAA,OAAKuB,UAAU,gBAAelD,SAC5B8B,eAAA,OAAKE,MAAO,CAAEI,MAAO,MAAOe,SAAU,SAAUnD,SAAA,CAC9C8B,eAAA,OAAKoB,UAAU,cAAalD,SAAA,CAC1B8B,eAAA,MAAIoB,UAAU,UAASlD,SAAA,CAAC,iBACtB2B,cAAA,OAAKyB,IAAK/E,kCAAgDgF,IAAI,cAAcH,UAAU,YACvF3D,GAASoC,cAAA,SAAOuB,UAAU,aAAYlD,SAAET,IACxCC,GAAUmC,cAAA,SAAOuB,UAAU,eAAclD,SAAER,IAC5CsC,eAAA,QAAMwB,SAxBdC,eAA4BC,GAC1BA,EAAEC,iBAEF,IACE8F,EAAW,IACXzG,EAAS,IACTzC,GAAW,SACLY,EAAcyB,EAASgB,QAAQlD,OACrC+I,EAAW,4CACb,CAAE,MACAzG,EAAS,2BACX,CAEAzC,GAAW,EACb,EAUqCL,SAAA,CAC3B8B,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,QACzB2B,cAAA,SAAOI,GAAG,QAAQ8B,KAAK,QAAQC,IAAKpB,EAAUqB,UAAQ,OAE9DpC,cAAA,UAAQqC,SAAU5D,EAAS8C,UAAU,SAASW,KAAK,SAAQ7D,SAAC,sBAI9D2B,cAAA,OAAKuB,UAAU,WAAUlD,SACvB2B,cAACY,IAAI,CAACC,GAAG,SAASU,UAAU,QAAOlD,SAAE,eAGzC8B,eAAA,OAAKoB,UAAU,WAAUlD,SAAA,CAAC,oBACP2B,cAACY,IAAI,CAACC,GAAG,UAASU,UAAU,QAAOlD,SAAE,mBAKhE,C,qBCpBewJ,MA7Bf,SAAoBH,GAEhB,MAAOI,EAAeC,GAAkBvJ,mBAAS,IAmBjD,OACI2B,eAAA,OAAKE,MAAO,CAAC8E,QAAQ,OAAQE,WAAW,SAAUD,eAAe,QAAS1E,WAAW,KAAMc,SAAS,SAASnD,SAAA,CACzG2B,cAAA,SAAOkC,KAAK,OAAO7B,MAAO,CAACI,MAAM,OAAQuH,SAAWC,GAAQF,EAAiBE,EAAMC,OAAOC,MAAM,MAChGnI,cAAA,OAAKuB,UAAU,4BAA4B4C,QAAUtC,IArBxCoG,KAClB,MAAMG,EAAU,IAAIC,SACpBD,EAASE,OAAO,OAAQR,GACxBM,EAASE,OAAO,gBAAgB5L,WAChC6L,IAAMC,KACF,uDACAJ,GAEH9K,MAAKmL,IACLV,EAAiB,IACjBvK,QAAQC,IAAIgL,EAAShF,KAAK7D,KAC1BpC,QAAQC,IAAIwK,EAAMC,OAAOQ,cAAcC,gBAAgB9J,OACvDoJ,EAAMC,OAAOQ,cAAcC,gBAAgB9J,MAAM,GACjD6I,EAAMkB,UAAUH,EAAShF,KAAK7D,IAAI,IAEjCjC,OAAMkE,IAAIrE,QAAQC,IAAI,uBAAuB,GAAE,EAMcoL,CAAchH,EAAE,EAAExD,SAAC,mBAGzF,EC1Be,SAASyK,IAEtB,MAAM/H,EAAWC,mBACXC,EAAcD,mBACd+H,EAAc/H,mBACdE,EAAqBF,oBACrB,YAAE1C,EAAW,eAAEmB,EAAc,YAAED,EAAW,WAAEE,GAAezB,KAC1DL,EAAOuD,GAAY3C,mBAAS,KAC5BC,EAASC,GAAcF,oBAAS,IAChC4C,EAAQC,GAAa7C,oBAAS,IAC9BwK,EAASC,GAAczK,mBAASF,EAAYyB,UAuCnD,OAAe,IAAXqB,EAA0BpB,cAACsB,IAAQ,CAACT,GAAG,eAEzCV,eAAA,OAAKoB,UAAU,gBAAelD,SAAA,CAC5B8B,eAAA,OAAKE,MAAO,CAAEI,MAAO,MAAOe,SAAU,QAASyC,UAAW,MAAO5F,SAAA,CAC/D8B,eAAA,OAAKoB,UAAU,cAAalD,SAAA,CAC1B8B,eAAA,MAAIoB,UAAU,UAASlD,SAAA,CAAC,iBACb,MAAT2K,GAAkBhJ,cAAA,OAAKyB,IAAKuH,EAAStH,IAAI,cAAcH,UAAU,YAClE3D,GAASoC,cAAA,SAAOuB,UAAU,aAAYlD,SAAET,IACzCuC,eAAA,QAAMwB,SAxCd,SAAsBE,GAGpB,GADAA,EAAEC,iBACEb,EAAYc,QAAQlD,QAAUqC,EAAmBa,QAAQlD,MAC3D,OAAOsC,EAAS,0BAGlB,MAAM+H,EAAW,GACjBxK,GAAW,GACXyC,EAAS,IAELJ,EAASgB,QAAQlD,QAAUP,EAAYS,OACzCmK,EAASC,KAAK3J,EAAYuB,EAASgB,QAAQlD,QAEzCoC,EAAYc,QAAQlD,OACtBqK,EAASC,KAAK1J,EAAewB,EAAYc,QAAQlD,QAE9CkK,EAAYhH,QAAQlD,QAAUP,EAAYwB,aAAiBkJ,IAAY1K,EAAYyB,UACtFmJ,EAASC,KAAKzJ,EAAWqJ,EAAYhH,QAAQlD,MAAOmK,IAEtDI,QAAQC,IAAIH,GACT5L,MAAK,KACJ+D,GAAU,EAAK,IAEhB1D,OAAM,KACLwD,EAAS,2BAA2B,IAErCmI,SAAQ,KACP5K,GAAW,EAAM,GAEvB,EAUqCL,SAAA,CAC3B8B,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,uDAC7B2B,cAAA,SAAOI,GAAG,WAAW8B,KAAK,OAAOC,IAAK4G,EAAaQ,aAAcjL,EAAYwB,YAAa0J,YAAY,oCAE1GrJ,eAAA,SAAOoB,UAAU,cAAcnB,GAAG,UAAS/B,SAAA,CAAE,sBACzC2B,cAAA,SAAOkC,KAAK,OAAO8F,SAAWnG,IAAKoH,EAAWpH,EAAEqG,OAAOrJ,MAAM,EAAG0K,aAAcjL,EAAYyB,WAC5FC,cAAC6H,EAAU,CAACxH,MAAO,CAAEI,MAAO,QAASgJ,UAAW,QAASxH,OAAQ,QAAU2G,UApDpEhJ,IAEjB8J,SAASC,cAAc,YAAYC,WAAW,GAAG/K,MAAQe,EACzDqJ,EAAYrJ,GACZpC,QAAQC,IAAIuL,EAAQ,OAkDZ7I,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,QAC/B2B,cAAA,SAAOI,GAAG,QAAQ8B,KAAK,QAAQC,IAAKpB,EAAUqB,UAAQ,EAACmH,aAAcjL,EAAYS,WAEnFoB,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,WAC/B2B,cAAA,SAAOI,GAAG,WAAW8B,KAAK,WAAWC,IAAKlB,EAAauI,YAAY,oCAErErJ,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAG,wBAC/B2B,cAAA,SAAOI,GAAG,mBAAmB8B,KAAK,WAAWC,IAAKjB,EAAoBsI,YAAY,oCAEpFxJ,cAAA,UAAQqC,SAAU5D,EAAS8C,UAAU,UAAUlB,MAAO,CAAEI,MAAO,OAAQwB,OAAQ,WAAaC,KAAK,SAAQ7D,SAAC,iBAK9G2B,cAAA,OAAKuB,UAAU,WAAUlD,SACvB2B,cAACY,IAAI,CAACC,GAAG,aAAaU,UAAU,QAAOlD,SAAE,gBAG7C2B,cAACE,EAAM,MAGb,CC1FA,IAAI2J,EAAU,CACZ,OAAU,CACR,MAAS,UACT,gBAAmB,UACnB,YAAe,WAGjB,QAAW,CACT,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEhB,UAAa,CACZ,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEjB,QAAW,CACT,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEjB,KAAQ,CACN,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEjB,GAAI,CAAC,GAEQ,SAASC,EAAUpC,GAEhC,MAAOqC,EAAcC,GAAiBxL,mBAAS,KACxCyL,EAAcC,GAAiB1L,mBAAS,IASjD,SAAS2L,IAEP/F,OAAOgG,SAAS,WAAW,CAC7B,CAOE,OANAzL,qBAAU,KAERqL,EAAgBK,OAAOC,OAAOT,GAASQ,OAAOE,KAAKV,GAASW,QAAQ9C,EAAM+C,QAAQC,SAASzF,OAC3FiF,EAAgBG,OAAOC,OAAOT,GAASQ,OAAOE,KAAKV,GAASW,QAAQ9C,EAAM+C,QAAQE,SAAS1F,OAf7F,WAEE,IAAI2F,EAAExG,OAAOyG,QACTC,EAAE1G,OAAO2G,QACb3G,OAAOgG,SAAS,WAAWhG,OAAO4G,SAASJ,EAAGE,EAAG,EACnDtN,QAAQC,IAAImN,EAAGE,EAEjB,CASIG,EAAY,GACb,IAGCjL,cAAA,OAAKK,MAAO,CAAEI,MAAO,QAAS8D,OAAQ,QAAQjE,SAAS,WAAW4K,IAAK9G,OAAO+G,YAAY5K,KAAK,EAAG4E,QAAQ,OAAQC,eAAe,SAAUC,WAAW,SAAS+F,OAAO,OAAQvG,gBAAgB,yBAA0BxG,SACtN8B,eAAA,OAAKoB,UAAU,iBAAgBlD,SAAA,CAC7B2B,cAAA,SAAOuB,UAAU,iBAAiBlB,MAAOgK,OAAOC,OAAOT,GAASQ,OAAOE,KAAKV,GAASW,QAAQ9C,EAAM+C,QAAQY,cAAchN,SAAEqJ,EAAM+C,QAAQa,UACzItL,cAAA,MAAIuB,UAAU,iBAAgBlD,SAAEqJ,EAAM+C,QAAQc,OAC7C7D,EAAM+C,QAAQe,YAAcxL,cAAA,SAAOI,GAAG,aAAaC,MAAO,CAAEI,MAAO,OAAQoF,aAAc,QAAU0D,aAAc7B,EAAM+D,aAC/F,KAAvB/D,EAAM+C,QAAQC,QAAgB1K,cAAA,UAAQuB,UAAU,iBAAiBlB,MAAO,CAACwE,gBAAgBkF,EAAc9E,MAAM,SAAUd,QAAStC,IAAMsI,IAAezC,EAAMgE,SAAShE,EAAM+C,QAAQkB,QAAUjE,EAAM+C,QAAQe,WAAa9B,SAASC,cAAc,eAAe9K,MAAQ,KAAM,EAAIR,SAC9QqJ,EAAM+C,QAAQkB,UAEQ,KAAvBjE,EAAM+C,QAAQE,QAAe3K,cAAA,UAAQuB,UAAU,iBAAiBlB,MAAO,CAACwE,gBAAgBoF,EAAchF,MAAM,SAAUd,QAAStC,IAAMsI,IAAezC,EAAMgE,SAAShE,EAAM+C,QAAQmB,QAAQ,EAAGvN,SAC3LqJ,EAAM+C,QAAQmB,cAQzB,CC+DeC,MArIf,SAAiBnE,GAEb,IAAIoE,EACJ,MAAOC,EAAaC,GAAkBxN,mBAASyN,EAAWvE,EAAMwE,MAAOxE,EAAMyE,QAASzE,EAAM0E,WACrFC,EAAaC,GAAkB9N,oBAAS,IACxC+N,EAAYC,GAAiBhO,mBAAS,CAAC,GAC9C,IAAIiO,EAA4B,KAAd/E,EAAMwE,MAA+B,GAAhBxE,EAAMyE,QAAezE,EAAM0E,QA+ClE,SAASH,EAAWS,EAAGC,EAAGC,GAEtB,MAAM,GAANpG,OAAUkG,EAAI,GAAK,IAAMA,EAAIA,EAAC,KAAAlG,OAAImG,EAAI,GAAK,IAAMA,EAAIA,EAAC,KAAAnG,OAAIoG,EAAI,GAAK,IAAMA,EAAIA,EACjF,CACA,SAASC,IAELC,cAAchB,GACd1H,OAAOgG,SAAS,WAAW,EAC3B5M,QAAQC,IAAI,OACZiM,SAASC,cAAc,YAAYoD,UAAUC,IAAI,aACjCtD,SAASuD,iBAAiB,YAChCC,SAAQ,SAAUC,GACxBA,EAASJ,UAAUC,IAAI,YAC3B,IACAtF,EAAM0F,OAAOrB,EACjB,CACA,SAASsB,EAAkBzG,GAEvB,IAAI0G,EAAc5D,SAASC,cAAc,iBACzC,GAAI4D,OAAOC,UAAU5G,GAEP,IAANA,IAC0B,KAAtB0G,EAAYzO,MAAgByO,EAAYzO,MAAQ,EAC3CgI,SAASyG,EAAYzO,OAAS6I,EAAM+F,QAAWH,EAAYzO,MAAQgI,SAASyG,EAAYzO,OAAS,GAEtGyO,EAAYzO,MAAQ,EAEpB2N,EAAc,CACVnB,YAAa,SACbC,QAAS,UACTC,KAAK,qCACLb,OAAQ,SACRiB,QAAS,SACThB,OAAQ,YACRiB,QAAS,WAEbU,GAAe,MAGZ,IAAP1F,IAC0B,KAAtB0G,EAAYzO,MAAgByO,EAAYzO,MAAQ6I,EAAM+F,QACjD5G,SAASyG,EAAYzO,OAAS,EAAKyO,EAAYzO,OAAS,EAC5DyO,EAAYzO,MAAQ6I,EAAM+F,cAGnC,GAAU,MAAN7G,EAAW,CACX,IAAI8G,EAAYhE,SAASuD,iBAAiB,YAC1CS,EAAUR,SAAQ,SAAUC,GACxBA,EAASJ,UAAUY,OAAO,YAC9B,IACAD,EAAYhE,SAASuD,iBAAiB,iBACtCS,EAAUR,SAAQ,SAAUC,GACxBA,EAASJ,UAAUY,OAAO,YAC9B,IACAjE,SAASC,cAAc,aAAaoD,UAAUC,IAAI,aAClDM,EAAYzO,MAAQ,CACxB,MAAOyO,EAAYzO,MAAQ+H,EAExB,MAANA,EAAac,EAAMM,SAAS,GAAKN,EAAMM,SAASnB,SAASyG,EAAYzO,OAC1E,CACA,OACIsB,eAACyN,WAAQ,CAAAvP,SAAA,CACJgO,GAAerM,cAAC8J,EAAS,CAAC4B,SA5GjBmC,IAEdvB,GAAe,GACG,WAAduB,GACDhB,GACH,EAuGmDpC,QAAS8B,IACxDvM,cAAA,UAAQuB,UAAU,UAAUnB,GAAG,WAAWC,MAAO,CAAEC,SAAU,WAAY4K,IAAK,OAAQ3K,KAAM,OAAQ6K,OAAQ,OACxGjH,QA/FZ,SAAmB8D,GAEf,IAAImE,EAAU1E,EAAM0E,QAChBD,EAAUzE,EAAMyE,QAChBD,EAAQxE,EAAMwE,OAZtB,WAEI,IAAItB,EAAExG,OAAOyG,QACTC,EAAE1G,OAAO2G,QACb3G,OAAOgG,SAAS,WAAWhG,OAAO4G,SAASJ,EAAGE,EAAG,EACnDtN,QAAQC,IAAImN,EAAGE,EAEjB,CAMIG,GACAoC,EAAkB,KAClBpF,EAAMnG,iBACW,IAAZsK,GAA+B,IAAZD,GAA6B,IAAVD,IACvCJ,EAAgBgC,aAAY,WACxBrB,IACgB,IAAZL,EACAA,EAAU,GAETA,IACW,KAAZA,IACgB,IAAZD,GACAA,EAAU,GACVD,KACGC,KAEXH,EAAeC,EAAWC,EAAOC,EAASC,IACrB,IAAhBK,IACDK,cAAchB,GACdpC,SAASC,cAAc,YAAYoD,UAAUC,IAAI,aACjDtF,EAAM0F,OAAO,YAGrB,GAAG,KAEX,EAiE+B/O,SAAC,UACxB2B,cAAA,UAAQuB,UAAU,oBAAoBlB,MAAO,CAAEC,SAAU,WAAY4K,IAAK,OAAQ3K,KAAM,EAAEwN,WAAW,gBAAiBC,WAAY,cAAe5C,OAAQ,MACrJjH,QAAStC,IAAOwL,GAAmB,EAAE,EAAGhP,SAAC,eAC7C8B,eAAA,SAAOoB,UAAU,oBAAoBlB,MAAO,CAACC,SAAU,WAAW4K,IAAI,IAAI3K,KAAK,IAAK0B,OAAO,aAAcwE,SAAU,mBAAoB2E,OAAQ,MAAO/M,SAAA,CAClJ2B,cAAA,SAAOuB,UAAU,yBAAyBlB,MAAO,CAAEI,MAAO,MAAOgG,SAAU,oBAAsBvE,KAAK,SAAS9B,GAAG,eAAe6N,IAAI,IAAIC,IAAKxG,EAAM+F,QAAQU,WAAYhK,QAAStC,GAAKwL,EAAkBxL,EAAEqG,OAAOrJ,SAAgB,MAC7N6I,EAAM+F,WACdzN,cAAA,UAAQuB,UAAU,qBAAqBlB,MAAO,CAAEC,SAAU,WAAY4K,IAAK,OAAQkD,MAAO,EAAEL,WAAW,gBAAiBC,WAAY,cAAe5C,OAAQ,MACvJjH,QAAStC,IAAOwL,EAAkB,EAAE,EAAGhP,SAAC,eAE5C2B,cAAA,SAAOuB,UAAU,oBAAoBlB,MAAO,CAAEC,SAAU,WAAY0N,WAAY,cAAe9C,IAAK,EAAG3K,KAAM,OAAQE,MAAO,MAAO2K,OAAQ,KAAM2C,WAAW,iBAAkB1P,SAAE0N,IAChL/L,cAAA,UAAQuB,UAAU,oBAAoBnB,GAAG,YAAaC,MAAO,CAAEC,SAAU,WAAY4K,IAAK,EAAGkD,MAAO,EAAEnK,UAAU,SAAUoK,gBAAgB,OAAD7H,OAAQ9J,gCAA4C,KAAI+D,MAAO,MAAO8D,OAAQ,MAAO+J,YAAa,MAAMxJ,aAAa,MAAOsG,OAAQ,MACzQjH,QAAS0I,MAIzB,E,wBClEe0B,MAjEG7G,IAGd/I,qBAAU,KAEN,IAAK,IAAIiF,EAAI,EAAGA,EAAI8D,EAAM8G,QAAQxM,OAAQ4B,IACtC8F,SAASC,cAAc,WAAa/F,GAAG6K,SAAU,EAC7C/G,EAAMgH,aAAalE,QAAQ5G,IAAM,IAAG8F,SAASC,cAAc,WAAa/F,GAAG6K,SAAU,EAC7F,GACF,CAAC/G,EAAM8G,UAoBLxO,cAAC4N,WAAQ,CAAAvP,SACL8B,eAAA,OAAKC,GAAG,uBAAuBC,MAAO,CAAEsO,QAASjH,EAAMvB,KAAK9H,SAAA,CACxD2B,cAAA,WAASuB,UAAU,kBAAiBlD,SAEhC2B,cAAC4O,IAAO,CAACV,IAAK,IAAKW,KAAK,QACpBZ,IAAK,GACL5N,MAAO,CACH4E,MAAM,QACNa,UAAW,MACXrB,UAAW,MACXqK,SAAU,MACVtN,SAAU,MACVuN,WAAY,EACZ9M,OAAO,OACPyC,UAAU,SACVqJ,WAAY,qBACd1P,SAAEqJ,EAAMsH,aAGlBhP,cAAA,WAASuB,UAAU,gBAAgBlB,MAAO,CAAE8E,QAAS,OAAQC,eAAgB,gBAAgB6J,aAAa,SAAUC,SAAU,OAAQzO,MAAO,MAAOsF,SAAS,WAAY1H,SACpKqJ,EAAM8G,QAAQjL,KAAI,CAAC4L,EAAc7I,IAE1BnG,eAAA,SAAOoB,UAAU,cAAmClB,MAAO,CAACI,MAAM,MAAMqF,UAAU,MAAOrB,UAAW,QAASjD,SAAS,SAASnD,SAAA,CAC3H2B,cAAA,SAAOkC,KAAK,WAAWX,UAAU,WAAgCnB,GAAI,UAAYkG,EAAGzH,MAAOyH,EAAG0B,SAAUnG,GA1CpI,SAAuBA,GAEnB,GAAmB,IAAf6F,EAAMxF,KAAY,CAClB,IAAK,IAAI0B,EAAI,EAAGA,EAAI8D,EAAM8G,QAAQxM,OAAQ4B,IACtC8F,SAASC,cAAc,WAAa/F,GAAG6K,SAAU,EAGrD/E,SAASC,cAAc,IAAM9H,EAAEqG,OAAO9H,IAAIqO,SAAU,CACxD,CACA,IAAIW,EAAS,GACb,IAAK,IAAIxL,EAAI,EAAGA,EAAI8D,EAAM8G,QAAQxM,OAAQ4B,KACiB,IAAnD8F,SAASC,cAAc,WAAa/F,GAAG6K,SACvCW,EAAOjG,KAAKvF,GAGpB8D,EAAMM,SAASoH,EACnB,CA0ByIC,CAAcxN,IAA1E,WAAayE,GAC9DnG,eAAA,OAAKoB,UAAU,eAAelB,MAAO,CAAEgO,gBAAgB,OAAD7H,OAAS2I,EAAaG,IAAG,KAAKC,iBAAkB,YAAaC,eAAgB,aAAcnR,SAAA,CAC7I2B,cAAA,OAAKuB,UAAU,WAAUlD,SAAoB,KAAd,SAAWiI,GAC1CtG,cAAA,OAAKuB,UAAU,OAA2BlB,MAAO,CAACI,MAAM,QAAQpC,SAAE8Q,EAAa5D,MAApD,UAAYjF,QAJX,WAAaA,aCpD9D,SAASmJ,EAAU/H,GAGhC,OAEE1H,cAAA,OAAKK,MAAO,CAAEI,MAAO,QAAS8D,OAAQ,QAASjE,SAAU,WAAY4K,IAAK9G,OAAO+G,YAAa5K,KAAM,EAAG4E,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAU+F,OAAQ,OAAQvG,gBAAiB,yBAA0BxG,SACjO8B,eAAA,OAAKE,MAAO,CAAE4B,OAAQ,OAAQT,SAAU,QAASoD,OAAQ,iBAAkBE,aAAc,SAAUZ,QAAS,MAAM7F,SAAA,CAC9G2B,cAAA,OAAKyB,IAAKiG,EAAM4H,IAAKjP,MAAO,CAAEI,MAAO,OAAQiP,WAAY,WAAahO,IAAI,eAC1E1B,cAAA,OAAKuB,UAAU,WAAY4C,QAAUtC,IAAO6F,EAAMiI,YAAW,EAAK,EAAEtR,SAAC2B,cAAA,OAAKyB,IAAK/E,+BAA6CgF,IAAI,QAAQrB,MAAO,CAAEmE,MAAM,QAAS/D,MAAO,kBAAmB8D,OAAQ,kBAAkBU,MAAM,eAMpO,C,OCoEe2K,MAhFf,SAAsBlI,GAElB,MAAOmI,EAAaC,GAAkBtR,oBAAS,GA2B/C,OA1BAG,qBAAU,KAEN,IAAK,IAAIiF,EAAI,EAAGA,EAAI8D,EAAM8G,QAAQxM,OAAQ4B,IACtC8F,SAASC,cAAc,WAAa/F,GAAG6K,SAAU,EAC7C/G,EAAMgH,aAAalE,QAAQ5G,IAAM,IAAG8F,SAASC,cAAc,WAAa/F,GAAG6K,SAAU,EAC7F,GAED,CAAC/G,EAAM8G,UAoBNrO,eAAA,OAAKC,GAAG,0BAA0BC,MAAO,CAAEsO,QAASjH,EAAMvB,KAAK9H,SAAA,CAI1DwR,GAAe7P,cAACyP,EAAS,CAACH,IAAK5H,EAAMqI,KAAKT,IAAKK,WAAa9N,IAAKiO,GAAe,EAAM,IACvF3P,eAAA,WAASoB,UAAU,kBAAkBlB,MAAO,CAAE8E,QAAS,OAAQC,eAAgB,eAAgBC,WAAY,SAAU6J,SAAU,OAAQzO,MAAO,MAAOsF,SAAU,UAAW1H,SAAA,CACtK2B,cAAA,OAAKK,MAAO,CAACI,MAAM,OAAO0E,QAAS,OAAOC,eAAe,SAAUC,WAAY,SAAUd,OAAQH,OAAO4L,WAAa,IAAM,MAAQ,OAAQ3R,SACvI2B,cAAA,OAAKyB,IAAKiG,EAAMqI,KAAKT,IAAKjP,MAAO,CAAEkE,OAAO,OAAQ0L,UAAU,UAAWvO,IAAKgG,EAAMqI,KAAKT,IAAKnL,QAAUtC,IAAKiO,GAAe,EAAK,MAEnI9P,cAAA,OAAKK,MAAO,CAACI,MAAM,OAAQ8D,OAAQH,OAAO4L,WAAa,IAAM,MAAQ,OAAQ3R,SACzE2B,cAAC4O,IAAO,CAACV,IAAK,IAAKW,KAAK,QACpBZ,IAAK,GACL5N,MAAO,CACH4E,MAAO,QACPa,UAAW,MACXrB,UAAW,MACXqK,SAAU,MACVtN,SAAU,MACVuN,WAAY,EACZ9M,OAAQ,OACRyC,UAAW,SACXqJ,WAAY,qBACd1P,SAAEqJ,EAAMsH,gBAGtBhP,cAAA,WAASuB,UAAU,gBAAgBlB,MAAO,CAAE8E,QAAS,OAAQC,eAAgB,eAAgBC,WAAY,SAAU6J,SAAU,OAAQzO,MAAO,MAAOsF,SAAU,WAAY1H,SACpKqJ,EAAM8G,QAAQjL,KAAI,CAAC4L,EAAc7I,IAE1BnG,eAAA,SAAOoB,UAAU,gBAAwClB,MAAO,CAAEkE,OAAO,GAADiC,OAAK,GAAKkB,EAAM8G,QAAQxM,OAAM,MAAM3D,SAAA,CACxG2B,cAAA,SAAOkC,KAAK,WAAWX,UAAU,WAAmCnB,GAAI,UAAYkG,EAAGzH,MAAOyH,EAAG0B,SAAUnG,GAhDnI,SAAuBA,GAEnB,GAA2B,IAAvB6F,EAAMqI,KAAKG,QAAe,CAC1B,IAAK,IAAItM,EAAI,EAAGA,EAAI8D,EAAM8G,QAAQxM,OAAQ4B,IACtC8F,SAASC,cAAc,WAAa/F,GAAG6K,SAAU,EAGrD/E,SAASC,cAAc,IAAM9H,EAAEqG,OAAO9H,IAAIqO,SAAU,CACxD,CACA,IAAIW,EAAS,GACb,IAAK,IAAIxL,EAAI,EAAGA,EAAI8D,EAAM8G,QAAQxM,OAAQ4B,KACiB,IAAnD8F,SAASC,cAAc,WAAa/F,GAAG6K,SACvCW,EAAOjG,KAAKvF,GAGpB8D,EAAMM,SAASoH,EACnB,CAgCwIC,CAAcxN,IAA7E,cAAgByE,GACjEtG,cAAA,OAAKuB,UAAU,eAAclD,SACzB2B,cAAC4O,IAAO,CAACrN,UAAU,OAA8B2M,IAAK,IAAKW,KAAK,QAC5DZ,IAAK,GACL5N,MAAO,CACHyF,UAAW,MACXrB,UAAW,MACXqK,SAAU,MACVtN,SAAU,MACVuN,WAAY,EACZrK,UAAW,SACXqJ,WAAY,qBACd1P,SAAE8Q,EAAa5D,MAVU,aAAejF,IADf,YAAcA,KAFf,cAAgBA,SAqB9E,EC7De6J,MAnBSzI,IACpB,MAAO0I,EAAcC,GAAmB7R,mBAAS,IAQjD,OAPAG,qBAAU,KAEN,IAAI2R,EAAkB5I,EAAMsG,WAAWhM,OAAO,EAAC,OAAAwE,OAAUkB,EAAMsG,WAAU,KAAI,GACzEuC,EAAgB7I,EAAM8I,SAASxO,OAAO,EAAC,IAAAwE,OAAOkB,EAAM8I,UAAW,GAC/DC,EAAS/I,EAAMsG,WAAWhM,OAAO,GAAO0F,EAAM8I,SAASxO,OAAO,EAAI,IAAI,GAC1EqO,EAAiBE,EAAcE,EAAMH,EAAgB,GACtD,IAGKnQ,cADJ,CACI,OAAKC,GAAG,2BAA2BmB,UAAS,GAAAiF,OAAqB,SAAfkB,EAAMgJ,OAAmB,WAAa,IAAMrQ,MAAO,CAACgO,gBAAgB+B,GAAe/R,SAAA,CAC1G,QAAtBqJ,EAAMqI,KAAKY,OAAmB3Q,cAACuO,EAAS,CAACrM,KAAMwF,EAAMqI,KAAKG,QAAS/J,IAAKuB,EAAMvB,IAAK6I,SAAUtH,EAAMsH,SAAUR,QAAS9G,EAAM8G,QAASE,aAAchH,EAAMgH,aAAc1G,SAAW4I,IAASlJ,EAAMM,SAAS4I,EAAG,IACxM5Q,cAAA,OAAKK,MAAO,CAAE8E,QAAS,UACN,WAAtBuC,EAAMqI,KAAKY,OAAsB3Q,cAAC4P,EAAY,CAACG,KAAMrI,EAAMqI,KAAM5J,IAAKuB,EAAMvB,IAAK6I,SAAUtH,EAAMsH,SAAUR,QAAS9G,EAAM8G,QAASE,aAAchH,EAAMgH,aAAc1G,SAAW4I,IAASlJ,EAAMM,SAAS4I,EAAG,IACtM5Q,cAAA,OAAKK,MAAO,CAAE8E,QAAS,YAC3B,ECgCH0L,MAjDf,SAAoBnJ,GAEhB,MAAM3E,EAAKxG,EAASyG,aACb8N,EAAaC,GAAmBvS,mBAAS,IAsBhD,OArBAG,qBAAU,KACN,IAAIqS,EAAc,GACApP,WAEdmB,EAAGE,WAAW,WAAWC,MAAM,SAAU,KAAMwE,EAAMuJ,QAAQ7N,MAAM9F,MAAM4T,IACrEA,EAAchE,SAAS1J,IAEnBwN,EAAY7H,KAAK3F,EAAIC,OAAO,IAEhCuN,EAAYG,MAAK,SAAUC,EAAGC,GAC1B,OAAIA,EAAEhO,SAAW+N,EAAE/N,OAAiBgO,EAAEC,KAAOF,EAAEE,KAAqBD,EAAEhO,OAAS+N,EAAE/N,MACrF,IACA0N,EAAgBC,EAAY,GAC9B,EAINO,EAAW,GAEZ,IAGCvR,cAAA,OAAKK,MAAO,CAAEI,MAAO,OAAQgE,UAAW,OAAQsB,SAAU,OAAQrB,UAAW,SAAUU,eAAgB,SAAUN,aAAc,OAAQuJ,gBAAiB,ueAAwehQ,SAC5nB8B,eAAA,SAAOE,MAAO,CAAE4B,OAAQ,QAAS5D,SAAA,CAC7B8B,eAAA,MAAA9B,SAAA,CACI2B,cAAA,MAAA3B,SAAI,SACJ2B,cAAA,MAAA3B,SAAI,WACJ2B,cAAA,MAAA3B,SAAI,iBAER2B,cAAA,SAAA3B,SACKyS,GAAeA,EAAYvN,KAAI,CAACiO,EAAMlL,IAE/BnG,eAAA,MAAA9B,SAAA,CACI2B,cAAA,MAAA3B,SAAsBmT,EAAK1R,aAAlB,OAASwG,GAClBtG,cAAA,MAAA3B,SAAwBmT,EAAKnO,QAApB,SAAWiD,GACpBtG,cAAA,MAAA3B,SAAsBmT,EAAKF,MAAlB,OAAShL,KAHbA,WAYrC,E,wECFemL,MA9Cf,SAAmB/J,GAEf,IAAIgK,EAAoB,CACpB,gBAAiB,CACbnN,OAAQ,kBACR9D,MAAO,oBAGf,OACIN,eAAA,OAAA9B,SAAA,CACI2B,cAAC2R,IAAmB,CAChB/R,IAAK8H,EAAM9H,IACXgS,MAAOlK,EAAMmK,MAAM,KAAKnK,EAAMkK,MAC9BE,QAASpK,EAAMoK,QACfvQ,UAAWmQ,EAAkBrT,SAE7B2B,cAAC+R,IAAY,CAACC,KAAM,GAAIC,OAAO,MAEnCjS,cAACkS,IAAkB,CACftS,IAAK8H,EAAM9H,IACXiS,MAAOnK,EAAMmK,MAAM,KAAKnK,EAAMkK,MAC9BE,QAASpK,EAAMoK,QACfvQ,UAAWmQ,EAAkBrT,SAE7B2B,cAACmS,IAAW,CAACH,KAAM,GAAIC,OAAO,MAElCjS,cAACoS,IAAmB,CAChBxS,IAAK8H,EAAM9H,IACXiS,MAAOnK,EAAMmK,MAAM,KAAKnK,EAAMkK,MAC9BS,UAAU,MACV9Q,UAAWmQ,EAAkBrT,SAE7B2B,cAACsS,IAAY,CAACN,KAAM,GAAIC,OAAO,MAGnCjS,cAACuS,IAAgB,CACb3S,IAAK8H,EAAM9H,IACX4S,QAAS9K,EAAMmK,MACfY,KAAM/K,EAAMkK,MAAM,KAClBc,MAAOhL,EAAMiL,MACbpR,UAAWmQ,EAAkBrT,SAC7B2B,cAAC4S,IAAS,CAACZ,KAAM,GAAIC,OAAO,QAI5C,ECmCeY,MA7EQnL,IAEnB,MAAM,YAAEpJ,GAAgBL,KACjB6U,EAAYC,GAAiBvU,mBAASF,EAAcA,EAAYwB,YAAc,IAC/EkT,EAAWhS,iBAAO1C,EAAcA,EAAY6E,IAAM,IAcxD,SAAS8P,IAEL7O,OAAOC,SAASC,OAAO5H,2BACvBc,QAAQC,IAAI,gBAChB,CACA,SAASyV,EAAcC,GAEnB,IAAI7B,EAAO6B,EAAEC,MAAM,KACnB,OAA2B,KAApBvM,SAASyK,EAAK,IAAiC,GAApBzK,SAASyK,EAAK,IAAWzK,SAASyK,EAAK,GAC7E,CACA,OAEInR,eAAA,OAAKE,MAAO,CACR8E,QAAS,OAAQ+J,SAAU,OAAQzO,MAAO,OAAOwD,UAAU,MAAOgL,aAAc,SAAU7J,eAAgB,SAAUH,MAAO,QAAS8I,WAAY,kBAChJM,gBAAiB,seAAuemB,eAAgB,aAC1gBnR,SAAA,CACGqJ,EAAMuJ,OAAOjP,OAAS,GAAKhC,cAAA,MAAIK,MAAO,CAAEI,MAAO,OAAQiE,UAAW,UAAWrG,SAAC,gBAE9EqJ,EAAMuJ,OAAOjP,OAAS,GAAKhC,cAAC6Q,EAAU,CAACI,OAAQvJ,EAAMuJ,SACtD9Q,eAAA,MAAIE,MAAO,CAAEI,MAAO,OAAQiE,UAAW,UAAWrG,SAAA,CAAC,YAAUqJ,EAAM1D,KAAK,KAAGkP,EAAcxL,EAAM4J,MAAM,cACrGtR,cAAA,OAAKK,MAAO,CAAEI,MAAO,OAAQgE,UAAW,OAAQsB,SAAU,OAAQrB,UAAW,SAAUU,eAAgB,SAAUN,aAAc,QAASzG,SACpI8B,eAAA,SAAOE,MAAO,CAAE4B,OAAQ,QAAS5D,SAAA,CAC7B8B,eAAA,MAAA9B,SAAA,CACI2B,cAAA,MAAA3B,SAAI,aACJ2B,cAAA,MAAA3B,SAAI,cAGPqJ,EAAMnK,IAAIgG,KAAI,CAAChG,EAAK+I,IAEbnG,eAAA,MAAA9B,SAAA,CACI2B,cAAA,MAAA3B,SAAsBiI,EAAI,GAAjB,MAAQA,GACjBtG,cAAA,MAAA3B,SAAyBd,EAAMyC,cAAA,QAAA3B,SAAM,WAAiB2B,cAAA,QAAA3B,SAAM,YAAnD,UAAYiI,KAFhB,IAAMA,UAS9BoB,EAAMuJ,OAAOjP,OAAS,GAAKhC,cAAA,MAAIK,MAAO,CAAEI,MAAO,OAAQiE,UAAW,UAAWrG,SAAC,oCAE9E2U,EAASjR,QAAQC,QAAU,GAAK7B,eAAA,SAAOoB,UAAU,cAAclB,MAAO,CAAEI,MAAO,OAAQiE,UAAW,UAAWrG,SAAA,CAAG,uDACzG2B,cAAA,SAAOI,GAAG,WAAWC,MAAO,CAAEK,WAAY,QAAUsH,SAAUnG,GAAKkR,EAAclR,EAAEqG,OAAOrJ,YAEjG6I,EAAMuJ,OAAOjP,OAAS,GAAKhC,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAAE4B,OAAQ,OAASkC,QAAStC,IAtDpFtF,EAASyG,YACjBC,WAAW,WAAW+J,IAAI,CACzBiE,OAAQvJ,EAAMuJ,OACdnR,YAAagT,EACbO,OAAQL,EAASjR,QACjBsB,OAAQqE,EAAM1D,KACdsN,KAAM4B,EAAcxL,EAAM4J,QAC3BhU,MAAK+F,IAAY4P,GAAY,IAC3BtV,OAAMkE,IAAOrE,QAAQC,IAAI,wBAAwB,GA8C4D,EAAAY,SAAC,oBAC9GqJ,EAAMuJ,OAAOjP,OAAS,GAAKhC,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAAE4B,OAAQ,OAASkC,QAAStC,GAAKoR,IAAc5U,SAAC,mBAC/G2B,cAAA,OAAKK,MAAO,CAAE8E,QAAS,OAAQ1E,MAAO,OAAQ2E,eAAgB,UAAW/G,SACpEqJ,EAAMuJ,OAAOjP,QAAU,GAAKhC,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAAE4B,OAAQ,OAASkC,QAAStC,GAAKoR,IAAc5U,SAAC,iBAEnHqJ,EAAMuJ,OAAOjP,OAAS,GAAK7B,eAAAmT,WAAA,CAAAjV,SAAA,CACxB2B,cAAA,MAAIK,MAAO,CAAEI,MAAO,OAAQiE,UAAW,UAAWrG,SAAC,iCACnD2B,cAACyR,EAAS,CAACI,MAAK,uBAAArL,OAAyBkB,EAAM6L,SAAQ,sBAAsB3T,IAAK,wDAA0D8H,EAAMuJ,OAAQW,MAAK,SAAApL,OAAWkB,EAAM1D,KAAI,mBAAAwC,OAAkB0M,EAAcxL,EAAM4J,MAAK,kFAC3NQ,QAAS,aAAca,MAAOjW,kCAAgD8W,YAAa,mEAKjG,E,OCqDCC,OA9Hf,SAAiB/L,GAEf,IAAIgM,EAAe,CAAC7M,SAASa,EAAM8J,KAAKmC,KAAKzH,OAAQrF,SAASa,EAAM8J,KAAKmC,KAAKxH,SAAUtF,SAASa,EAAM8J,KAAKmC,KAAKvH,UAC7GwH,EAAiBlM,EAAM8J,KAAKmC,KAAK3F,WACjC6F,EAAWnM,EAAM8J,KAAKA,KACtBA,EAAO,GACPsC,EAAY,GAChB,MAAOC,EAAUC,GAAexV,mBAAS,IAClCyV,EAAYC,GAAiB1V,mBAAS,KACtC2V,EAASC,GAAc5V,mBAAS,KAChC6V,EAASC,GAAc9V,mBAAS,KAChC+V,EAAQC,GAAahW,mBAAS,IAC9BmH,EAASC,GAAcpH,mBAAS,IAChCiW,EAAeC,GAAoBlW,mBAAS,IACnD,SAASmW,EAAWC,GAElB,IAAIC,EAAY,GACZC,EAAcF,EAAI5S,OAClB+S,EAAY,EAChB,IAAK,IAAInR,EAAI,EAAGA,EAAIkR,EAAalR,IAC/BmR,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAAI5S,QAC3C6S,EAAU1L,KAAKyL,EAAIG,IACnBH,EAAIO,OAAOJ,EAAW,GAGxB,OAAOF,CACT,CAEA,SAASO,EAAaR,EAAKhO,GAGzB,IAAIiO,EAAY,GACZE,EAAY,EAChB,IAAK,IAAInR,EAAI,EAAGA,EAAIgD,EAAGhD,IACrBmR,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAAI5S,QAC3C6S,EAAU1L,KAAKyL,EAAIG,IACnBH,EAAIO,OAAOJ,EAAW,GAExB,OAAOF,CACT,CA+BA,SAASQ,EAAclC,GAErB,IAAIyB,EAAM,GACNhO,EAAI,EACRpJ,QAAQC,IAAI0V,GACZ,IAAImC,EAlBN,WAEE,IAAIV,EAAM,GACNW,EAAW,GACf,IAAK,IAAI3R,EAAI,EAAGA,EAAI6Q,EAAczS,OAAQ4B,IAAK,CAC7C2R,EAAW,GACX,IAAK,IAAIjP,EAAI,EAAGA,EAAImO,EAAc7Q,GAAG4K,QAAQxM,OAAQsE,KACR,IAAvCmO,EAAc7Q,GAAG4K,QAAQlI,GAAG8I,QAAiBmG,EAASpM,KAAK7C,GAEjEsO,EAAIzL,KAAKoM,EACX,CACA,OAAOX,CACT,CAMmBY,GACjB5P,EAAW,GACX,IAAK,IAAIhC,EAAI,EAAGA,EAAI0R,EAAWtT,OAAQ4B,IACrC6R,KAAKC,UAAUJ,EAAW1R,MAAQ6R,KAAKC,UAAUvB,EAAQvQ,IAAMgR,EAAIzL,MAAK,GAAQyL,EAAIzL,MAAK,IAC1E,IAAXyL,EAAIhR,KAAagD,GAAK,GAE5BpJ,QAAQC,KAAMmJ,EAAI0O,EAAWtT,OAAS,KAAK+B,QAAQ,GAAIoK,YACvDqG,GAAY5N,EAAI0O,EAAWtT,OAAS,KAAK+B,QAAQ,IACjDuQ,EAAWM,GACXV,EAAcf,GACd3V,QAAQC,IAAI4W,EACd,CA2BA,OAzBA1V,qBAAU,KAERnB,QAAQC,IAAIiK,EAAM8J,KAAKpR,IACvB,IAAIuV,EAAa,GACjB,IAAK,IAAI/R,EAAI,EAAGA,EAAIiQ,EAAS7R,OAAQ4B,IACnC+R,EAAaP,EAAavB,EAASjQ,GAAGgS,OAAQ/B,EAASjQ,GAAGmM,KAAKG,SAAS1J,OAAO4O,EAAavB,EAASjQ,GAAGiS,OAAQhC,EAASjQ,GAAGmM,KAAK+F,UAAYjC,EAASjQ,GAAGmM,KAAKG,UAC9JyF,EAAahB,EAAWgB,GAExBnE,EAAKrI,KAAK,CACR,KAAQ0K,EAASjQ,GAAGmM,KACpB,SAAY8D,EAASjQ,GAAGoL,SACxB,QAAW2G,IAEb7B,EAAUqB,OAAO,EAAG,EAAG,IAGzBf,EAAWN,GACXY,EAAiBlD,EAAK,GACrB,IACJ7S,qBAAU,KAER0V,EAAQrS,OAAS,EAAK0H,SAASC,cAAc,cAActJ,MAAM8E,QAAU,OAAQuE,SAASC,cAAc,cAActJ,MAAM8E,QAAU,MAAM,GAC9I,CAACkP,IAIAlU,eAAAmT,WAAA,CAAAjV,SAAA,CACGgW,EAAQrS,OAAS,GAAKhC,cAAC6S,EAAc,CAACtV,IAAK8W,EAASrQ,KAAMuQ,EAAQjD,KAAM2C,EAAYjG,WAAY4F,EAAgBL,SAAU7L,EAAM8J,KAAKmC,KAAKhU,KAAMsR,OAAQvJ,EAAMqO,MAAM,GAAGrO,EAAM8J,KAAKpR,KAClLqU,GAAiBJ,EAAQrS,QAAU,GACpChC,cAAA,OAAMK,MAAO,CAAEC,SAAU,WAAY4K,IAAK,EAAG3K,KAAM,EAAGE,MAAO,OAAQ8D,OAAQ,OAAQlG,SACrF2B,cAAC6L,EAAO,CAAE4B,QAASgH,EAAczS,OAAQkK,MAAOwH,EAAa,GAAIvH,QAASuH,EAAa,GAAItH,QAASsH,EAAa,GAAItG,OAAS+F,IAAQkC,EAAclC,EAAE,EAAInL,SAAWgO,KAtEzK,SAA8BA,GAExBA,EAAI,EAAKhC,EAAYgC,EAAI,IAE3BhC,EAAYgC,GACZpQ,EAAW,GAGf,CA8DiLqQ,CAAqBD,EAAE,MAGnMvB,GAAiBJ,EAAQrS,QAAU,GAAKhC,cAACmQ,EAAe,CAACnC,WAAY4F,EAAgBpD,SAAU9I,EAAM8J,KAAKmC,KAAKnD,SAAUE,OAAQ,OAASX,KAAM0E,EAAcV,GAAUhE,KAAM5J,IAAKR,EAASqJ,SAAUyF,EAAcV,GAAU/E,SAAUR,QAASiG,EAAcV,GAAUvF,QAASE,aAAcyF,EAAQJ,GAAW/L,SAAW4I,KAjFnU,SAAuBA,GAErB,IAAIsF,EAAe/B,EACnB+B,EAAaf,OAAOpB,EAAU,EAAGnD,GACjCpT,QAAQC,IAAIyY,GACZ9B,EAAW8B,EAEb,CA0E4UC,CAAcvF,EAAG,MAG/V,EC9He,SAASwF,KAEtB,MAAO5E,EAAM6E,GAAW7X,mBAAS,CAAC,IAC3BC,EAASC,GAAcF,oBAAS,GACjCuE,EAAKxG,EAASyG,YACpB,IAAI,GAAE5C,GAAOkW,cAUb,OATA3X,qBAAU,KACRoE,EAAGE,WAAW,SAASO,IAAIpD,GAAIgD,MAAM9F,MAAM4T,IACzCmF,EAAQ,IAAKnF,EAAczN,OAAQrD,GAAIA,IACvC1B,GAAW,EAAK,IAEff,OAAMC,IACLJ,QAAQC,IAAIG,EAAM,GAClB,GACH,IAEDoC,cAAAsT,WAAA,CAAAjV,SACGI,GAAWuB,cAACyT,GAAO,CAACjC,KAAMA,EAAMuE,OAAO,KAG9C,C,OCmFeQ,OAvGf,SAAa7O,GAET,MAAO8O,EAAgBC,GAAqBjY,oBAAS,IAC/C,YAAEF,GAAgBL,KACjByY,EAAYC,GAAiBnY,mBAAS,IAE7C,SAASoY,IACLH,GAAmBD,EACvB,CAkCA,OAjCA7X,qBAAU,KAEN,IAAIkY,EAAWna,qCACX4B,GAAcA,EAAYyB,SAAS,GAAK4W,EAAcrY,EAAYyB,UAElE4W,EAAcE,EAClB,GAED,CAACvY,IACJK,qBAAU,KACHyF,OAAO4L,WAAW,MAEjBtG,SAASC,cAAc,cAActJ,MAAM8E,QAD3CqR,EACmD,OAGA,QAE3D,GAEE,CAACA,IACH7X,qBAAU,KACFyF,OAAO4L,YAAY,KACnBtG,SAASC,cAAc,cAActJ,MAAM8E,QAAQ,OACnDuE,SAASC,cAAc,cAActJ,MAAM+E,eAAe,SAC1DsE,SAASC,cAAc,cAActJ,MAAMI,MAAM,OAGjDiJ,SAASC,cAAc,cAActJ,MAAM8E,QAAQ,MACvD,GAGF,CAACf,OAAO4L,aAGN7P,eAAA,OAAKoB,UAAU,SAAQlD,SAAA,CAElB+F,OAAO4L,WAAW,IAAOhQ,cAACY,IAAI,CAACC,GAAG,aAAYxC,SAAC2B,cAAA,OAAKuB,UAAU,eAAeE,IAAKiV,EAAYhV,IAAI,aACjGvB,eAACS,IAAI,CAACC,GAAG,IAAIU,UAAU,YAAWlD,SAAA,CAAC,IAAC2B,cAAA,OAAMyB,IAAM/E,kCAA8C2D,MAAO,CAACI,MAAM,QAAS8D,OAAO,SAAU7C,IAAI,aACpJ0C,OAAO4L,WAAW,IAAOhQ,cAACY,IAAI,CAACC,GAAG,IAAIU,UAAU,YAAWlD,SAAC,cACjC,KAClB+F,OAAO4L,WAAW,IAAOhQ,cAAA,QAAMI,GAAG,iBAAkB+D,QAASyS,EAAkBvY,SAC5E2B,cAAA,OAAKK,MAAO,CAAEI,MAAO,MAAO8D,OAAQ,MAAMC,MAAM,UAAWnG,SACvDmY,EACCxW,cAAA,OAAKyB,IAAM/E,gCAA4CgF,IAAI,SAC5D1B,cAAA,OAAKyB,IAAM/E,+BAA2CgF,IAAI,cAEzD,KAELvB,eAAA,MAAIC,GAAG,YAAW/B,SAAA,EAGbC,GAAe0B,cAAA,MAAIuB,UAAU,WAAUlD,SACpC2B,cAACY,IAAI,CAACC,GAAG,SAASU,UAAU,WAAW4C,QAAS8D,GAAS2O,IAAoBvY,SAAC,cAKhFC,GAAe0B,cAAA,MAAIuB,UAAU,WAAUlD,SACrC2B,cAACY,IAAI,CAACC,GAAG,UAAUU,UAAU,WAAW4C,QAAS8D,GAAS2O,IAAoBvY,SAAC,cAMnF2B,cAAA,MAAIuB,UAAU,WAAUlD,SACpB2B,cAACY,IAAI,CAACC,GAAG,IAAIU,UAAU,WAAW4C,QAAS8D,GAAS2O,IAAoBvY,SAAC,iBAI3EC,GAAe0B,cAAA,MAAIuB,UAAU,WAAUlD,SACrC2B,cAACY,IAAI,CAACC,GAAG,UAAUU,UAAU,WAAW4C,QAAS8D,GAAS2O,IAAoBvY,SAAC,mBAInF2B,cAAA,MAAIuB,UAAU,WAAUlD,SACpB2B,cAACY,IAAI,CAACC,GAAG,SAASU,UAAU,WAAW4C,QAAS8D,GAAS2O,IAAoBvY,SAAC,YAI/EC,GAAe0B,cAAA,MAAIuB,UAAU,WAAUlD,SACtC2B,cAACY,IAAI,CAACC,GAAG,UAAUU,UAAU,WAAW4C,QAAS8D,GAAU2O,IAAoBvY,SAAE,gBAO5F+F,OAAO4L,WAAW,IAAO,KAAMhQ,cAACY,IAAI,CAACC,GAAG,aAAYxC,SAClD2B,cAAA,OAAKuB,UAAU,eAAgBE,IAAKiV,EAAYhV,IAAI,sBAInE,E,OCvDeoV,OAhDQpP,IAGnB/I,qBAAU,KAEN,IAAK,IAAIiF,EAAI,EAAGA,EAAG8D,EAAM8G,QAAQxM,OAAQ4B,IACrC8F,SAASC,cAAc,aAAe/F,GAAG6K,SAAU,EAC/C/G,EAAMgH,aAAalE,QAAQ5G,IAAM,IAAG8F,SAASC,cAAc,aAAe/F,GAAG6K,SAAU,GAE/FjR,QAAQC,IAAIiK,EAAM8G,QAAQ,GAC5B,IAqBExO,cAAC4N,WAAQ,CAAAvP,SACD2B,cAAA,WAASuB,UAAU,oBAAmBlD,SACjCqJ,EAAM8G,QAAQjL,KAAI,CAAC4L,EAAc7I,IAE1BnG,eAAA,SAAOoB,UAAU,cAAmClB,MAAO,CAACI,MAAM,MAAMgE,UAAU,QAASjD,SAAS,QAASS,OAAO,OAAO5D,SAAA,CACvH2B,cAAA,SAAOkC,KAAK,WAAWX,UAAU,WAAgCnB,GAAI,YAAckG,EAAGzH,MAAOyH,EAAG0B,SAAUnG,GAzBtI,SAAuBA,GAEnB,GAAmB,IAAf6F,EAAMxF,KAAY,CAClB,IAAK,IAAI0B,EAAI,EAAGA,EAAI8D,EAAM8G,QAAQxM,OAAQ4B,IACtC8F,SAASC,cAAc,aAAe/F,GAAG6K,SAAU,EAGvD/E,SAASC,cAAc,IAAM9H,EAAEqG,OAAO9H,IAAIqO,SAAU,CACxD,CACA,IAAIW,EAAS,GAEb,IAAK,IAAIxL,EAAI,EAAGA,EAAI8D,EAAM8G,QAAQxM,OAAQ4B,KACmB,IAArD8F,SAASC,cAAc,aAAe/F,GAAG6K,SACzCW,EAAOjG,KAAKvF,GAGpB8D,EAAMM,SAASoH,EACnB,CAQ2IC,CAAcxN,IAA5E,WAAayE,GAC9DnG,eAAA,OAAKoB,UAAU,eAAelB,MAAO,CAAC2N,WAAW,uHAADxH,OAAyH9J,kCAA8C,qCAAqC2B,SAAA,CACxP2B,cAAA,OAAKuB,UAAU,WAAUlD,SAAoB,KAAd,SAAWiI,GAC1CtG,cAAA,OAAKuB,UAAU,QAA4BlB,MAAO,CAACI,MAAM,QAAQpC,SAAE8Q,EAAa5D,MAApD,UAAYjF,QAJZ,WAAaA,UCpC9D,SAASyQ,GAAcrP,GAElC,OACI1H,cAAA,OAAKK,MAAO,CAAEI,MAAO,QAAS8D,OAAQ,QAASjE,SAAU,WAAY4K,IAAK9G,OAAO+G,YAAa5K,KAAM,EAAG4E,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAAWhH,SACrK8B,eAAA,OAAKoB,UAAU,iBAAgBlD,SAAA,CAC3B2B,cAAA,MAAIuB,UAAU,iBAAgBlD,SAAC2B,cAAA,UAAA3B,SAASqJ,EAAM8J,KAAK7R,SACnDQ,eAAA,KAAGoB,UAAU,iBAAgBlD,SAAA,CAAC2B,cAAA,UAAA3B,SAAQ,YAAgB,IAAEqJ,EAAM8J,KAAKwF,UACnE7W,eAAA,KAAGoB,UAAU,iBAAgBlD,SAAA,CAAC2B,cAAA,UAAA3B,SAAQ,iBAAqB,IAAEqJ,EAAM8J,KAAKgC,eACxErT,eAAA,KAAGoB,UAAU,iBAAgBlD,SAAA,CAAC2B,cAAA,UAAA3B,SAAQ,qBAAyB,IAAEqJ,EAAM8J,KAAKyF,kBAC5EjX,cAAA,UAAQuB,UAAU,iBAAiBlB,MAAO,CAAEwE,gBAAiB,UAAWI,MAAO,WAAad,QAAStC,IACjGrE,QAAQC,IAAI,SAAUiK,EAAMwP,MAAM,GAAG,EACvC7Y,SAAC,cAOnB,CCiOe8Y,OA7Of,SAAkBzP,GAEd,MAAM3E,EAAKxG,EAASyG,aACd,YAAE1E,GAAgBL,KACjB6S,EAAaC,GAAmBvS,mBAAS,KACzC4Y,EAAoBC,GAA0B7Y,mBAAS,KACvD6N,EAAaC,GAAkB9N,oBAAS,IACxC8Y,EAAYC,GAAiB/Y,oBAAS,IACtC+N,EAAYC,GAAiBhO,mBAAS,CAAC,IACvCgZ,EAAaC,GAAkBjZ,oBAAS,IACxCkZ,EAAgBC,GAAqBnZ,mBAAS,OAC9CoZ,EAAYC,GAAiBrZ,mBAAS,KACtCsZ,EAAkBC,GAAuBvZ,mBAAS,KAClDiQ,EAASuJ,GAAcxZ,mBAAS,KAChCyZ,EAAYC,GAAiB1Z,mBAAS,CAAC,IACvC2Z,EAA2BC,GAAgC5Z,oBAAS,IACpE6Z,EAAUC,GAAe9Z,mBAAS,CAAC,GA6K1C,OAzBAG,qBAAU,KA1DciD,WAGpB,IAAI2W,SADexV,EAAGE,WAAW,cAAcG,OAC5BE,KAAKC,KAAIC,IAAG,IAAUA,EAAIC,WAC7C8U,EAAQpH,MAAK,SAAUC,EAAGC,GACtB,IAAImH,EAAQpH,EAAEqH,MAAMC,cAChBC,EAAQtH,EAAEoH,MAAMC,cACpB,OAAIF,EAAQG,GACA,EAERH,EAAQG,EACD,EAIJ,CAEX,IACAd,EAAcU,GACdA,EAAUA,EAAQhV,KAAIqV,IAAoB,CAAE,KAAQA,EAAO/Z,MAAOyQ,IAAK,OACvE9R,QAAQC,IAAI8a,GACZR,EAAoBQ,EAAQ,EAuC5BM,GArFcjX,WAEd,IAAI2W,EAAU,GACd,MAAM9U,QAAaV,EAAGE,WAAW,SAASG,MAEtCmV,EADkB,WAAlB7Q,EAAMoR,QACIrV,EAAKH,KAAKC,KAAIC,IAAG,IAAUA,EAAIC,OAAQrD,GAAIoD,EAAIpD,OAAO2Y,QAAOvV,GAAQA,EAAImQ,KAAKqD,SAAWtP,EAAMhK,MAAmC,QAAzB8F,EAAImQ,KAAKqF,cAElHvV,EAAKH,KAAKC,KAAIC,IAAG,IAAUA,EAAIC,OAAQrD,GAAIoD,EAAIpD,OAAO2Y,QAAOvV,GAAQA,EAAImQ,KAAKqD,SAAWtP,EAAMhK,MAAkC,WAAxB8F,EAAImQ,KAAKjE,aAChI6I,EAAQpH,MAAK,SAAUC,EAAGC,GACtB,IAAImH,EAAQpH,EAAEuC,KAAKhU,KAAK+Y,cACpBC,EAAQtH,EAAEsC,KAAKhU,KAAK+Y,cACxB,OAAIF,EAAQG,GACA,EAERH,EAAQG,EACD,EAIJ,CAEX,IACA5H,EAAgBwH,GAChBlB,EAAuBkB,EAAQ,EA+D/BhH,EAAW,GACZ,IACH5S,qBAAU,KAEN,IAAIsa,EAAYnI,EACZoI,EAAY,GAEhB,GADA1b,QAAQC,IAAIia,GACRA,EACA,IAAK,IAAI9T,EAAI,EAAGA,EAAI8T,EAAe1V,OAAQ4B,IAAK,CAC5C,IAAIuV,EAAU,GACd,IAAK,IAAI7S,EAAI,EAAGA,EAAI2S,EAAUjX,OAAQsE,IAC9B2S,EAAU3S,GAAGqN,KAAKiE,WAAWwB,WAAU,SAAUxS,GAAK,OAAOA,EAAE/H,QAAU6Y,EAAe9T,GAAG/E,KAAO,KAAM,GAAGsa,EAAQhQ,KAAK8P,EAAU3S,IAE1I4S,EAAYA,EAAU1S,OAAO2S,EACjC,CAGJD,EAAYA,EAAUH,QAAO,CAACM,EAAGC,IACtBJ,EAAU3V,KAAIqH,GAAKA,EAAExK,KAAIoK,QAAQ6O,EAAEjZ,MAAQkZ,IAEtDjC,EAAuB6B,EAAU,GAClC,CAACxB,IAEAvX,eAAA,OAAKE,MAAO,CAAEI,MAAO,OAAQe,SAAU,QAAS+C,OAAQ,MAAOwB,SAAS,OAAQ9D,OAAQ,eAAgB5D,SAAA,CACnGiZ,GAActX,cAAC+W,GAAa,CAACvF,KAAM6G,EAAUnB,MAAOrV,IACjD0V,GAAc,GAAQ/Z,QAAQC,IAAI,QAAQ,IAG1B,SAAlBiK,EAAMoR,SAAwBxa,GAAgB0B,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAAEI,MAAO,OAAQwB,OAAO,GAAIkC,QAAStC,IAAKuC,OAAOC,SAASC,OAAO5H,wBAAqC,EAAI2B,SAAC,oBAG9L8B,eAAA,KAAGoB,UAAU,cAAalD,SAAA,CAAE,mBAAoC,SAAlBqJ,EAAMoR,QAAqB,OAAO,YAC/EhB,GACG9X,cAAC8W,GAAc,CAAC5U,KAAM4V,EAAiB9V,OAAQwM,QAASsJ,EAAkBpJ,aAAcD,EAASzG,SAAW4I,KAvExH,SAAyBA,GAErBoH,EAAWpH,GACVA,EAAG5O,OAAS,EAAK2V,EAAkBC,EAAWmB,QAAO,CAACnS,EAAGN,IAAMsK,EAAGpG,QAAQlE,IAAM,KAAMqR,EAAkBC,EAC7G,CAmEiI2B,CAAgB3I,EAAG,IAE5I5Q,cAAA,KAAGuB,UAAU,cAAalD,SAAE,mBAC3B+Y,GAAsBpX,cAAA,OAAKK,MAAO,CAAEkE,OAAQ,MAAOwB,SAAS,OAAQ9D,OAAQ,KAAM5D,SAE/E2B,cAAA,SAAOK,MAAO,CAAEI,MAAO,QAASpC,SAE5B2B,cAAA,SAAA3B,SACK+Y,EAAmB7T,KAAI,CAACiO,EAAMlL,IAEvBnG,eAAA,MAAA9B,SAAA,CAC4B,WAAlBqJ,EAAMoR,SACL9Y,cAAA,MAAA3B,SAAI8B,eAAA,UAAQoB,UAAU,UAAUlB,MAAO,CAAEoG,SAAU,kBAAmBvC,QAAS,QAASW,gBAAiB,UAAW5C,OAAQ,WAAYkD,QAAS,OAAQqU,cAAe,SAAUnU,WAAY,SAAU5E,MAAM,QAAoC5B,MAAO2S,EAAKpR,GAAI+D,QAAStC,GAjLlT,SAAsBA,GAElB,IAAI4X,EAAQ5X,EAAEqG,OAAOwR,aAAa,SAClCjC,EAAegC,GACf,IAAIE,EAAa7I,EAAYvN,KAAI,SAAUqH,GAAK,OAAOA,EAAExK,EAAI,IAAGoK,QAAQiP,GACpEG,EAAW9I,EAAY6I,GAC3BnN,EAAc,CACVnB,YAAa,SACbC,QAAS,UACTC,KAAK,mCAAD/E,OAAqCoT,EAASjG,KAAKhU,KAAI,eAAA6G,OAAcoT,EAASjG,KAAKkG,YACvFnP,OAAQ,SACRiB,QAAS,SACThB,OAAQ,YACRiB,QAAS,WAEbU,GAAe,EACnB,CAiKuTwN,CAAajY,GAAGxD,SAAA,CAAC,OAAI2B,cAAA,OAAKyB,IAAK/E,+BAA6CgF,IAAI,QAAQ7C,MAAO2S,EAAKpR,GAAIC,MAAO,CAAEI,MAAO,kBAAmB8D,OAAQ,uBAAtM,gBAAkB+B,KAEtPtG,cAAA,MAAIK,MAAO,CAAEwE,gBAAiB,QAASC,aAAc,OAAQzG,SAAC8B,eAAA,OAA2BoB,UAAU,WAAW1C,MAAO2S,EAAKpR,GAAI+D,QAAStC,GAlKvK,SAAqBsR,GAEjB,IAAI3B,EAAOV,EAAYiI,QAAO1S,GAAQA,EAAKjG,KAAO+S,EAAEjL,OAAOwR,aAAa,WAAU,GAClFpB,EAAY,CACRtB,OAAQxF,EAAKmC,KAAKkG,WAClBrG,YAAahC,EAAKmC,KAAKH,YACvB7T,KAAM6R,EAAKmC,KAAKhU,KAChBsX,eAAgBzF,EAAKA,KAAKxP,OAC1B+X,UAAW5G,EAAE6G,QAAU,IAE3BzC,GAAc,EAElB,CAsJ4K0C,CAAYpY,GAAIxB,MAAO,CAAEkG,OAAQ,UAAWxB,WAAY,OAAQL,UAAW,SAAUE,OAAQ,EAAGnE,MAAO,QAASpC,SAAA,CAAEmT,EAAKmC,KAAKhU,KAAK,IAACQ,eAAA,QAAMtB,MAAO2S,EAAKpR,GAAIC,MAAO,CAAE2E,UAAW,UAAWC,MAAO,WAAY5G,SAAA,CAAC,IAAEmT,EAAKmC,KAAKkG,gBAA3R,YAAcvT,KACtFtG,cAAA,MAAA3B,SAAI2B,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAAE6D,QAAS,SAASjC,OAAO,IAAK4C,gBAAiB,QAASI,MAAO,UAAWV,OAAO,OAAQY,QAAS,OAAQE,WAAY,UAAqCxG,MAAO2S,EAAKpR,GAAI+D,QAAStC,GAtJ7P,SAAqB2P,GAEK,WAAlB9J,EAAMoR,SACNtM,EAAc,CACVnB,YAAa,SACbC,QAAS,UACTC,KAAK,yEACLb,OAAQ,SACRiB,QAAS,UACThB,OAAQ,YACRiB,QAAS,WAEbU,GAAe,GACf4L,EAAcpH,EAAYiI,QAAO1S,GAAQA,EAAKjG,KAAOoR,EAAKtJ,OAAOwR,aAAa,WAAU,KACnFhS,EAAMM,SAAS8I,EAAYiI,QAAO1S,GAAQA,EAAKjG,KAAOoR,EAAKtJ,OAAOwR,aAAa,WAAU,GACtG,CAuIkQQ,CAAYrY,GAAGxD,SAAC2B,cAAA,OAAKyB,IAAwB,WAAlBiG,EAAMoR,QAAwBpc,kCAAiDA,8BAA4CmC,MAAO2S,EAAKpR,GAAIsB,IAAwB,WAAlBgG,EAAMoR,QAAwB,OAAS,OAAQzY,MAAO,CAAEI,MAAO,kBAAmB8D,OAAQ,sBAAxT,eAAiB+B,OAL5L,WAAaA,WActB,WAAlBoB,EAAMoR,SAAyB3Y,eAAA,SAAA9B,SAAA,CAC7B2B,cAAA,SAAOkC,KAAK,WAAW9B,GAAG,qBAAqBC,MAAO,CAAE4B,OAAQ,cAAgB+F,SAAUnG,GAAKuW,EAA6B1O,SAASC,cAAc,uBAAuB8E,WAAY,iCAGxL0J,GAA6BnY,cAAA,SAAOkC,KAAK,OAAO9B,GAAG,YAAY4H,SAAUnG,GA9FnF,SAAwBsY,GAEpB,IAAIC,EAAID,EAAIjS,OAAOC,MAAM,GACzB,GAAIiS,EAAG,CACH,IAAIC,EAAI,IAAIC,WACZD,EAAEE,OAAS,SAAU1Y,GACjBqW,EAAczC,KAAK+E,MAAM3Y,EAAEqG,OAAO7E,SACZ,WAAlBqE,EAAMoR,SACNtM,EAAc,CACVnB,YAAa,SACbC,QAAS,UACTC,KAAK,yEACLb,OAAQ,SACRiB,QAAS,UACThB,OAAQ,YACRiB,QAAS,WAEbU,GAAe,KAEf5E,EAAMM,SAASyN,KAAK+E,MAAM3Y,EAAEqG,OAAO7E,SACnCqE,EAAM+S,SAAQ,GAGtB,EACAJ,EAAEK,WAAWN,EAEjB,MACIO,MAAM,sBAEd,CAiEwFC,CAAe/Y,QAE9FwK,GAAerM,cAAC8J,EAAS,CAAC4B,SArNjBmC,IAEdvB,GAAe,GACG,WAAduB,GACA9K,EAAGE,WAAW,SAASO,IAAIgU,GAAaqD,SACnCvd,MAAKC,IACFC,QAAQC,IAAI,WACZiK,EAAMoT,cAAa,EAAK,IAE3Bnd,OAAMC,IACHJ,QAAQC,IAAI,0BAA0B,IAGhC,YAAdoQ,IACAnG,EAAMM,SAASiQ,GACfvQ,EAAM+S,SAAQ,GAClB,EAqMmDhQ,QAAS8B,IACpC,SAAlB7E,EAAMoR,SAAuB3Y,eAAA,OAAKoB,UAAU,WAAUlD,SAAA,CAAC,gBAC5C2B,cAACY,IAAI,CAACW,UAAU,QAAQV,GAAG,iCAAgCxC,SAAC,wBAIrF,E,OCrNe0c,OAtBf,WAEE,MAAOC,EAAUC,GAAezc,oBAAS,IAClC0c,EAAWC,GAAgB3c,oBAAS,IACrC,YAAEF,GAAgBL,IAOxB,OACE+B,cAAAsT,WAAA,CAAAjV,SACA8B,eAAA,OAAKoB,UAAU,gBAAelD,SAAA,EAC1B2c,GAAYhb,cAACmX,GAAQ,CAACzZ,KAAMY,EAAcA,EAAY6E,IAAM,GAAI2V,QAAS,OAAQ2B,QAASW,GAAKD,EAAaC,GAAIpT,SAAUpB,GARhI,SAAuBA,GAErBpJ,QAAQC,IAAImJ,GACZqU,EAAYrU,EACd,CAIqIyU,CAAczU,KAC9IoU,GAAYhb,cAACyT,GAAO,CAACjC,KAAMwJ,EAAUjF,MAAOmF,KAC3CF,GAAYhb,cAACE,EAAM,QAI3B,EC6Beob,OAvDf,SAAiB5T,GAEb,MAAO6T,EAAYC,GAAiBhd,mBAASkJ,EAAM+T,OAAOlQ,OACnDsL,EAAS6E,GAAcld,mBAASkJ,EAAM+T,OAAOnM,MAC7CqM,EAAUC,GAAepd,qBAgBhC,SAASqd,EAASzK,EAAGC,GAEjB,IAAIjC,EAAS,CACT7D,KAAM6F,EACN9B,IAAK+B,EACLyK,IAAKpU,EAAMoU,KAEfpU,EAAMM,SAASoH,EACnB,CAaA,OAZAzQ,qBAAU,KAEN6c,EAAc9T,EAAM+T,OAAOlQ,MACvB7D,EAAM+T,OAAOnM,IAAItN,OAAS,GAC1B4Z,GAAY,GACZlS,SAASC,cAAc,UAAUjC,EAAMoU,IAAIpU,EAAMqU,KAAKtN,SAAQ,EAC9DiN,EAAWhU,EAAM+T,OAAOnM,OAExB5F,SAASC,cAAc,UAAUjC,EAAMoU,IAAIpU,EAAMqU,KAAKtN,SAAQ,EAC9DmN,GAAY,GAChB,GACD,CAAClU,EAAM+T,SAEFtb,eAAA,OAAA9B,SAAA,CACI2B,cAAA,YAAUK,MAAO,CAAEI,MAAO,OAAQqE,aAAc,SAAUkX,YAAa,aAAend,MAAO0c,EAAYvT,SAAUnG,GAhC/H,SAAqBA,GAEjB2Z,EAAc3Z,EAAEqG,OAAOrJ,OACvBgd,EAASha,EAAEqG,OAAOrJ,MAAOgY,EAC7B,CA4BoIoF,CAAYpa,KACpI1B,eAAA,SAAOE,MAAO,CAAE4E,MAAO,QAASxE,MAAO,QAASpC,SAAA,CAC5C2B,cAAA,SAAOkC,KAAK,WAAW9B,GAAI,SAAWsH,EAAMoU,IAAIpU,EAAMqU,IAAK/T,SAAUnG,GAAK+Z,EAAYlS,SAASC,cAAc,UAAUjC,EAAMoU,IAAIpU,EAAMqU,KAAKtN,WAAY,6BAE3JkN,GAAYxb,eAAA,OAAA9B,SAAA,CACT2B,cAAA,SAAOkC,KAAK,OAAO7B,MAAO,CAAEI,MAAO,OAAQkO,QAASgN,EAAU7W,aAAc,SAAUkX,YAAa,aAAend,MAAOgY,EAAS7O,SAAUnG,GAhC5J,SAAqBA,GACjB6Z,EAAW7Z,EAAEqG,OAAOrJ,OACpBgd,EAASN,EAAY1Z,EAAEqG,OAAOrJ,MAClC,CA6BiKqd,CAAYra,KAC7J7B,cAAC6H,EAAU,CAACxH,MAAO,CAAEI,MAAO,QAASgJ,UAAW,QAASxH,OAAQ,QAAU2G,UA5CxEhJ,IAEf8J,SAASC,cAAc,YAAY9K,MAAQe,EAC3C8b,EAAW9b,GACXic,EAASN,EAAY3b,EAAI,IAyCbI,cAAA,OAAKyB,IAAKoV,EAASxW,MAAO,CAACI,MAAM,OAAQiB,IAAI,mBAIjE,ECMeya,OA3Df,SAAoBzU,GAiChB,MAAO8G,EAAS4N,GAAc5d,mBAAS,IAKvC,OAJAG,qBAAU,KAENyd,EAAW1U,EAAM8G,QAAQ,GAC1B,CAAC9G,EAAM8G,UAENxO,cAAA,OAAKK,MAAO,CAAC8E,QAAQ,OAAQE,WAAW,QAASD,eAAe,QAASS,aAAa,OAAOxH,SACzF2B,cAAA,OAAKK,MAAO,CAACI,MAAM,OAAQpC,SACvB8B,eAAA,OAAA9B,SAAA,CACKmQ,GAAWA,EAAQjL,KAAI,CAAC4L,EAAc7I,IAE/BnG,eAAA,OAA6CE,MAAO,CAAEC,SAAU,WAAY2B,OAAQ,OAAQ5D,SAAA,CACxF2B,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAACoG,SAAS,kBAAmBjC,MAAM,QAAQvC,OAAO,GAAiEpD,MAAOyH,EAAGnC,QAAStC,GApBrM,SAAsBA,GAElB6F,EAAM2U,SAASxa,EAAEqG,OAAOrJ,MAC5B,CAiB0Mib,CAAajY,GAAGxD,SAAC2B,cAAA,OAAKyB,IAAM/E,+BAA2CgF,IAAI,QAAQrB,MAAO,CAACI,MAAM,kBAAkB8D,OAAO,sBAAzMmD,EAAMwI,QAAQ,kBAAkB,kBAAoB5J,GACnJtG,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAACoG,SAAS,kBAAmBjC,MAAM,QAASvC,OAAO,GAAgEpD,MAAOyH,EAAGnC,QAAStC,GAjBrM,SAAoBA,GAEhB6F,EAAM4U,OAAOza,EAAEqG,OAAOrJ,MAC1B,CAc0M0d,CAAW1a,GAAGxD,SAAC,oBAA5FqJ,EAAMwI,QAAQ,iBAAiB,iBAAmB5J,GACnJtG,cAACsb,GAAO,CAAmDS,IAAKrU,EAAMwI,QAAQ,QAAQ,QAAS4L,IAAKxV,EAAGmV,OAAQtM,EAAckN,SAAUxa,GAAKA,EAAEqG,OAAOrJ,MAAO2d,MAAO3a,GAAKA,EAAEqG,OAAOrJ,MAAOmJ,SAAWmL,GAjC/N,SAA0BA,GAEtB,IAAIsJ,EAAW/U,EAAM8G,QACrB,GAAgB,KAAX2E,EAAE5H,MAA2B,KAAV4H,EAAE7D,IACtBmN,EAAStH,OAAOhC,EAAE2I,IAAK,OACpB,CACH,IAAIY,EAAc,CAAEnR,KAAM4H,EAAE5H,KAAM+D,IAAK6D,EAAE7D,IAAKF,OAAQ1H,EAAMwI,SAC5DuM,EAAStH,OAAOhC,EAAE2I,IAAK,EAAGY,EAC9B,CACAhV,EAAMM,SAASyU,EACnB,CAuBqOE,CAAiBxJ,IAA5MzL,EAAMwI,QAAQ,aAAa5J,EAAE,aAAaA,KAHlDoB,EAAMwI,QAAQ,QAAQ5J,EAAE,QAAQA,KAQlDtG,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAACoG,SAAS,kBAAmBxE,OAAO,GAAKkC,QAAStC,KA7CrG,WAEI,IAAI+a,EAAUnH,KAAK+E,MAAMqC,aAAaC,QAAQ,eAC9B,OAAZF,IACJA,EAAUxN,OAAO1H,EAAMwI,QACvBxI,EAAM8U,MAAMI,GAChB,CAuC4GG,EAAiB,EAAG1e,SAAC,sBACjH2B,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAACoG,SAAS,kBAAmBxE,OAAO,GAAKkC,QAAStC,KAnDrG,WAEI,IAAImb,EAAW,CAAEzR,KAAM,GAAI+D,IAAK,GAAIF,OAAQ1H,EAAMwI,SAClDxI,EAAM8U,MAAMQ,EAChB,CA+C4GC,EAAe,EAAG5e,SAAC,qBAKnI,ECmDe6e,OA7Gf,SAAqBxV,GAEjB,IAAIyV,EAAc,CAAC,EAEnB,MAAOvH,EAAQwH,GAAa5e,mBAAS,KAC9BqX,EAAQwH,GAAa7e,mBAAS,IAkBrC,SAAS8e,EAAiBnK,EAAGoK,GAErBA,EACAJ,EAAYvH,OAASzC,EAErBgK,EAAYtH,OAAS1C,EAEzBzL,EAAMM,SAASmV,EACnB,CACA,SAASK,EAAe5W,EAAG2W,GAEdJ,EAARI,EAAsB7V,EAAMsO,EAAEJ,OAAOhP,GAAmBc,EAAMsO,EAAEH,OAAOjP,GACxEiW,aAAaY,QAAQ,aAAchI,KAAKC,UAAUyH,GACtD,CACA,SAASO,EAAU7b,EAAG0b,GAEdA,GACAJ,EAAczV,EAAMsO,EAAEJ,QACVzM,KAAK,CAAEoC,KAAM1J,EAAE0J,KAAM+D,IAAKzN,EAAEyN,IAAKF,QAAQ,KAErD+N,EAAczV,EAAMsO,EAAEH,QACV1M,KAAK,CAAEoC,KAAM1J,EAAE0J,KAAM+D,IAAKzN,EAAEyN,IAAKF,QAAQ,IAEzD1H,EAAMM,SAASmV,EACnB,CAGA,SAASQ,EAAU/W,EAAG2W,GAEdA,GACAJ,EAAczV,EAAMsO,EAAEJ,QACVT,OAAOvO,EAAG,IAEtBuW,EAAczV,EAAMsO,EAAEH,QACVV,OAAOvO,EAAG,GAE1Bc,EAAMM,SAASmV,EACnB,CAEA,OAlDAxe,qBAAU,KAEN+K,SAASC,cAAc,aAAa9K,MAAQ6I,EAAMsO,EAAEhH,SACpDtF,SAASC,cAAc,YAAY9K,MAAQ6I,EAAMsO,EAAEjG,KAAKT,IACxD5F,SAASC,cAAc,mBAAmB9K,MAAQ6I,EAAMsO,EAAEjG,KAAK+F,UAC/DpM,SAASC,cAAc,iBAAiB9K,MAAQ6I,EAAMsO,EAAEjG,KAAKG,QAC7DxG,SAASC,cAAc,YAAY9K,MAAQ6I,EAAMsO,EAAEjG,KAAKY,OACxDyM,EAAU1V,EAAMsO,EAAEJ,QAClByH,EAAU3V,EAAMsO,EAAEH,OAAO,GAE1B,CAACnO,EAAMsO,IAyCN7V,eAACyN,WAAQ,CAAAvP,SAAA,CACL8B,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAC,sBAC/B2B,cAAA,YAAUI,GAAG,WAAW4H,SAAUnG,IAAO6F,EAAMM,SAAS,CAAE,SAAYnG,EAAEqG,OAAOrJ,OAAQ,OAEvFmB,cAAA,SACAG,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAC,wDAC/B2B,cAAA,SAAOI,GAAG,UAAU4H,SAAUnG,IAAO6F,EAAMM,SAAS,CAAE,QAAWnG,EAAEqG,OAAOrJ,OAAQ,OAElFmB,cAAC6H,EAAU,CAACe,UAjEDhJ,IACf8J,SAASC,cAAc,YAAY9K,MAAQe,EAC3C8H,EAAMM,SAAS,CAAE,QAAWpI,GAAM,IAgE9BO,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAC,yBAC3B2B,cAAA,UAAQI,GAAG,UAAU4H,SAAUnG,IAAO6F,EAAMM,SAAS,CAAE,QAAWnG,EAAEqG,OAAOrJ,OAAQ,EAAGR,SA9DpF,CAAC,SAAU,OA+DAkF,KAAI,CAACqV,EAAQhV,IAEd5D,cAAA,UAAQnB,MAAO+Z,EAAOva,SAA4Bua,GAAtB,gBAAkBhV,UAM9DzD,eAAA,OAAKoB,UAAU,gBAAelD,SAAA,CAC1B2B,cAAA,WAASuB,UAAU,SAAQlD,SACvB8B,eAAA,SAAA9B,SAAA,CACI2B,cAAA,SAAOI,GAAG,iBAAiB8B,KAAK,SAAS+L,IAAK,EAAGC,IAAK0H,EAAO5T,OAAS6T,EAAO7T,OAASgG,SAAUnG,IAAO6F,EAAMM,SAAS,CAAE,eAAkBnG,EAAEqG,OAAOrJ,OAAQ,IAAM,2FAIzKmB,cAAA,WAASuB,UAAU,SAAQlD,SACvB8B,eAAA,SAAA9B,SAAA,CACI2B,cAAA,SAAOI,GAAG,eAAe8B,KAAK,SAAS+L,IAAK,EAAGC,IAAK0H,EAAO5T,OAASgG,SAAUnG,IAAO6F,EAAMM,SAAS,CAAE,aAAgBnG,EAAEqG,OAAOrJ,OAAQ,IAAM,4GAKzJsB,eAAA,OAAKoB,UAAU,gBAAelD,SAAA,CAC1B8B,eAAA,WAASoB,UAAU,SAAQlD,SAAA,CACvB2B,cAAA,SAAOuB,UAAU,cAAclB,MAAO,CAAC4E,MAAM,SAAS5G,SAAE2B,cAAA,UAAA3B,SAAQ,yCAC/DuX,GAAU5V,cAACmc,GAAU,CAAC3N,QAASoH,EAAQ1F,SAAS,EAAMmM,SAAWzV,GAAM+W,EAAU/W,EAAG,GAAI4V,MAAQ3a,GAAM6b,EAAU7b,EAAG,GAAImG,SAAWmL,GAAMmK,EAAiBnK,EAAG,GAAImJ,OAASnJ,GAAMqK,EAAerK,EAAG,QAEtMhT,eAAA,WAASoB,UAAU,SAAQlD,SAAA,CACvB2B,cAAA,SAAOuB,UAAU,cAAclB,MAAO,CAAE4E,MAAM,OAAO5G,SAAE2B,cAAA,UAAA3B,SAAQ,uCAC9DwX,GAAU7V,cAACmc,GAAU,CAAC3N,QAASqH,EAAQ3F,SAAS,EAAOmM,SAAWzV,GAAM+W,EAAU/W,EAAG,GAAI4V,MAAQ3a,GAAM6b,EAAU7b,EAAG,GAAImG,SAAWmL,GAAMmK,EAAiBnK,EAAG,GAAImJ,OAASnJ,GAAMqK,EAAerK,EAAG,aAKvN,E,OCTeyK,OApGf,SAAuBlW,GAEnB,MAAOmW,EAAMC,GAAWtf,mBAAS,KAC1Buf,EAASC,GAAcxf,oBAAS,GAWvC,SAAS6O,EAAkBzG,GAEvB,IAAI0G,EAAc5D,SAASC,cAAc,iBACzC,GAAI4D,OAAOC,UAAU5G,GAEP,IAANA,IAC0B,KAAtB0G,EAAYzO,MAAgByO,EAAYzO,MAAQ,EAC3CgI,SAASyG,EAAYzO,OAAS6I,EAAM+F,QAAWH,EAAYzO,MAAQgI,SAASyG,EAAYzO,OAAS,EACrGyO,EAAYzO,MAAQ,IAElB,IAAP+H,IAC0B,KAAtB0G,EAAYzO,MAAgByO,EAAYzO,MAAQ6I,EAAM+F,QACjD5G,SAASyG,EAAYzO,OAAS,EAAKyO,EAAYzO,OAAS,EAC5DyO,EAAYzO,MAAQ6I,EAAM+F,cAGnC,GAAU,MAAN7G,EAAW,CACK8C,SAASuD,iBAAiB,YAChCC,SAAQ,SAAUC,GACxBA,EAASJ,UAAUY,OAAO,YAC9B,IACAjE,SAASC,cAAc,aAAaoD,UAAUC,IAAI,aAClDM,EAAYzO,MAAQ,CACxB,MAAOyO,EAAYzO,MAAQ+H,EAExB,MAANA,EAAac,EAAMM,SAAS,GAAKN,EAAMM,SAASnB,SAASyG,EAAYzO,OAC1E,CAkBA,OAtDAF,qBAAU,KAEN+K,SAASuU,eAAe,gBAAgBpf,MAAQ,CAAC,GAClD,IACHF,qBAAU,KAEN,IAAIiW,EAAM,GACV,IAAK,IAAIhR,EAAI,EAAGA,EAAI8D,EAAM+F,QAAS7J,IAAOgR,EAAIzL,KAAKvF,EAAI,GACvDka,EAAQlJ,EAAI,GACb,CAAClN,EAAM+F,UA+CNtN,eAAA,OAAKoB,UAAU,eAAelB,MAAO,CAAE4D,UAAW,MAAO5F,SAAA,CACrD2B,cAAA,MAAIK,MAAO,CAAEI,MAAO,OAAQiE,UAAW,SAAU+B,SAAU,MAAOxB,MAAO,WAAY5G,SAAC2B,cAAA,UAAA3B,SAAQ,6BAC9F2B,cAAA,UAAQuB,UAAU,UACd4C,QAAStC,IAAOwL,EAAkB,IAAI,EAAGhP,SAAC,WAC9C2B,cAAA,UAAQuB,UAAU,UACd4C,QAAStC,IAAOwL,GAAmB,EAAE,EAAGhP,SAAC,eAC7C2B,cAAA,SAAOuB,UAAU,2BAA2BlB,MAAO,CAACI,MAAM,OAAQyB,KAAK,SAAS9B,GAAG,eAAgB6N,IAAI,IAAIC,IAAKxG,EAAM+F,QAAQU,WAAYhK,QAAStC,GAAKwL,EAAkBxL,EAAEqG,OAAOrJ,SACnLmB,cAAA,UAAQuB,UAAU,UACd4C,QAAStC,IAAOwL,EAAkB,EAAE,EAAGhP,SAAC,eAC5C2B,cAAA,UAAQuB,UAAU,UACd4C,QAAStC,IAAOwL,EAAkB3F,EAAM+F,QAAQU,WAAW,EAAG9P,SAAC,WACnE2B,cAAA,UAAQuB,UAAU,UACd4C,QAAStC,IAAO6F,EAAM8U,MAAM,IAAK9S,SAASC,cAAc,iBAAiB9K,OAAS6I,EAAM+F,QAAU,GAAGU,UAAU,EAAG9P,SAAC,cACvH8B,eAAA,UAAQoB,UAAU,UACd4C,QAAStC,KAjCrB,WAEI6F,EAAMwW,MAAM,IACZ,IAAItX,EAAI8C,SAASC,cAAc,iBAC3BwU,EAAI,GACJtX,SAASD,EAAE/H,SAAW6I,EAAM+F,SAC5B0Q,EAAIvX,EAAE/H,MACN+H,EAAE/H,MAAQsf,IAEVA,EAAIvX,EAAE/H,MACN+H,EAAE/H,OAASgI,SAASsX,GAAK,GAAGhQ,WAEpC,CAqB4BiQ,EAAW,EAAG/f,SAAA,CAAC2B,cAAA,OAAKyB,IAAM/E,+BAA2CgF,IAAI,QAAQrB,MAAO,CAACI,MAAM,kBAAkB8D,OAAO,qBAAqB,YACjKvE,cAAA,UAAQuB,UAAU,UAEd4C,QAAStC,IAAOA,EAAEC,iBAAkB4F,EAAM4U,OAAO,GAAG,EAAGje,SAAC,qBAC5D2B,cAAA,UAAQuB,UAAU,UAEd4C,QAAStC,IAAOA,EAAEC,iBAAkB4F,EAAM2W,QAAQ,IAAK3U,SAASC,cAAc,iBAAiB9K,OAASgI,SAAS6C,SAASC,cAAc,iBAAiB9K,OAAS,GAAGsP,UAAU,EAAG9P,SAAC,sBACvL2B,cAAA,UAAQuB,UAAU,UAEd4C,QAAStC,IAAO6F,EAAM4W,OAAO,GAAG,EAAGjgB,SAAC,wBACtCqJ,EAAM+F,QAAU,GAAMzN,cAAA,UAAQuB,UAAU,UAEtC4C,QAAStC,IA/BjBkc,EAAUrU,SAASC,cAAc,eAAeoD,UAAUY,OAAO,aAAejE,SAASC,cAAc,eAAeoD,UAAUC,IAAI,aACpIgR,GAAYD,EA8B8B,EAAG1f,SAAC,wBACxCqJ,EAAM+F,QAAU,GAAMoQ,GAAQ7d,cAAA,UAAQI,GAAG,aAAamB,UAAU,qCAAqCyG,SAAUnG,IAC7G6F,EAAM6W,OAAO,CAAC1X,SAAS6C,SAASC,cAAc,iBAAiB9K,OAAS,EAAGgI,SAAShF,EAAEqG,OAAOrJ,SAC7F6K,SAASC,cAAc,iBAAiB9K,OAASgI,SAAShF,EAAEqG,OAAOrJ,OAAS,GAAGsP,UAAU,EAC3F9P,SACGwf,EAAKta,KAAI,CAACqV,EAAQhV,IACP5D,cAAA,UAAgBnB,MAAO+E,EAAEvF,SAAEwf,EAAKja,IAAnBA,SAOzC,E,OCDe4a,OAjGf,SAAqB9W,GAEjB,MAAM3E,EAAKxG,EAASyG,aACbqJ,EAAaC,GAAkB9N,oBAAS,IACxC+N,EAAYC,GAAiBhO,mBAAS,CAAC,IACvCgZ,EAAaC,GAAkBjZ,oBAAS,IACxCigB,EAAWC,GAAgBlgB,mBAAS,KACpCmgB,EAAaC,GAAkBpgB,mBAAS,KACxCqgB,EAAiBC,GAAsBtgB,mBAAS,KAChDugB,EAAuBC,GAA4BxgB,oBAAS,GA6DnE,OAJAG,qBAAU,KANaiD,WAGnB,IAAI2W,SADexV,EAAGE,WAAW,aAAaG,OAC3BE,KAAKC,KAAIC,IAAG,IAAUA,EAAIC,OAAQrD,GAAIoD,EAAIpD,OAC7Dse,EAAanG,EAAQ,EAGrB0G,EAAgB,GACjB,IAGC9e,eAAA,OAAKE,MAAO,CAAEI,MAAO,OAAQye,YAAY,QAAS7gB,SAAA,CAAC,sCAAmC2B,cAAA,KAAGuB,UAAU,MAAM4d,KAAK,iCAAiCjX,OAAO,SAASkX,IAAI,sBAAqB/gB,SAAC,mBACpLgO,GAAerM,cAAC8J,EAAS,CAAC4B,SA7DjBmC,IAEdvB,GAAe,GACG,WAAduB,GACA9K,EAAGE,WAAW,aAAaO,IAAIgU,GAAaqD,SACvCvd,MAAKC,IACFC,QAAQC,IAAI,WACZihB,EAAaD,EAAU1F,QAAO1S,GAAQA,EAAKjG,KAAOoX,IAAa,IAElE7Z,OAAMC,IACHJ,QAAQC,IAAI,0BAA0B,GAElD,EAiDmDgN,QAAS8B,IACvDkS,GAAaA,EAAUlb,KAAI,CAAC8C,EAAMC,IAE3BnG,eAAA,OAAKE,MAAO,CAAE8E,QAAS,OAAQlD,OAAQ,OAAQ5D,SAAA,CAC3C8B,eAAA,OAA8BE,MAAO,CAAEkG,OAAQ,UAAW9F,MAAO,MAAO8D,OAAQ,OAAQO,aAAa,OAAQiJ,WAAY,qBAAsBM,gBAAiBhI,EAAKxH,MAAO2Q,eAAgB,SAC3L3Q,MAAOwH,EAAKjG,GAAI+D,QAAStC,GAtB9C,SAAqBwd,GAEjB,IAAIC,EAAKb,EAAU1F,QAAO1S,GAAQA,EAAKjG,KAAOif,EAAKnX,OAAOwR,aAAa,WACvEhS,EAAMM,SAASsX,EAAG,GAAGzgB,MACzB,CAkBmDqb,CAAYrY,GAAGxD,SAAA,CAAGgI,EAAK1G,KAAK,MADjD,gBAAgB2G,GAE1BnG,eAAA,UAAQoB,UAAU,UAAUlB,MAAO,CAACoG,SAAS,kBAAmBxE,OAAO,EAAG8C,WAAY,UAA2ClG,MAAOwH,EAAKjG,GAAI+D,QAAStC,GA1C9K,SAAsBA,GAElB,IAAI4X,EAAQ5X,EAAEqG,OAAOwR,aAAa,SAClCjC,EAAegC,GACf,IAAIE,EAAa8E,EAAUlb,KAAI,SAAUqH,GAAK,OAAOA,EAAExK,EAAI,IAAGoK,QAAQiP,GACtEjN,EAAc,CACVjM,KAAM,IACN2K,IAAK,IACLG,YAAa,SACbC,QAAS,UACTC,KAAK,gCAAD/E,OAAkCiY,EAAU9E,GAAYha,KAAI,KAChE+K,OAAQ,SACRiB,QAAS,SACThB,OAAQ,YACRiB,QAAS,WAGbU,GAAe,EACnB,CAwBmLwN,CAAajY,GAAGxD,SAAA,CAAC,MAAG2B,cAAA,OAAKyB,IAAM/E,+BAA2CgF,IAAI,QAAQrB,MAAO,CAACI,MAAM,iBAAiB8D,OAAO,sBAAnL,sBAAsB+B,KAH7E,YAAYA,KAQzEnG,eAAA,SAAA9B,SAAA,CACI2B,cAAA,SAAOkC,KAAK,WAAW9B,GAAG,sBAAsB4H,SAAUnG,GAAKmd,EAAyBtV,SAASC,cAAc,wBAAwB8E,WAAY,uEAGvJtO,eAAA,OAAKE,MAAO,CAAE8E,QAAS4Z,EAAwB,QAAU,OAAQte,MAAO,QAASpC,SAAA,CAC7E2B,cAAA,SAAOuB,UAAU,cAAalD,SAAC,uBAC/B2B,cAAA,YAAUI,GAAG,wBAAwBC,MAAO,CAAEI,MAAO,QAAUuH,SAAUnG,GAAK+c,EAAe/c,EAAEqG,OAAOrJ,SACtGmB,cAAA,SAAOuB,UAAU,cAAalD,SAAC,wBAC/B2B,cAAA,SAAOI,GAAG,wBAAwBC,MAAO,CAAEI,MAAO,QAAUuH,SAAUnG,GAAKid,EAAmBjd,EAAEqG,OAAOrJ,SACvGmB,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAACoG,SAAS,kBAAmBxE,OAAO,EAAG8C,WAAY,UAAaZ,QAAStC,IAjEpHkB,EAAGE,WAAW,aAAa+J,IAAI,CAAErN,KAAMkf,EAAiBhgB,MAAO8f,IAC1DrhB,MAAKC,IACFC,QAAQC,IAAI,SACZiK,EAAMoT,cAAa,EAAK,IAE3Bnd,OAAMC,IACHJ,QAAQC,IAAI,0BAA0B,GA2DwF,EAAAY,SAAC,0BAI/I,E,SC/FA,MAAMkhB,GAAe,CAEjBC,KAAMA,CAACC,EAAUC,KAAK,IACfD,EACHhf,MAAOif,EAAMC,YAAYlf,MACzBmf,aAAc,kBACd3a,MAAOya,EAAMC,YAAYE,UACzB3b,QAAS,KAEb0U,OAAQA,CAAC6G,EAAUC,KAAK,IACjBD,EACHG,aAAc,kBACd3a,MAAOya,EAAMI,WAAa,MAAQ,OAClC5b,QAAS,KAEb6b,QAAQC,IAAM,IAAUA,EAAQnb,gBAAiB,UAEjDob,YAAaA,CAACR,EAAUC,KAIb,IAAKD,EAAU9Q,QAHN+Q,EAAMQ,WAAa,GAAM,EAGVC,WAFZ,mBAcZC,OAPf,SAAqBhiB,GAA+C,IAA9C,MAACiC,EAAK,MAACoY,EAAK,QAAC4H,EAAO,SAACrY,EAAQ,MAACnJ,EAAK,QAACyhB,GAAQliB,EAC9D,OAAO+B,eAAA,OAAKE,MAAOA,EAAMhC,SAAA,CACpBoa,EACDzY,cAACugB,KAAM,CAACP,OAAQT,GAAce,QAASA,EAASE,mBAAmB,EAAMC,cAAY,EAAEJ,QAASA,EAASrY,SAAUA,EAAUnJ,MAAOA,MAE5I,ECrBI6hB,GAAU,GACVC,GAAS,CACT3R,SAAU,GACV4G,OAAQ,CAAC,CAAErK,KAAM,GAAI+D,IAAK,GAAIF,QAAQ,IACtCyG,OAAQ,CAAC,CAAEtK,KAAM,GAAI+D,IAAK,GAAIF,QAAQ,IACtCW,KAAM,CACF+F,UAAW,EACX5F,QAAS,EACTS,OAAQ,GACRrB,IAAK,KA6dEyL,OA1df,WAEI,IAAI6F,EAAiB,GACrB,MAAM,YAAEtiB,GAAgBL,KACjBsV,EAAUsN,GAAeriB,mBAAS,KAClCsiB,EAAiBC,GAAsBviB,mBAAS,KAChDwiB,EAAYC,GAAiBziB,mBAAS,CAAE0iB,SAAU,GAAIvhB,KAAM,GAAIsR,OAAQ,MACxEvB,EAAYyR,GAAiB3iB,mBAAS,KACtCwa,EAAaoI,GAAkB5iB,mBAAS,KACxCuV,EAAUC,GAAexV,mBAAS,IAClCoV,EAAgByN,GAAqB7iB,mBAAS,KAC9C8iB,EAAcC,GAAmB/iB,mBAAS,KAC1CgjB,EAAQC,GAAajjB,mBAAS,IAC9BkjB,EAAQC,GAAanjB,mBAAS,IAC9BojB,EAAQC,GAAarjB,mBAAS,IAC9BsjB,EAAMC,GAAWvjB,oBAAS,IAC1B6N,EAAaC,GAAkB9N,oBAAS,IACxC+N,EAAYC,GAAiBhO,mBAAS,CAAC,IACvCqW,EAAWmN,GAAgBxjB,mBAAS,CAACmiB,MACrCjJ,EAAgBC,GAAqBnZ,mBAAS,KAC9CoZ,EAAYC,GAAiBrZ,mBAAS,KACtCyjB,EAAwBC,GAA6B1jB,oBAAS,IAC9D2jB,EAAsBC,GAA2B5jB,oBAAS,GAC3DuE,EAAKxG,EAASyG,YAwFd8X,EAAgB1J,IAClBhN,OAAOC,SAASge,QAAQ,EAgE5B,SAASC,KA6LT,WAEI,IAAI1X,EAAExG,OAAOyG,QACTC,EAAE1G,OAAO2G,QACb3G,OAAOgG,SAAS,WAAWhG,OAAO4G,SAASJ,EAAGE,EAAG,CACrD,CAhMIG,GACA,IAAI2J,EAAMC,EAAUd,GAAU6B,OAAO2M,MAAM,EAAG1N,EAAUd,GAAUhE,KAAKG,SACvEwQ,GAAU7L,EAAUd,GAAU8B,OAAO0M,MAAM,EAAG1N,EAAUd,GAAUhE,KAAK+F,UAAYjB,EAAUd,GAAUhE,KAAKG,SAC5G,IAAK,IAAItM,EAAI,EAAGA,EAAIgR,EAAI5S,OAAQ4B,IAC5B8c,GAAQvX,KAAKyL,EAAIhR,IAErBpG,QAAQC,IAAIijB,IACLqB,GAAPD,EACJ,CA4BA,SAASzG,EAAczU,GAEnBpJ,QAAQC,IAAImJ,GACZ,IAAI4b,EAAU5b,EACdob,EAAaQ,EAAQhR,MACrBwC,EAAY,GACZtK,SAASC,cAAc,iBAAiB9K,MAAQ,EAChDoiB,EAAc,CAAEC,SAAUsB,EAAQ7O,KAAKqD,OAAQrX,KAAM6iB,EAAQ7O,KAAKkG,WAAY5I,OAAQuR,EAAQpiB,KAC9FwgB,EAAiB4B,EAAQ7O,KAAKiE,WAC9BD,EAAkBiJ,GAClBlX,SAASC,cAAc,aAAa9K,MAAQ2jB,EAAQ7O,KAAKhU,KACzDkhB,EAAY2B,EAAQ7O,KAAKhU,MACzB+J,SAASC,cAAc,oBAAoB9K,MAAQ2jB,EAAQ7O,KAAKH,YAChEuN,EAAmByB,EAAQ7O,KAAKH,aAChC9J,SAASC,cAAc,eAAe9K,MAAQ2jB,EAAQ7O,KAAKjE,WAC3DyR,EAAcqB,EAAQ7O,KAAKjE,YAC3BhG,SAASC,cAAc,gBAAgB9K,MAAQ2jB,EAAQ7O,KAAKqF,YAC5DoI,EAAeoB,EAAQ7O,KAAKqF,aAC5BtP,SAASC,cAAc,eAAe9K,MAAQ2jB,EAAQ7O,KAAK3F,WAC3DqT,EAAkBmB,EAAQ7O,KAAK3F,YAC/BtE,SAASC,cAAc,uBAAuB9K,MAAQ2jB,EAAQ7O,KAAKnD,SACnE+Q,EAAgBiB,EAAQ7O,KAAKnD,UAC7B9G,SAASC,cAAc,OAAO9K,MAAQ2jB,EAAQ7O,KAAKzH,MACnDuV,EAAUe,EAAQ7O,KAAKzH,OACvBxC,SAASC,cAAc,OAAO9K,MAAQ2jB,EAAQ7O,KAAKxH,QACnDwV,EAAUa,EAAQ7O,KAAKxH,SACvBzC,SAASC,cAAc,OAAO9K,MAAQ2jB,EAAQ7O,KAAKvH,QACnDyV,EAAUW,EAAQ7O,KAAKvH,QAC3B,CAwIA,OAPAzN,qBAAU,KA3VciD,WAGpB,IAAI2W,SADexV,EAAGE,WAAW,cAAcG,OAC5BE,KAAKC,KAAIC,IAAG,IAAUA,EAAIC,WAC7C8U,EAAQpH,MAAK,SAAUC,EAAGC,GACtB,IAAImH,EAAQpH,EAAEqH,MAAMC,cAChBC,EAAQtH,EAAEoH,MAAMC,cACpB,OAAIF,EAAQG,GACA,EAERH,EAAQG,EACD,EAIJ,CACX,IACAd,EAAcU,EAAQ,EA4UtBM,GACA,IAAI+D,EAAYnH,KAAK+E,MAAMqC,aAAaC,QAAQ,aAC7B,OAAdF,GAAqBvB,EAAcuB,GACxCC,aAAa4F,WAAW,WAAW,GACpC,IAECtiB,eAAA,OAAKoB,UAAU,iBAAgBlD,SAAA,CAC3B2B,cAAA,OAAKK,MAAO,CAAC8E,QAAS,OAAQE,WAAW,QAASD,eAAe,UAAU/G,SAC1E2B,cAACmX,GAAQ,CAACzZ,KAAMY,EAAY6E,IAAK2V,QAAS,SAAUgC,aAAcA,EAAcL,QAAS7T,IAAOpJ,QAAQC,IAAI,cAAc,EAAIuK,SAAUpB,GAAKyU,EAAczU,OAE3JyF,GAAerM,cAAC8J,EAAS,CAAC4B,SApVlBA,CAACmC,EAAWpC,KAOzB,GALkB,YAAdoC,IAEAvB,GAAe,GACfwO,KAEc,WAAdjN,EAAwB,CAExBvB,GAAe,GACf,IAAIf,EAAO,CACPoI,KAAM,CACFqD,OAAQgK,EAAWE,SACnBrH,WAAYmH,EAAWrhB,KACvBiY,WAAYF,EACZ/X,KAAM4T,EACNC,YAAasN,EACbpR,WAAYA,EACZsJ,YAAaA,EACbhL,WAAY4F,EACZpD,SAAU8Q,EACVpV,MAAOsV,EACPrV,QAASuV,EACTtV,QAASwV,GAEbpQ,KAAMqD,GAEVgI,aAAaY,QAAQ,WAAYhI,KAAKC,UAAUnK,IAChDxI,EAAGE,WAAW,SAASO,IAAIwd,EAAW/P,QAAQyR,IAAInX,GAC7CjO,MAAK+F,IACF7F,QAAQC,IAAI,gBACZqd,GAAc,IAEjBnd,OAAMkE,IAAOrE,QAAQC,IAAI,uBAAuB,GACzD,CACA,GAAkB,QAAdoQ,EAGA,GADArQ,QAAQC,IAAIgO,IACmE,IAA1EmM,EAAWrU,KAAI,SAAUqH,GAAK,OAAOA,EAAE/L,KAAO,IAAG2L,QAAQiB,IAAwBA,EAAWzJ,OAAS,EAAI,CAC1G,IAAI2gB,EAAU,CAAElK,MAAOhN,EAAY5M,MAAO4M,GAC1C1I,EAAGE,WAAW,cAAc+J,IAAI2V,GAC3BrlB,MAAK+F,IACF7F,QAAQC,IAAI,sBACZoa,EAAc,IAAID,EAAY+K,GAAS,IAE1ChlB,OAAMkE,IAAOrE,QAAQC,IAAI,6BAA6B,IAC3D6O,GAAe,EACnB,MACIE,EAAc,CACVjM,KAAM,IACN2K,IAAK,IACLG,YAAa,SACbC,QAAUG,EAAWzJ,OAAS,EAAK,gBAAkB,qBACrDuJ,KAAK,+EACLC,WAAY,OACZC,WAAYA,EACZf,OAAQ,SACRiB,QAAS,MACThB,OAAQ,YACRiB,QAAS,WAIH,WAAdiC,GAEAvB,GAAe,EACnB,EAkRmD7B,QAAS8B,IACxDpM,eAAA,OAAKoB,UAAU,eAAclD,SAAA,CACzB2B,cAAA,MAAIK,MAAO,CAAEI,MAAO,OAAQiE,UAAW,SAAU+B,SAAU,MAAOxB,MAAO,WAAY5G,SAAC2B,cAAA,UAAA3B,SAAQ,yBAE9F2B,cAAA,UAAQuB,UAAU,UAAU4C,QAAStC,IA3DzC0R,EAAW,KACXjH,GAAe,GACfE,EAAc,CACVnB,YAAa,OACbC,QAAS,UACTC,KAAK,+DAAD/E,OAAiE+M,EAAQ,QAAA/M,OAAQwa,EAAWrhB,KAAO,GAAMqhB,EAAWrhB,KAAO,MAAK,2BACpI+K,OAAQ,SACRiB,QAAS,UACThB,OAAQ,YACRiB,QAAS,WAkDiD,EAAAvN,SAAC,eAC3D2B,cAAA,UAAQuB,UAAU,UAAU4C,QAAStC,GAvHjD,SAAkBA,GAEd,IAAI0J,EAAOkK,KAAKC,UAAU,CACtB/B,KAAM,CACFqD,OAAQ1Y,EAAY6E,IACpB0W,WAAYvb,EAAYwB,YACxB8X,WAAYF,EACZ/X,KAAM4T,EACNC,YAAasN,EACbpR,WAAYA,EACZsJ,YAAaA,EACbhL,WAAY4F,EACZpD,SAAU8Q,EACVpV,MAAOsV,EACPrV,QAASuV,EACTtV,QAASwV,GAEbpQ,KAAMqD,IAEVrX,QAAQC,IAAI8N,GAEZ,IAAIqX,EAAUlZ,SAASmZ,cAAc,KACrCD,EAAQE,aAAa,OAAQ,iCAAmCC,mBAAmBxX,IACnFqX,EAAQE,aAAa,WAHN,YAIfF,EAAQviB,MAAM8E,QAAU,OACxBuE,SAAS+I,KAAKuQ,YAAYJ,GAC1BA,EAAQK,QACRvZ,SAAS+I,KAAKyQ,YAAYN,EAC9B,CA2FsDO,GAAY9kB,SAAC,0BACvD2B,cAAA,UAAQuB,UAAU,UAAU4C,QAAStC,GAlJjD,SAAgBA,GAEZ,IAAI0J,EAAO,CACPoI,KAAM,CACFqD,OAAQ1Y,EAAY6E,IACpB0W,WAAYvb,EAAYwB,YACxB8X,WAAYF,EACZ/X,KAAM4T,EACNC,YAAasN,EACbpR,WAAYA,EACZsJ,YAAaA,EACbhL,WAAY4F,EACZpD,SAAU8Q,EACVpV,MAAOsV,EACPrV,QAASuV,EACTtV,QAASwV,GAEbpQ,KAAMqD,GAEV9R,EAAGE,WAAW,SAAS+J,IAAIzB,GACtBjO,MAAK+F,IACF7F,QAAQC,IAAI,sBACZqd,GAAc,IAEjBnd,OAAMkE,IAAOrE,QAAQC,IAAI,qBAAqB,GACvD,CAyHsD2lB,GAAU/kB,SAAC,+BACpD2iB,EAAW/P,OAAS,IAAMjR,cAAA,UAAQuB,UAAU,UAAU4C,QAAStC,IA1FxEyK,GAAe,QACfE,EAAc,CACVnB,YAAa,UACbC,QAAS,UACTC,KAAK,2CAAD/E,OAA6C+M,EAAQ,QAAA/M,OAAQwa,EAAWrhB,KAAO,GAAMqhB,EAAWrhB,KAAO,MAAK,aAChH+K,OAAQ,SACRiB,QAAS,SACThB,OAAQ,YACRiB,QAAS,YAkF0EvN,SAAC,kCAGpF8B,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAE,6CACxB2B,cAAA,SAAOI,GAAG,WAAW4H,SAAUnG,GAAKgf,EAAYhf,EAAEqG,OAAOrJ,YAEjEmB,cAAA,SACAG,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAE,yBACxB2B,cAAA,YAAUI,GAAG,kBAAkB4H,SAAUnG,GAAKkf,EAAmBlf,EAAEqG,OAAOrJ,YAElFsB,eAAA,OAAKoB,UAAU,gBAAelD,SAAA,CAC1B2B,cAAA,WAASuB,UAAU,SAAQlD,SACvB8B,eAAA,SAAA9B,SAAA,CACI8B,eAAA,UAAQC,GAAG,aAAa4H,SAAUnG,GAAKsf,EAActf,EAAEqG,OAAOrJ,OAAOR,SAAA,CACjE2B,cAAA,UAAQnB,MAAM,UAASR,SAAC,YACxB2B,cAAA,UAAQnB,MAAM,SAAQR,SAAC,cAClB,uCAIjB2B,cAAA,WAASuB,UAAU,SAAQlD,SACvB8B,eAAA,SAAA9B,SAAA,CACI8B,eAAA,UAAQC,GAAG,cAAc4H,SAAUnG,GAAKuf,EAAevf,EAAEqG,OAAOrJ,OAAOR,SAAA,CACnE2B,cAAA,UAAQnB,MAAM,MAAKR,SAAC,QACpB2B,cAAA,UAAQnB,MAAM,KAAIR,SAAC,UACd,0DAKpBqZ,GACG1X,cAACogB,GAAY,CAACE,SAAS,EAAMjgB,MAAO,CAAEI,MAAO,QAASof,UAAW,MAAOnf,WAAY,QAAU7B,MAAO6Y,EAAgB1P,SAAU2P,EAAmB0I,QAASzI,EAAYa,MAAM,6BAEjLzY,cAAA,UAAQuB,UAAU,UAAUlB,MAAO,CAAEoG,SAAU,kBAAmBxE,OAAQ,eAAiBkC,QAAStC,IA9GxGyK,GAAe,QACfE,EAAc,CACVnB,YAAa,UACbC,QAAS,QACTC,KAAK,+EACLC,WAAY,OACZC,WAAY,GACZf,OAAQ,SACRiB,QAAS,MACThB,OAAQ,YACRiB,QAAS,YAoGqHvN,SAAC,qBAC/H8B,eAAA,OAAKoB,UAAU,uBAAsBlD,SAAA,CACjC2B,cAAA,WAASuB,UAAU,cAAalD,SAAE,yDAClC8B,eAAA,WAASoB,UAAU,qBAAqBlB,MAAO,CAAEmE,MAAO,QAASnG,SAAA,CAC7D2B,cAAA,SAAOI,GAAG,KAAK8B,KAAK,SAAS+L,IAAK,EAAGC,IAAK,GAAI8D,KAAM,EAAG3R,MAAO,CAAEI,MAAO,OAASuH,SAAUnG,GAAK4f,EAAU5f,EAAEqG,OAAOrJ,SAAU,MAC5HmB,cAAA,SAAOI,GAAG,KAAK8B,KAAK,SAAS+L,IAAK,EAAGC,IAAK,GAAI8D,KAAM,EAAG3R,MAAO,CAAEI,MAAO,OAASuH,SAAUnG,GAAK8f,EAAU9f,EAAEqG,OAAOrJ,SAAU,MAC5HmB,cAAA,SAAOI,GAAG,KAAK8B,KAAK,SAAS+L,IAAK,EAAGC,IAAK,GAAI8D,KAAM,EAAG3R,MAAO,CAAEI,MAAO,OAASuH,SAAUnG,GAAKggB,EAAUhgB,EAAEqG,OAAOrJ,SAAU,YAGpIsB,eAAA,OAAKoB,UAAU,gBAAelD,SAAA,CAC1B8B,eAAA,WAASoB,UAAU,SAAQlD,SAAA,CACvB8B,eAAA,SAAA9B,SAAA,CACI2B,cAAA,SAAOkC,KAAK,WAAW9B,GAAG,yBAAyB4H,SAAUnG,GAAKugB,EAAwB1Y,SAASC,cAAc,2BAA2B8E,WAAY,wCAG5JtO,eAAA,OAAKE,MAAO,CAAE8E,QAASgd,EAAuB,QAAU,OAAQ1hB,MAAO,OAAQpC,SAAA,CAE3E8B,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAC,sEAC/B2B,cAAA,SAAOI,GAAG,aAAa4H,SAAUnG,GAAKwf,EAAkBxf,EAAEqG,OAAOrJ,YAEjEmB,cAAC6H,EAAU,CAACe,UAzUbhJ,IAEf8J,SAASC,cAAc,eAAe9K,MAAQe,EAC9CyhB,EAAkBzhB,EAAI,UAyUdO,eAAA,WAASoB,UAAU,SAAQlD,SAAA,CACvB8B,eAAA,SAAA9B,SAAA,CACI2B,cAAA,SAAOkC,KAAK,WAAW9B,GAAG,uBAAuB4H,SAAUnG,GAAKqgB,EAA0BxY,SAASC,cAAc,yBAAyB8E,WAAY,iDAG1JtO,eAAA,OAAKE,MAAO,CAAE8E,QAAS8c,EAAyB,QAAU,OAAQxhB,MAAO,OAAQpC,SAAA,CAC7E8B,eAAA,SAAOoB,UAAU,cAAalD,SAAA,CAAE,0CAChC2B,cAAA,YAAUI,GAAG,qBAAqB4H,SAAUnG,GAAK0f,EAAgB1f,EAAEqG,OAAOrJ,YAE1EmB,cAACwe,GAAW,CAAC1D,aAlHb1J,IAEhB,GAAIA,EAAG,CACH,IAAI7F,EAAO,CACPoI,KAAM,CACFqD,OAAQ1Y,EAAY6E,IACpB0W,WAAYvb,EAAYwB,YACxB8X,WAAYF,EACZ/X,KAAM4T,EACNC,YAAasN,EACbpR,WAAYA,EACZsJ,YAAaA,EACbhL,WAAY4F,EACZpD,SAAU8Q,EACVpV,MAAOsV,EACPrV,QAASuV,EACTtV,QAASwV,GAEbpQ,KAAMqD,GAEVgI,aAAaY,QAAQ,WAAYhI,KAAKC,UAAUnK,IAChDuP,GACJ,GA4FuD9S,SAAUpB,GAhV7CA,KAEpB8C,SAASC,cAAc,uBAAuB9K,MAAQ+H,EACtD2a,EAAgB3a,EAAE,EA6UoDyc,CAAezc,cAIjF5G,cAAC4d,GAAa,CAACnQ,QAASoH,EAAU7S,OAAS6S,EAAU7S,OAAS,EAAGwa,MAAQ3a,IAzS7EmgB,GAAasB,GAAY,IAAIA,EAAU,CACnCtU,SAAU,GACV4G,OAAQ,CAAC,CAAErK,KAAM,GAAI+D,IAAK,GAAIF,QAAQ,IACtCyG,OAAQ,CAAC,CAAEtK,KAAM,GAAI+D,IAAK,GAAIF,QAAQ,IACtCW,KAAM,CACF+F,UAAW,EACX5F,QAAS,EACTS,OAAQ,GACRrB,IAAK,QAGb0E,EAAYa,EAAU7S,aACtBxE,QAAQC,IAAIsW,IA6RqFmK,MAAQ/K,IA9QrGY,IAAac,EAAU7S,OAAS,GAAGgS,EAAYD,EAAW,QAC9DiO,EAAanN,EAAUkE,QAAO1S,GAAQwO,EAAUrK,QAAQnE,KAAU0N,MA6Q8DwK,OAASpL,GA3Q7I,SAAoBA,GAEhB,GAAIA,EAAE,KAAOA,EAAE,GAAI,CACf,IAAIyB,EAAM,GACN2O,EAAU1O,EAAU1B,EAAE,IAC1B,IAAK,IAAIvP,EAAI,EAAGA,EAAIiR,EAAU7S,OAAQ4B,IAC9BA,IAAMuP,EAAE,GACJA,EAAE,GAAKA,EAAE,IACTyB,EAAIzL,KAAK0L,EAAUjR,IACnBgR,EAAIzL,KAAKoa,KAET3O,EAAIzL,KAAKoa,GACT3O,EAAIzL,KAAK0L,EAAUjR,KAGlBA,IAAMuP,EAAE,IAAIyB,EAAIzL,KAAK0L,EAAUjR,IAE5Coe,EAAapN,GACbZ,EAAYb,EAAE,IACd3V,QAAQC,IAAI8lB,EAAS3O,EACzB,CACJ,CAsPmJ4O,CAAWrQ,GAClJmL,OAASzc,GAAMygB,IAAeta,SAAWgO,KAhVrD,SAA8BA,GAEbhC,EAATgC,EAAI,EAAiBA,EAAI,EAEbA,EAEpB,CA0U6DyN,CAAqBzN,EAAE,EAAIsG,OAAStG,IA3T7F6G,aAAaY,QAAQ,eAAgBhI,KAAKC,UAAUb,EAAUd,IA2T4D,EAAIsK,QAAUrI,KAzT5I,SAA8BnU,GAE1B,IAAI+S,EAAM,GACN8O,EAAYjO,KAAK+E,MAAMqC,aAAaC,QAAQ,iBAChD,GAAkB,OAAd4G,EAAJ,CACA,IAAK,IAAI9f,EAAI,EAAGA,EAAIiR,EAAU7S,OAAQ4B,IAC9BA,IAAMmQ,EAAW,GAAGa,EAAIzL,KAAKua,GACjC9O,EAAIzL,KAAK0L,EAAUjR,IAEnBmQ,IAAac,EAAU7S,OAAS,GAAG4S,EAAIzL,KAAKua,GAChD1B,EAAapN,GACbZ,EAAYD,EAAW,EAPO,CAQlC,CA6SoJ4P,EAAuB,IAClK7B,GACG3hB,eAAA,OAAKoB,UAAU,iBAAiBlB,MAAO,CAAC6K,IAAK9G,OAAO+G,aAAa9M,SAAA,CAC7D2B,cAAA,OAAKuB,UAAU,WAAWlB,MAAO,CAACC,SAAS,WAAW4K,IAAI,KAAMkD,MAAM,MAAOjK,QAAUtC,IAAOkgB,GAAQ,GAAQ3d,OAAOgG,SAAS,WAAW,CAAC,EAAG/L,SAAC2B,cAAA,OAAKyB,IAAK/E,+BAA6CgF,IAAI,QAAQrB,MAAO,CAAEI,MAAO,kBAAmB8D,OAAQ,uBAC5PvE,cAACmQ,EAAe,CAAC9P,MAAO,CAAEM,cAAe,QAAUqN,WAAY4F,EAAgBpD,SAAU8Q,EAAc5Q,OAAQ,SAAUX,KAAM,CAAE+F,UAAWjB,EAAUd,GAAUhE,KAAK+F,UAAW5F,QAAS2E,EAAUd,GAAUhE,KAAKG,QAASS,OAAQkE,EAAUd,GAAUhE,KAAKY,OAAQrB,IAAKuF,EAAUd,GAAUhE,KAAKT,KAAOnJ,IAAK,EAAG6I,SAAU6F,EAAUd,GAAU/E,SAAUR,QAASkS,GAAShS,aAAc,GAAI1G,SAAW4I,WAG/YiE,EAAUd,IACP/T,cAACkd,GAAW,CAAClH,EAAGnB,EAAUd,GAAW/L,SAAWmL,GAjV5D,SAA8BA,GAE1B,IAAIyB,EAAM,IAAIC,GAC2B,aAArCxK,OAAOuZ,oBAAoBzQ,GAAG,KAAmByB,EAAIb,GAAU/E,SAAWmE,EAAEnE,UACvC,YAArC3E,OAAOuZ,oBAAoBzQ,GAAG,KAAkByB,EAAIb,GAAUhE,KAAKT,IAAM6D,EAAE0Q,SACtC,YAArCxZ,OAAOuZ,oBAAoBzQ,GAAG,KAAkByB,EAAIb,GAAUhE,KAAKY,OAASwC,EAAE2Q,SACzC,mBAArCzZ,OAAOuZ,oBAAoBzQ,GAAG,KAAyByB,EAAIb,GAAUhE,KAAK+F,UAAY3C,EAAE4Q,gBACnD,iBAArC1Z,OAAOuZ,oBAAoBzQ,GAAG,KAAuByB,EAAIb,GAAUhE,KAAKG,QAAUiD,EAAE6Q,cAC/C,WAArC3Z,OAAOuZ,oBAAoBzQ,GAAG,KAAiByB,EAAIb,GAAU6B,OAASzC,EAAEyC,QACnC,WAArCvL,OAAOuZ,oBAAoBzQ,GAAG,KAAiByB,EAAIb,GAAU8B,OAAS1C,EAAE0C,QAC5EmM,EAAapN,EACjB,CAsUkEqP,CAAqB9Q,KAEjFhT,eAAA,OAAKE,MAAO,CAACI,MAAM,OAAQC,WAAW,OAAQC,cAAc,UAAUtC,SAAA,CAAC,aAAY2B,cAACY,IAAI,CAACC,GAAG,SAAQxC,SAAC,sBAAwB,SAGvI,ECvce6lB,OAxBf,WAEE,OACElkB,cAACmkB,IAAM,CAAA9lB,SACL8B,eAAChC,EAAY,CAAAE,SAAA,CACT2B,cAACuW,GAAG,IACJpW,eAACikB,IAAM,CAAA/lB,SAAA,CACL2B,cAACwH,IAAK,CAAC6c,OAAK,EAACC,KAAK,IAAIjd,UAAWkd,KACjCvkB,cAACwH,IAAK,CAAC6c,OAAK,EAACC,KAAK,YAAYjd,UAAWF,IACzCnH,cAACoH,EAAY,CAACkd,KAAK,kBAAkBjd,UAAWyB,IAChD9I,cAACwH,IAAK,CAAC8c,KAAK,UAAUjd,UAAWvG,IACjCd,cAACwH,IAAK,CAAC8c,KAAK,SAASjd,UAAWnC,IAChClF,cAACwH,IAAK,CAAC8c,KAAK,SAASjd,UAAW/B,IAChCtF,cAACwH,IAAK,CAAC8c,KAAK,UAAUjd,UAAWJ,IACjCjH,cAACwH,IAAK,CAAC8c,KAAK,mBAAmBjd,UAAWM,IAC1C3H,cAACoH,EAAY,CAACid,OAAK,EAACC,KAAK,UAAUjd,UAAWmd,KAC9CxkB,cAACoH,EAAY,CAACid,OAAK,EAACC,KAAK,aAAajd,UAAW/E,IACjDtC,cAACwH,IAAK,CAAC8c,KAAK,gBAAejmB,SAAC2B,cAACoW,GAAc,aAKvD,EC9BeqO,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,+BAAqBrnB,MAAKc,IAAkD,IAAjD,OAAEwmB,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS5mB,EACpEwmB,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,ECHFO,IAASxd,OACPzH,cAACjC,IAAMmnB,WAAU,CAAA7mB,SACf2B,cAACkkB,GAAG,MAEPxa,SAASuU,eAAe,SAMzBwG,GAAgBjnB,QAAQC,I","file":"static/js/main.3c16665b.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(googleProvider).then((res) => {\r\n    console.log(res.user)\r\n  }).catch((error) => {\r\n    console.log(error.message)\r\n  })\r\n}\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  // setting up context to deal with firebase user collection database\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Footer() {\r\n    return (\r\n        <div id=\"footer\" style={{ position: 'absolute', left: 0, bottom: 0, width: '100%', marginLeft: \"10px\", pointerEvents: \"cursor\" }}\r\n        >\r\n            &copy; 2021 <Link to=\"/about\">Sergey Bolotnikov</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function Signup() {\r\n\r\n  // component to create new user using AuthContext\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const {currentUser, signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  if (currentUser) { return <Redirect to=\"/redirect\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    if (passwordRef.current.value.length < 6) {\r\n      return setError(\"Passwords should be at least 6 symbols long\")\r\n    }\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n      setToRoot(true);\r\n\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n\r\n          <h2 className=\"header1\">Sign Up\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n                    <input id=\"password-confirm\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordConfirmRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Already have an account? <Link className=\"links\" to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport firebase from \"../firebase\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nfunction Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser } = useAuth();\r\n  const [testsCreated, setTestsCreated] = useState(0);\r\n  const [testsResultsOnRec, setTestsResultsOnRec] = useState(0);\r\n  const [testsAverageScore, setTestsAverageScore] = useState(0);\r\n  const [userRating, setUserRating] = useState('BeginnerQuizer');\r\n  const db = firebase.firestore();\r\n\r\n\r\n  async function handleUpdate() {\r\n    setError(\"\")\r\n    window.location.assign(process.env.PUBLIC_URL + '/#/update-profile')\r\n  }\r\n  function fetchTestsCreatedData() {\r\n    // getting amount of tests created by user\r\n    db.collection(\"tests\").where(\"main.author\", \"==\", currentUser.uid).get()\r\n      .then(result => { setTestsCreated(result.docs.map(doc => ({ ...doc.data() })).length) })\r\n      .catch(e => { console.log('fail to get tests for user') })\r\n\r\n  }\r\n  function fetchTestsResultsData() {\r\n    // getting results of the user tests taken and calculating amount of tests and Average and based on score it gives status to user\r\n    db.collection(\"results\").where(\"userId\", \"==\", currentUser.uid).get()\r\n      .then(result => {\r\n        let resArray = result.docs.map(doc => ({ ...doc.data() }));\r\n        let averageRes = 0;\r\n        console.log(resArray)\r\n        for (let i = 0; i < resArray.length; i++) {\r\n          averageRes += parseFloat(resArray[i].result)\r\n        }\r\n        let score = 0;\r\n        if (resArray.length > 0) score = (averageRes / resArray.length).toFixed(3)\r\n        setTestsAverageScore(score);\r\n        setTestsResultsOnRec(resArray.length)\r\n        let rate = '';\r\n        if (score <= 100) rate = 'DiamondQuizer';\r\n        if (score <= 90) rate = 'GoldQuizer';\r\n        if (score <= 80) rate = 'SilverQuizer';\r\n        if (score <= 70) rate = 'BronzeQuizer';\r\n        if (score <= 60) rate = 'BeginnerQuizer';\r\n        setUserRating(rate)\r\n      }).catch(e => { console.log('fail to get user results') })\r\n\r\n  }\r\n  useEffect(() => {\r\n    fetchTestsCreatedData();\r\n    fetchTestsResultsData();\r\n  }, []);\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '6%' }}>\r\n        <div className='registeCard' style={{ padding: '.75em' }}>\r\n          <div className=\"closeTag\" onClick={(e) => { window.location.assign(process.env.PUBLIC_URL + '/#/') }}> <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" style={{ height: '1%' }} />\r\n            <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(2vw,20px)', height: 'max(2vw,20px)', float: 'right' }} />\r\n          </div>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <img style={{ maxWidth: '60%', maxHeight: '35vh', margin: '3% 15%' }} src={currentUser.photoURL > \"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"} alt=\"profile pic\" />\r\n          <h2 className=\"divStyle\" style={{ textAlign: 'center', width: '100%', maxWidth: '23ch', margin: 'auto' }}> <strong>@</strong>{currentUser.displayName}</h2>\r\n          <h6 className=\"divStyle\" style={{ textAlign: 'center', textDecoration: 'underline' }} >   {currentUser.email} </h6>\r\n        </div>\r\n        <table style={{ width: '97%', border: \"1px solid white\", backgroundColor: 'white', borderRadius: '10px', margin: \"3% auto\" }} >\r\n          <tbody >\r\n            <tr style={{ backgroundColor: 'white' }}>\r\n              <td ><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz created:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsCreated}</span></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'white' }}>\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz results on file:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsResultsOnRec}</span></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'white' }}>\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Average Quiz rated:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsAverageScore}%</span></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'transparent' }}>\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\", color: 'transparent' }}> quiz</div></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'lightgrey' }} >\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Your rate:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{userRating}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} onClick={handleUpdate}>\r\n          Update Profile\r\n            </button>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\nexport default Dashboard","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { signInWithGoogle } from \"../firebase\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function Login() {\r\n  // login page using the AuthContext trying to login and then redirect to root\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { currentUser, login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  // if (currentUser) { return <Redirect to=\"/redirect\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Log In\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /> </h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n              Log In\r\n            </button>\r\n          </form>\r\n          <button className=\"testNav\" onClick={signInWithGoogle} style={{ display: 'flex', justifyContent: 'space-evenly', width: '100%', margin: '4% auto', alignItems: 'center', padding: '.25em' }}>\r\n            <img src={process.env.PUBLIC_URL + \"/icons/G_Logo.svg\"} style={{ width: '15%' }} alt=\"google icon\" />\r\n            <span> Continue with Google</span>\r\n          </button>\r\n          <div className=\"divStyle\">\r\n            <Link className=\"links\" to=\"/forgot-password\">Forgot Password?</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link className=\"links\" to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport ReactPlayer from 'react-player/lazy'\r\nimport \"./Login.scss\";\r\nexport default function About() {\r\n  var selectOptions = [\r\n    {\r\n      name: \"Test Taking\", value: \"0m13s\", vis: false,\r\n      sub: [\r\n        { name: \"Selecting Quiz to Take\", value: \"0m15s\" },\r\n        { name: \"Log In, Sign Up, Demo Test\", value: \"0m39s\" },\r\n        { name: \"Get Test Information\", value: \"0m59s\" },\r\n        { name: \"Start Test\", value: \"1m19s\" },\r\n        { name: \"Test Navigation\", value: \"1m33s\" },\r\n        { name: \"Ending Test\", value: \"2m14s\" },\r\n        { name: \"Saving & Sharing results\", value: \"2m35s\" }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Dashboard\", value: \"4m11s\", vis: false,\r\n      sub: [\r\n        { name: \"Update Profile\", value: \"4m34s\" },\r\n        { name: \"Update Avatar\", value: \"4m50s\" }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Managing Test\", value: \"5m48s\", vis: false,\r\n      sub: [\r\n        { name: \"Part 1: Choose Test to Edit\", value: \"6m07s\" },\r\n        { name: \"Load Test from HardDrive\", value: \"6m29s\" },\r\n        { name: \"Part 2: Test properties\", value: \"7m00s\" },\r\n        { name: \"Create category for your test\", value: \"7m37s\" },\r\n        { name: \"Setting Background\", value: \"8m05s\" },\r\n        { name: \"Setting background Gradient\", value: \"8m26s\" },\r\n        { name: \"Upload to Web button\", value: \"8m56s\" },\r\n        { name: \"Update on Web, Download, New buttons\", value: \"9m24s\" },\r\n      ]\r\n    },\r\n    {\r\n      name: \"Question Editing Tool\", value: \"9m58s\", vis: false,\r\n      sub: [\r\n        { name: \"Question design Form\", value: \"10m11s\" },\r\n        { name: \"Navigation\", value: \"10m53s\" },\r\n        { name: \"Different Layouts\", value: \"11m05s\" },\r\n        { name: \"Add, Delete Question\", value: \"11m42s\" },\r\n        { name: \"Move Question\", value: \"11m56s\" },\r\n        { name: \"Copy/Paste question\", value: \"12m14s\" },\r\n        { name: \"Copy/Paste answering options\", value: \"13m01s\" },\r\n        { name: \"Add, Erase answering options\", value: \"13m24s\" },\r\n        { name: \"Preview Question\", value: \"13m30s\" },\r\n      ]\r\n    },\r\n  ]\r\n  const [link, setLink] = useState('');\r\n  const [playState, setPlayState] = useState(false);\r\n  const [visible, setVisible] = useState(-1);\r\n  function handleVisible(e) {\r\n    let n = parseInt(e.currentTarget.id)\r\n    n!==visible?setVisible(n):setVisible(-1)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"800px\", marginTop:'4em', marginBottom:'2%' }}>\r\n        <div className='registeCard'>\r\n          <h4 className=\"header1\">Click on text to start video\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' />\r\n            </h4>\r\n          <div style={{margin:'3vh 0', minHeight:'50vh',overflow:'auto'}}>\r\n          <ReactPlayer url={link} playing={playState} controls width=\"100%\" />\r\n          </div>\r\n          {selectOptions.map((item, j) => {\r\n            return (\r\n              <div style={{ margin: '5px' }} key={\"option\" + j} >\r\n                <div key={\"option_name\" + j} style={{ width: '100%', height: '50px', borderRadius: '10px', display: 'flex', backgroundColor: '#554FA7' }}>\r\n                  <h5 style={{ cursor: \"pointer\", color: 'white', textAlign: \"center\", margin: 'auto' }} onClick={e => { setLink(`https://youtu.be/x116B9S0tX4#t=${item.value}`); setPlayState(true) }} >{item.name}</h5>\r\n                  <div style={{ fontSize: 'max(1.2vw,12px)', border: '1px solid transparent',cursor:'pointer', outlineColor: 'transparent',display:\"flex\",alignItems:\"center\", marginRight:'5px'}} key={\"right_eraseBtn_\" + j} id={j+'.links'} onClick={e => handleVisible(e)}>\r\n                    <img src={process.env.PUBLIC_URL +((j!==visible)?\"/icons/plus.svg\":\"/icons/close.svg\")} alt=\"open\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} />\r\n                  </div>\r\n                </div>\r\n                {(j===visible) && item.sub.map((subItem, i) => {\r\n                  return (\r\n                    <div key={\"subOption_name\" + i} style={{ cursor: \"pointer\" }}\r\n                      onClick={e => { setLink(`https://youtu.be/x116B9S0tX4#t=${subItem.value}`); setPlayState(true) }} >{subItem.name}\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n                }\r\n              </div>\r\n            )\r\n          }\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n//  Logout component\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction RedirectMain() {\r\n// redirect to root\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    );\r\n}\r\n\r\nexport default RedirectMain;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n// if no user then it redirect to log in component\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function ForgotPassword() {\r\n  // page handles forgot password case\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Password Reset\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          {message &&<label className='successStyle'>{message}</label> }\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Reset Password\r\n            </button>\r\n          </form>\r\n          <div className=\"divStyle\">\r\n            <Link to=\"/login\" className=\"links\" >Login</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link to=\"/signup\"className=\"links\" >Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    // handles cloudinary upload and providing the link for a parent component\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div style={{display:'flex', alignItems:'center', justifyContent:'start', marginLeft:'2%', maxWidth:'600px'}}>\r\n            <input type='file' style={{width:'48%'}} onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button testNav\" onClick={(e)=>{pictureUpload(e)}}>Upload Image</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function UpdateProfile() {\r\n  // updating component\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const [userURL, setUserURL] = useState(currentUser.photoURL);\r\n  const getImgUrl = (url) => {\r\n    // update URL of the profile picture\r\n    document.querySelector(\"#userURL\").childNodes[1].value = url;\r\n    setUserURL (url)\r\n    console.log(userURL)\r\n  }\r\n  function handleSubmit(e) {\r\n    // submitting profile updated information\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value !== currentUser.displayName) || (userURL !== currentUser.photoURL)) {\r\n      promises.push(updateUser(userNameRef.current.value, userURL))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  if (toRoot === true) { return <Redirect to=\"/dashboard\" /> }\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '5%' }}>\r\n        <div className='registeCard' >\r\n          <h2 className=\"header1\">Update Profile\r\n          {(userURL!=null) && <img src={userURL} alt=\"logo simple\" className='logo' />}</h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >User's Name (keep it shorter then 20 symbols please)\r\n                <input id=\"userName\" type=\"text\" ref={userNameRef} defaultValue={currentUser.displayName} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle' id=\"userURL\" >User's picture link\r\n                <input type=\"text\" onChange={(e)=>{setUserURL(e.target.value)}} defaultValue={currentUser.photoURL} />\r\n              <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\r\n            </label>\r\n            <label className='headerStyle'  >Email\r\n              <input id=\"email\" type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n              <input id=\"password\" type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n              <input id=\"password-confirm\" type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '2% auto' }} type=\"submit\">\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          <Link to=\"/dashboard\" className=\"links\" >Cancel</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React,{ useEffect, useState } from \"react\"\r\n// color schemas for different occasions \r\nvar variant = {\r\n  'danger': {\r\n    'color': '#721c24',\r\n    'backgroundColor': '#f8d7da',\r\n    'borderColor': '#f5c6cb'\r\n    \r\n  },\r\n  'success': {\r\n    'color': '#155724',\r\n    'backgroundColor': '#d4edda',\r\n    'borderColor': '#c3e6cb'\r\n   },\r\n   'secondary': {\r\n    'color': '#383d41',\r\n    'backgroundColor': '#e2e3e5',\r\n    'borderColor': '#d6d8db'\r\n  },\r\n  'warning': {\r\n    'color': '#856404',\r\n    'backgroundColor': '#fff3cd',\r\n    'borderColor': '#ffeeba'\r\n  },\r\n  'info': {\r\n    'color': '#0c5460',\r\n    'backgroundColor': '#d1ecf1',\r\n    'borderColor': '#bee5eb',\r\n  },\r\n  '': {},\r\n}\r\nexport default function AlertMenu(props) {\r\n  // main popup alert component\r\n  const [button1Color, setbutton1Color]=useState('');\r\n  const [button2Color, setbutton2Color]=useState('');\r\n  function StopScroll(){\r\n    // prevent scrolling\r\n    var x=window.scrollX;\r\n    var y=window.scrollY;\r\n    window.onscroll=function(){window.scrollTo(x, y);};\r\n  console.log(x, y)\r\n       \r\n}\r\nfunction AllowScroll(){\r\n  // when done release scroll\r\n  window.onscroll=function(){};\r\n}\r\n  useEffect(() => {\r\n    // setup buttons style on load \r\n    setbutton1Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color1)].color);\r\n    setbutton2Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color2)].color);\r\n    StopScroll();\r\n}, []);\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh',position:'absolute',top: window.pageYOffset,left:0, display:'flex', justifyContent:'center', alignItems:'center',zIndex:'1700', backgroundColor:'rgba(105,105,105, .7)' }} >\r\n      <div className='alertContainer'>\r\n        <label className='alertItemStyle' style={Object.values(variant)[Object.keys(variant).indexOf(props.styling.variantHead)]}>{props.styling.heading}</label>\r\n        <h5 className=\"alertItemStyle\">{props.styling.text}</h5>\r\n        {props.styling.inputField && <input id=\"inputField\" style={{ width: \"100%\", marginBottom: \"10px\" }} defaultValue={props.inputValue} />}\r\n        {(props.styling.color1!==\"\") && <button className='alertItemStyle' style={{backgroundColor:button1Color, color:'white'}} onClick={e => {AllowScroll(); props.onReturn(props.styling.button1, (props.styling.inputField ? document.querySelector(\"#inputField\").value : null)); }}>\r\n          {props.styling.button1}\r\n        </button>}\r\n        {(props.styling.color2!==\"\") &&<button className=\"alertItemStyle\" style={{backgroundColor:button2Color, color:'white'}} onClick={e => {AllowScroll(); props.onReturn(props.styling.button2) }}>\r\n          {props.styling.button2}\r\n        </button>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { Fragment, useState } from 'react';\r\nimport AlertMenu from '../alertMenu';\r\nfunction TestNav(props) {\r\n    // navigational component for running through questions of the specific test \r\n    var timerInterval\r\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\r\n    const [revealAlert, setRevealAlert] = useState(false);\r\n    const [alertStyle, setAlertStyle] = useState({});\r\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\r\n    const onReturn = (decision1) => {\r\n        // if Finish test button clicked in Alert window it proceeds to end of the test function\r\n        setRevealAlert(false);\r\n        if (decision1 === \"Finish\") { \r\n           stopTest();\r\n        }\r\n    }\r\n    function StopScroll(){\r\n        // prevent scrolling on page\r\n        var x=window.scrollX;\r\n        var y=window.scrollY;\r\n        window.onscroll=function(){window.scrollTo(x, y);};\r\n      console.log(x, y)\r\n           \r\n    }\r\n    function timerDraw(event) {\r\n        // starting the , counting down seconds, and handling run-out-of-time exit  \r\n        let seconds = props.seconds;\r\n        let minutes = props.minutes;\r\n        let hours = props.hours;\r\n        StopScroll();\r\n        questionNumberSet('0');\r\n        event.preventDefault();\r\n        if ((seconds !== 0) || (minutes !== 0) || (hours !== 0)) {\r\n            timerInterval = setInterval(function () {\r\n                secondsLeft--;\r\n                if (seconds === 0) {\r\n                    seconds = 59;\r\n                }\r\n                else seconds--;\r\n                if (seconds === 59) {\r\n                    if (minutes === 0) {\r\n                        minutes = 59;\r\n                        hours--;\r\n                    } else minutes--;\r\n                }\r\n                setDisplayTime(stringTime(hours, minutes, seconds));\r\n                if ((secondsLeft === 0)) {\r\n                    clearInterval(timerInterval);\r\n                    document.querySelector(\".testNav\").classList.add('invisible');\r\n                    props.onExit(\"00:00:00\");\r\n                }\r\n\r\n            }, 1000);\r\n        }\r\n    };\r\n    function stringTime(h, m, s) {\r\n        // turning time to string to display\r\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\r\n    }\r\n    function stopTest() {\r\n// handles test finish: timer finish, hiding buttons of the navigation sending time left to the parent component(props.onExit)\r\n        clearInterval(timerInterval);\r\n        window.onscroll=function(){};\r\n        console.log('end')\r\n        document.querySelector(\".testNav\").classList.add('invisible');\r\n        let navButton = document.querySelectorAll(\".testNav\");\r\n        navButton.forEach(function (userItem) {\r\n            userItem.classList.add('invisible');\r\n        });\r\n        props.onExit(displayTime);\r\n    }\r\n    function questionNumberSet(n) {\r\n        // handles navigation through test next, previous shows specific question\r\n        let questionNow = document.querySelector(\"#questionPage\");\r\n        if (Number.isInteger(n)) {\r\n\r\n            if (n === 1) {\r\n                if (questionNow.value === \"\") { questionNow.value = 1; }\r\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\r\n                else {\r\n                    questionNow.value = 1;\r\n                    // if last question is reached it asked if you want to finish the test through the displaying specific alertMenu component \r\n                    setAlertStyle({\r\n                        variantHead: \"danger\",\r\n                        heading: \"Warning\",\r\n                        text: `Would you like to finish the test?`,\r\n                        color1: \"danger\",\r\n                        button1: \"Finish\",\r\n                        color2: \"secondary\",\r\n                        button2: \"Cancel\"\r\n                    });\r\n                    setRevealAlert(true);\r\n                }\r\n            }\r\n            if (n === -1) {\r\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\r\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\r\n                else questionNow.value = props.qNumber;\r\n            }\r\n        } else {\r\n            if (n === \"0\") {\r\n                let navButton = document.querySelectorAll(\".testNav\");\r\n                navButton.forEach(function (userItem) {\r\n                    userItem.classList.remove('invisible');\r\n                });\r\n                navButton = document.querySelectorAll(\".testNavLight\");\r\n                navButton.forEach(function (userItem) {\r\n                    userItem.classList.remove('invisible');\r\n                });\r\n                document.querySelector(\"#startNav\").classList.add('invisible');\r\n                questionNow.value = 1;\r\n            } else questionNow.value = n;\r\n        }\r\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\r\n            <button className=\"testNav\" id=\"startNav\" style={{ position: 'absolute', top: '44vh', left: \"43vw\", zIndex: '200' }}\r\n                onClick={timerDraw}>Start</button>\r\n            <button className=\"testNav invisible\" style={{ position: \"absolute\", top: '10vh', left: 0,textShadow:\"1px 1px black\", background: \"transparent\", zIndex: 1500 }}\r\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\r\n            <label className=\"testNav invisible\" style={{position: \"absolute\",top:'0',left:'0', margin:'1.25vh 1vw', fontSize: 'calc(10px + 1vw)', zIndex: 1500 }} >\r\n                <input className=\"testNavLight invisible\" style={{ width: '3ch', fontSize: 'calc(10px + 1vw)' }} type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\r\n                of {props.qNumber}</label>\r\n            <button className=\"testNav invisible \" style={{ position: \"absolute\", top: '10vh', right: 0,textShadow:\"1px 1px black\", background: \"transparent\", zIndex: 1500 }}\r\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\r\n\r\n            <label className=\"testNav invisible\" style={{ position: \"absolute\", background: \"transparent\", top: 0, left: '38vw', width: '8ch', zIndex: 1500, textShadow:\"1px 1px black\" }}>{displayTime}</label> \r\n            <button className=\"testNav invisible\" id=\"finishBtn\"  style={{ position: \"absolute\", top: 0, right: 0,marginTop:'1.25vh', backgroundImage:`url(${process.env.PUBLIC_URL + \"/icons/finish.svg\"})`,width: \"9vh\", height: \"3vh\", borderWidth: '0px',borderRadius:'5px', zIndex: 1500 }}\r\n                onClick={stopTest}></button>\r\n\r\n        </Fragment>\r\n    );\r\n}\r\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\r\nimport Textfit from 'react-textfit';\r\nimport \"./style.css\";\r\nconst LayoutBox = props => {\r\n// component creates layout called Box and display current question in style of this layout\r\n\r\n    useEffect(() => {\r\n        // drawing the selected options of anwers inputed by user\r\n        for (let i = 0; i < props.answers.length; i++) {\r\n            document.querySelector(\"#answer_\" + i).checked = false;\r\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\r\n        }\r\n    },[props.answers]);\r\n    function checkingMulti(e) {\r\n        // on Change sending the new result back to parent\r\n        if (props.type === 1) {\r\n            for (let i = 0; i < props.answers.length; i++) {\r\n                document.querySelector(\"#answer_\" + i).checked = false;\r\n\r\n            }\r\n            document.querySelector(\"#\" + e.target.id).checked = true;\r\n        }\r\n        let choice = [];\r\n        for (let i = 0; i < props.answers.length; i++) {\r\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\r\n                choice.push(i);\r\n            }\r\n        }\r\n        props.onChange(choice);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div id='questionContainerBox' style={{ opacity: props.vis}}>\r\n                <section className=\"questionSection\">\r\n                    {/* using the Textfit to make entered text fit into the provided space */}\r\n                    <Textfit max={256} mode='multi'\r\n                        min={12}\r\n                        style={{\r\n                            color:'white',\r\n                            minHeight: \"90%\",\r\n                            maxHeight: \"90%\",\r\n                            minWidth: \"90%\",\r\n                            maxWidth: \"90%\",\r\n                            lineHeight: 1,\r\n                            margin:'auto',\r\n                            textAlign:\"center\",\r\n                            textShadow: '1px 1px 2px black'\r\n                        }}>{props.question}</Textfit>\r\n              \r\n                </section>\r\n                <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-between',alignContent:'center', flexWrap: 'wrap', width: '99%', overflow:'visible' }}>\r\n                    {props.answers.map((answerOption, j) => {\r\n                        return (\r\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{width:'49%',minHeight:'22%', maxHeight: '200px', maxWidth:'200px'}}>\r\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\r\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\r\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\r\n                                    <div className=\"name\" key={\"div2Box\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\r\n                                </div>\r\n                            </label>\r\n                        )\r\n                    })}\r\n                </section>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default LayoutBox;","import React from \"react\"\r\n\r\nexport default function ZoomImage(props) {\r\n// for simple layout it allows to zoom in to picture in the question displayed\r\n\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh', position: 'absolute', top: window.pageYOffset, left: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: '2000', backgroundColor: 'rgba(105,105,105, .7)' }} >\r\n      <div style={{ margin: 'auto', maxWidth: '600px', border: '1px solid gray', borderRadius: '.25rem', padding: '2%'}}>    \r\n          <img src={props.img} style={{ width: '100%', visibility: 'visible' }} alt='zooming in' />\r\n          <div className=\"closeTag\"  onClick={(e) =>{ props.closeModal(true)}}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ float:'right', width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)',color:\"red\" }} /></div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Textfit from 'react-textfit';\r\nimport ZoomImage from '../ZoomImage';\r\nimport \"./style.css\";\r\nfunction LayoutSimple(props) {\r\n    // component creates layout called Simple and display current question in style of this layout\r\n    const [revealModal, setRevealModal] = useState(false);\r\n    useEffect(() => {\r\n        // drawing the selected options of anwers inputed by user\r\n        for (let i = 0; i < props.answers.length; i++) {\r\n            document.querySelector(\"#answer_\" + i).checked = false;\r\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\r\n        }\r\n        \r\n    }, [props.answers]);\r\n    function checkingMulti(e) {\r\n        // on Change sending the new result back to parent\r\n        if (props.info.correct === 1) {\r\n            for (let i = 0; i < props.answers.length; i++) {\r\n                document.querySelector(\"#answer_\" + i).checked = false;\r\n\r\n            }\r\n            document.querySelector(\"#\" + e.target.id).checked = true;\r\n        }\r\n        let choice = [];\r\n        for (let i = 0; i < props.answers.length; i++) {\r\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\r\n                choice.push(i);\r\n            }\r\n        }\r\n        props.onChange(choice);\r\n    }\r\n\r\n    return (\r\n        <div id='questionContainerSimple' style={{ opacity: props.vis}}>\r\n\r\n\r\n\r\n            {revealModal && <ZoomImage img={props.info.img} closeModal={(e)=>{setRevealModal(false)}} />}\r\n            <section className=\"questionSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\r\n                <div style={{width:'100%',display: 'flex',justifyContent:'center', alignItems: 'center', height: window.innerWidth < 700 ? '30%' : '70%' }}>\r\n                    <img src={props.info.img} style={{ height:'100%', alignSelf:'center'}} alt={props.info.img} onClick={(e)=>{setRevealModal(true)}} />\r\n                </div>\r\n                <div style={{width:'100%', height: window.innerWidth < 700 ? '70%' : '30%' }}>\r\n                    <Textfit max={256} mode='multi'\r\n                        min={12}\r\n                        style={{\r\n                            color: 'white',\r\n                            minHeight: \"90%\",\r\n                            maxHeight: \"90%\",\r\n                            minWidth: \"90%\",\r\n                            maxWidth: \"90%\",\r\n                            lineHeight: 1,\r\n                            margin: 'auto',\r\n                            textAlign: \"center\",\r\n                            textShadow: '1px 1px 2px black'\r\n                        }}>{props.question}</Textfit>\r\n                </div>\r\n            </section>\r\n            <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'visible' }}>\r\n                {props.answers.map((answerOption, j) => {\r\n                    return (\r\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\r\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\r\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\r\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256} mode='multi'\r\n                                    min={10}\r\n                                    style={{\r\n                                        minHeight: \"90%\",\r\n                                        maxHeight: \"90%\",\r\n                                        minWidth: \"90%\",\r\n                                        maxWidth: \"90%\",\r\n                                        lineHeight: 1,\r\n                                        textAlign: \"center\",\r\n                                        textShadow: '1px 1px 2px black'\r\n                                    }}>{answerOption.text}</Textfit>\r\n                            </div>\r\n                        </label>\r\n                    )\r\n                })}\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\r\nimport LayoutBox from '../../components/LayoutBox';\r\nimport LayoutSimple from '../../components/LayoutSimple';\r\nconst QuestionDisplay = props => {\r\n    const [backgroundVal,setBackgroundVal]= useState('')\r\n    useEffect(() => {\r\n        // setting up background\r\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\r\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\r\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\r\n        setBackgroundVal(gradientValue+comma+backgroundValue);\r\n    }, []);\r\n    return (\r\n        // displaying specific layout based on question \r\n            <div id='questionDisplayContainer' className={`${(props.status==='test') ? \"noScroll\" : \"\"}`} style={{backgroundImage:backgroundVal}}>\r\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\r\n                    : <div style={{ display: 'none' }}></div>}\r\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\r\n                    : <div style={{ display: 'none' }}></div>}    \r\n            </div>\r\n    );\r\n}\r\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\r\nimport firebase from \"../firebase\";\r\nfunction GetResults(props) {\r\n    // get test result of the test, sort it, display it\r\n    const db = firebase.firestore();\r\n    const [testRecords, setTestsRecords] = useState([]);\r\n    useEffect(() => {\r\n        let resultsData = []\r\n        const fetchData = async () => {\r\n\r\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    // doc.data() is never undefined for query doc snapshots\r\n                    resultsData.push(doc.data());\r\n                });\r\n                resultsData.sort(function (a, b) {\r\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\r\n                });\r\n                setTestsRecords(resultsData);\r\n            });\r\n            // another way to get results\r\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\r\n        };\r\n        fetchData();\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ width: '60vw', maxHeight: '20vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center', borderRadius: \"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\r\n            <table style={{ margin: 'auto' }} >\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Result</th>\r\n                    <th>Time Left</th>\r\n                </tr>\r\n                <tbody>\r\n                    {testRecords && testRecords.map((test, j) => {\r\n                        return (\r\n                            <tr key={j}>\r\n                                <td key={\"name\" + j}>{test.displayName}</td>\r\n                                <td key={\"result\" + j}>{test.result}</td>\r\n                                <td key={\"time\" + j}>{test.time}</td>\r\n                            </tr>\r\n\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default GetResults;","import React from \"react\";\r\nimport { FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon, WhatsappShareButton, WhatsappIcon, EmailShareButton, EmailIcon} from \"react-share\";\r\nfunction SharePost(props) {\r\n    // sets buttons to share test information on networks\r\n    var socialMediaButton = {\r\n        \"&:hover > svg\": {\r\n            height: \"50px !important\",\r\n            width: \"50px !important\",\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <FacebookShareButton\r\n                url={props.url}\r\n                quote={props.title+'\\n'+props.quote}\r\n                hashtag={props.hashtag}\r\n                className={socialMediaButton}\r\n            >\r\n                <FacebookIcon size={36} round={true}/>\r\n            </FacebookShareButton>\r\n            <TwitterShareButton\r\n                url={props.url}\r\n                title={props.title+'\\n'+props.quote}\r\n                hashtag={props.hashtag}\r\n                className={socialMediaButton}\r\n            >\r\n                <TwitterIcon size={36} round={true}/>\r\n            </TwitterShareButton>\r\n            <WhatsappShareButton\r\n                url={props.url}\r\n                title={props.title+'\\n'+props.quote}\r\n                separator=\":: \"\r\n                className={socialMediaButton}\r\n            >\r\n                <WhatsappIcon size={36} round={true}/>\r\n            </WhatsappShareButton>\r\n\r\n            <EmailShareButton\r\n                url={props.url}\r\n                subject={props.title}\r\n                body={props.quote+'\\n'}\r\n                media={props.image}\r\n                className={socialMediaButton}>\r\n                <EmailIcon size={36} round={true} />\r\n            </EmailShareButton>\r\n        </div>\r\n    )\r\n}\r\nexport default SharePost;","import React, { useState, useRef } from 'react';\r\nimport firebase from \"../../firebase\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport GetResults from \"../getResults\";\r\nimport SharePost from '../SharePost';\r\nconst ResultsDisplay = props => {\r\n    // component to display results of the test and top results of other users\r\n    const { currentUser } = useAuth()\r\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\r\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\r\n    function handleSave() {\r\n        // function to save results in the database\r\n        const db = firebase.firestore();\r\n        db.collection(\"results\").add({\r\n            testId: props.testId,\r\n            displayName: testeeName,\r\n            userId: testeeId.current,\r\n            result: props.rate,\r\n            time: timeInSeconds(props.time)\r\n        }).then(result => { handleDont() })\r\n            .catch(e => { console.log('fail to record result') })\r\n\r\n    }\r\n    function handleDont() {\r\n        // do not save results and reload\r\n        window.location.assign(process.env.PUBLIC_URL + '/#/redirect');\r\n        console.log(\"redirect to /\");\r\n    }\r\n    function timeInSeconds(t) {\r\n        // get amount of time left in seconds\r\n        let time = t.split(':');\r\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\r\n    }\r\n    return (\r\n\r\n        <div style={{\r\n            display: 'flex', flexWrap: 'wrap', width: '100%',marginTop:'15%', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '1px 1px #f5d142',\r\n            backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))', backgroundSize: '100% 100%'\r\n        }}>\r\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\r\n            {/* component that dislay results of others */}\r\n            {props.testId.length > 0 && <GetResults testId={props.testId} />}\r\n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\r\n            <div style={{ width: '60vw', maxHeight: '20vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center', borderRadius: \"10px\" }}>\r\n                <table style={{ margin: 'auto' }} >\r\n                    <tr>\r\n                        <th>Question</th>\r\n                        <th>Result</th>\r\n                    </tr>\r\n\r\n                    {props.res.map((res, j) => {\r\n                        return (\r\n                            <tr key={\"n\" + j}>\r\n                                <td key={\"num\" + j} >{j + 1}</td>\r\n                                <td key={\"correct\" + j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\r\n                            </tr>\r\n\r\n                        )\r\n                    })}\r\n                </table>\r\n            </div>\r\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\r\n\r\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\r\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\r\n            </label>}\r\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</button>}\r\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</button>}\r\n            <div style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\r\n                {props.testId.length <= 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</button>}\r\n            </div>\r\n            {props.testId.length > 0 && <>\r\n                <h3 style={{ width: '100%', textAlign: 'center' }}>To share results click below</h3>\r\n                <SharePost title={`I just complete the ${props.testName} at Quiz Land site`} url={'https://sbolotnikov.github.io/test-editor/#/taketest/' + props.testId} quote={`I got ${props.rate}% correct with ${timeInSeconds(props.time)} seconds left. \\n Could you beat me? \\n Click on the link below. Good luck! \\n`}\r\n                    hashtag={'#QuizLand '} image={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} description={'My score was ... And ... seconds left. Could you beat me?'} />\r\n            </>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\r\nimport TestNav from '../testNav';\r\nimport QuestionDisplay from '../QuestionDisplay';\r\nimport ResultsDisplay from '../ResultsDisplay';\r\nimport \"./style.css\";\r\n\r\nfunction TestRun(props) {\r\n  // main test running component. It get the test, generate test, displays navigation(TestNav) and individual questions(QuestionDisplay), and results(ResultsDisplay) in the end, using specific components \r\n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\r\n  var testBackground = props.test.main.background;\r\n  var quizMain = props.test.test;\r\n  var test = [];\r\n  var choiceSet = [];\r\n  const [displayQ, setDisplayQ] = useState(0);\r\n  const [resultTime, setResultTime] = useState('');\r\n  const [choices, setChoices] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [rating, setRating] = useState(0);\r\n  const [visible, setVisible] = useState(0);\r\n  const [testGenerated, setTestGenerated] = useState('');\r\n  function randomizer(arr) {\r\n//  taking question array and randomize the order of options inside\r\n    let testArray = [];\r\n    let answerCount = arr.length;\r\n    let positionN = 0;\r\n    for (let i = 0; i < answerCount; i++) {\r\n      positionN = Math.floor(Math.random() * arr.length)\r\n      testArray.push(arr[positionN]);\r\n      arr.splice(positionN, 1);\r\n\r\n    }\r\n    return testArray\r\n  }\r\n\r\n  function randomChoice(arr, n) {\r\n    // choosing n random positions from array\r\n\r\n    let testArray = [];\r\n    let positionN = 0;\r\n    for (let i = 0; i < n; i++) {\r\n      positionN = Math.floor(Math.random() * arr.length)\r\n      testArray.push(arr[positionN]);\r\n      arr.splice(positionN, 1);\r\n    }\r\n    return testArray\r\n  }\r\n  function handleChoices(ch) {\r\n    // saving user responses to specific question to answers array\r\n    let localChoices = choices;\r\n    localChoices.splice(displayQ, 1, ch);\r\n    console.log(localChoices);\r\n    setChoices(localChoices);\r\n\r\n  }\r\n  function handleChangeQuestion(q) {\r\n    // setting another question\r\n    if (q > 0) { setDisplayQ(q - 1) }\r\n    else {\r\n      setDisplayQ(q);\r\n      setVisible(1);\r\n\r\n    }\r\n  }\r\n  function correctAnswers() {\r\n    // setting the array of correct answers to specific generated test\r\n    let arr = [];\r\n    let arrSmall = [];\r\n    for (let i = 0; i < testGenerated.length; i++) {\r\n      arrSmall = [];\r\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\r\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\r\n      }\r\n      arr.push(arrSmall)\r\n    }\r\n    return arr\r\n  }\r\n  function handleQuizEnd(t) {\r\n    // finishing quiz by compare user choices with array of correct answers, getting percentage of the right answers and time left and setting the state with these parameters\r\n    let arr = [];\r\n    let n = 0;\r\n    console.log(t);\r\n    let correctArr = correctAnswers();\r\n    setVisible(0);\r\n    for (let i = 0; i < correctArr.length; i++) {\r\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\r\n      if (arr[i] === true) n += 1\r\n    }\r\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\r\n    setRating(((n / correctArr.length * 100).toFixed(2)));\r\n    setResults(arr);\r\n    setResultTime(t);\r\n    console.log(results)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // gererating the random answers array for the test and randomize their positions. Generate test before it send to display and saving it to state\r\n    console.log(props.test.id)\r\n    let answersSet = [];\r\n    for (let i = 0; i < quizMain.length; i++) {\r\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\r\n      answersSet = randomizer(answersSet);\r\n\r\n      test.push({\r\n        \"info\": quizMain[i].info,\r\n        \"question\": quizMain[i].question,\r\n        \"answers\": answersSet,\r\n      })\r\n      choiceSet.splice(0, 0, [])\r\n\r\n    }\r\n    setChoices(choiceSet);\r\n    setTestGenerated(test);\r\n  }, []);\r\n useEffect(()=>{\r\n  //  if results are finalise displays main navigation bar, otherwise hide it\r\n  (results.length > 0) ? document.querySelector(\"nav.navbar\").style.display = 'flex' :document.querySelector(\"nav.navbar\").style.display = 'none';\r\n },[results]);\r\n\r\n\r\n  return (\r\n    <>\r\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testName={props.test.main.name} testId={props.local?\"\":props.test.id} />}\r\n      {testGenerated && results.length <= 0 && \r\n      <div  style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\r\n      <TestNav  qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\r\n      </div>\r\n      }\r\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient} status={\"test\"}  info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\r\nimport firebase from \"../firebase\";\r\nimport { useParams } from 'react-router-dom'\r\nimport TestRun from './TestRun'\r\nexport default function DirectTestPage() {\r\n  // page that run test by id. It gets test from the db and runs test\r\n  const [test, setTest] = useState({});\r\n  const [loading, setLoading] = useState(false)\r\n  const db = firebase.firestore();\r\n  let { id } = useParams();\r\n  useEffect(() => {\r\n    db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\r\n      setTest({ ...querySnapshot.data(), id: id });\r\n      setLoading(true);\r\n    })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n  return (\r\n    <>\r\n      {loading && <TestRun test={test} local={false} />}\r\n    </>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport  \"./Nav.scss\";\r\nfunction Nav(props) {\r\n    // main Nav\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n    const { currentUser } = useAuth();\r\n    const [imgDisplay, setImgDisplay] = useState('');\r\n    \r\n    function handleNavCollapse() {\r\n        setIsNavCollapsed(!isNavCollapsed)\r\n    }\r\n    useEffect(() => {\r\n        // based on the user it set the profile picture\r\n        let imgLink =  process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"\r\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\r\n        else{\r\n            setImgDisplay(imgLink)\r\n        }\r\n        \r\n    }, [currentUser]);\r\n    useEffect(()=>{\r\n        if(window.innerWidth<1000){\r\n        if (isNavCollapsed){\r\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#navbarNav\").style.display=\"block\";\r\n        }\r\n    }\r\n\r\n    },[isNavCollapsed]);\r\n    useEffect(()=>{\r\n        if (window.innerWidth>=1000){\r\n            document.querySelector(\"#navbarNav\").style.display=\"flex\";\r\n            document.querySelector(\"#navbarNav\").style.justifyContent=\"center\";\r\n            document.querySelector(\"#navbarNav\").style.width=\"83%\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\r\n        }\r\n       \r\n\r\n    },[window.innerWidth]);\r\n\r\n    return (\r\n        <nav className=\"navbar\" >\r\n            \r\n            {window.innerWidth<1000 ? <Link to=\"/dashboard\"><img className=\"member-photo\" src={imgDisplay} alt=\"avatar\"/></Link>\r\n             :<Link to=\"/\" className=\"navHeader\"> <img  src={ process.env.PUBLIC_URL+\"/icons/logoName.svg\"} style={{width:'5.4vh', height:'8.5vh'}} alt=\"close\"/></Link> }\r\n\t\t\t{window.innerWidth<1000 ? <Link to=\"/\" className=\"navHeader\"> \r\n            Quiz Land</Link> : null}\r\n            {window.innerWidth<1000 ? <span id=\"navbar-toggler\"  onClick={handleNavCollapse}>\r\n                <div style={{ width: '1em', height: '1em',float:'center' }}>\r\n                   {isNavCollapsed ? \r\n                     <img src={ process.env.PUBLIC_URL+\"/icons/burger.svg\"} alt=\"open\" /> :\r\n                    <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" />}\r\n                </div>\r\n            </span>: null}\r\n            \r\n                <ul id=\"navbarNav\">\r\n\r\n\r\n                   {!currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\r\n                            Log In\r\n                        </Link>\r\n\r\n                    </li>}\r\n                    {!currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\r\n                            Sign Up\r\n                    </Link>\r\n\r\n                    </li>}\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\r\n                            Take tests\r\n                    </Link>\r\n                    </li>\r\n                   {  currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\r\n                            Manage tests\r\n                    </Link>\r\n                    </li>}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\r\n                            About\r\n                    </Link>\r\n                    </li>\r\n                    {  currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollapse()} >\r\n                            Logout\r\n                    </Link>\r\n                    </li>}\r\n                </ul>\r\n            \r\n\r\n            {window.innerWidth<1000 ? null: <Link to=\"/dashboard\">\r\n               <img className=\"member-photo\"  src={imgDisplay} alt=\"member avatar\"/>\r\n            </Link>}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { Fragment, useEffect } from 'react';\r\nimport \"./style.scss\";\r\nconst ChooseCategory = props => {\r\n// component getting the chose of single and multiple choice\r\n\r\n    useEffect(() => {\r\n        // Selecting chosen categories on start\r\n        for (let i = 0; i <props.answers.length; i++) {\r\n            document.querySelector(\"#category_\" + i).checked = false;\r\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#category_\" + i).checked = true;\r\n        }\r\n        console.log(props.answers)\r\n    },[]);\r\n    function checkingMulti(e) {\r\n        // on click if it is a single choice it remove previously marked category and mark new choice\r\n        if (props.type === 1) {\r\n            for (let i = 0; i < props.answers.length; i++) {\r\n                document.querySelector(\"#category_\" + i).checked = false;\r\n\r\n            }\r\n            document.querySelector(\"#\" + e.target.id).checked = true;\r\n        }\r\n        let choice = [];\r\n        // then it gets an array of choosen categories and thru props.onChange push it up to parent\r\n        for (let i = 0; i < props.answers.length; i++) {\r\n            if (document.querySelector(\"#category_\" + i).checked === true) {\r\n                choice.push(i);\r\n            }\r\n        }\r\n        props.onChange(choice);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n                <section className=\"categoriesSection\" >\r\n                    {props.answers.map((answerOption, j) => {\r\n                        return (\r\n                            <label className=\"option_item\" key={\"labelCat\" + j} style={{width:'47%',maxHeight:'150px', maxWidth:'180px', margin:'5px'}}>\r\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputCat\" + j} id={\"category_\" + j} value={j} onChange={e => checkingMulti(e)} />\r\n                                <div className=\"option_inner\" style={{background: `border-box linear-gradient(rgba(255,255,255,0.25) 30%, rgba(255,255,255,0.75) 50%, rgba(255,255,255,0.25) 70%), url(${process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"}) right top /25% auto  no-repeat` }}>\r\n                                    <div className=\"tickmark\" key={\"divCat\" + j}> </div>\r\n                                    <div className=\"name2\" key={\"div2Cat\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\r\n                                </div>\r\n                            </label>\r\n                        )\r\n                    })}\r\n                </section>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default ChooseCategory;","import React from \"react\"\r\nexport default function TestPopupInfo(props) {\r\n    // display information about test in modal format\r\n    return (\r\n        <div style={{ width: '100vw', height: '100vh', position: 'absolute', top: window.pageYOffset, left: 0, display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n            <div className='alertContainer'>\r\n                <h3 className=\"alertItemStyle\"><strong>{props.test.name}</strong></h3>\r\n                <p className=\"alertItemStyle\"><strong>Author:</strong> {props.test.author}</p>\r\n                <p className=\"alertItemStyle\"><strong>Description:</strong> {props.test.description}</p>\r\n                <p className=\"alertItemStyle\"><strong>Question amount:</strong> {props.test.questionsTotal}</p>\r\n                <button className=\"alertItemStyle\" style={{ backgroundColor: '#d1ecf1', color: '#0c5460' }} onClick={e => {\r\n                    console.log('click'); props.onRes('')\r\n                }}>\r\n                    Close\r\n        </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport firebase from \"../firebase\";\r\nimport AlertMenu from './alertMenu';\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport ChooseCategory from \"../components/ChooseCategory\";\r\nimport TestPopupInfo from \"../components/TestPopupInfo\"\r\nimport { Link} from \"react-router-dom\"\r\nfunction GetTests(props) {\r\n    // get test information, display it, and send it to parent (makeTest or testPage)\r\n    const db = firebase.firestore();\r\n    const { currentUser } = useAuth();\r\n    const [testRecords, setTestsRecords] = useState([]);\r\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\r\n    const [revealAlert, setRevealAlert] = useState(false);\r\n    const [revealInfo, setRevealInfo] = useState(false);\r\n    const [alertStyle, setAlertStyle] = useState({});\r\n    const [deleteRecId, setDeleteRecId] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoriesLayout, setCategoriesLayout] = useState([]);\r\n    const [checked, setChecked] = useState([]);\r\n    const [testFromDB, setTestFromDB] = useState({});\r\n    const [checkEditLocalTestVisible, setCheckEditLocalTestVisible] = useState(false);\r\n    const [testInfo, setTestInfo] = useState({});\r\n    const onReturn = (decision1) => {\r\n        // if Delete button is clicked in makeTest it delete test. If Proceed button clicked it send test to apropreate parent \r\n        setRevealAlert(false);\r\n        if (decision1 === \"Delete\") {\r\n            db.collection('tests').doc(deleteRecId).delete()\r\n                .then(res => {\r\n                    console.log('deleted');\r\n                    props.reloadNeeded(true);\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"can not delete a record\");\r\n                })\r\n        }\r\n        if (decision1 === \"Proceed\") {\r\n            props.onChange(testFromDB);\r\n            props.onLocal(false);\r\n        }\r\n    }\r\n    function handleDelete(e) {\r\n        // handles delete button click and confirm by revealing the AlertMenu\r\n        let recId = e.target.getAttribute(\"value\")\r\n        setDeleteRecId(recId)\r\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\r\n        let objFound = testRecords[elementPos];\r\n        setAlertStyle({\r\n            variantHead: \"danger\",\r\n            heading: \"Warning\",\r\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\r\n            color1: \"danger\",\r\n            button1: \"Delete\",\r\n            color2: \"secondary\",\r\n            button2: \"Cancel\"\r\n        });\r\n        setRevealAlert(true)\r\n    }\r\n    function handleHover(t) {\r\n        // on hover over test name it gather info about the test and reveal modal like panel with test info \r\n        let test = testRecords.filter(item => item.id === t.target.getAttribute(\"value\"))[0];\r\n        setTestInfo({\r\n            author: test.main.authorName,\r\n            description: test.main.description,\r\n            name: test.main.name,\r\n            questionsTotal: test.test.length,\r\n            positionY: t.clientY + 5\r\n        })\r\n        setRevealInfo(true);\r\n\r\n    }\r\n    function handleClick(test) {\r\n        // on clicking Edit test button it reveals the AlertMenu to confirm that information was saved and set test object \r\n        if (props.forPage === 'create') {\r\n            setAlertStyle({\r\n                variantHead: \"danger\",\r\n                heading: \"Warning\",\r\n                text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\r\n                color1: \"danger\",\r\n                button1: \"Proceed\",\r\n                color2: \"secondary\",\r\n                button2: \"Cancel\"\r\n            });\r\n            setRevealAlert(true);\r\n            setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0])\r\n        } else { props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0]) }\r\n    }\r\n    const fetchData = async () => {\r\n        // gather test information from db, sort it, set state to display it\r\n        let arrTemp = [];\r\n        const data = await db.collection(\"tests\").get();\r\n        if (props.forPage === 'create')\r\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\r\n        else\r\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\r\n        arrTemp.sort(function (a, b) {\r\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\r\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\r\n            if (nameA < nameB) {\r\n                return -1;\r\n            }\r\n            if (nameA > nameB) {\r\n                return 1;\r\n            }\r\n\r\n            // names must be equal\r\n            return 0;\r\n\r\n        });\r\n        setTestsRecords(arrTemp);\r\n        setTestsRecordsDisplay(arrTemp);\r\n    };\r\n    const fetchCategories = async () => {\r\n// getting categories information, sorting it and setting it in the state to show it\r\n        const data = await db.collection(\"categories\").get();\r\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\r\n        arrTemp.sort(function (a, b) {\r\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\r\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\r\n            if (nameA < nameB) {\r\n                return -1;\r\n            }\r\n            if (nameA > nameB) {\r\n                return 1;\r\n            }\r\n\r\n            // names must be equal\r\n            return 0;\r\n\r\n        });\r\n        setCategories(arrTemp);\r\n        arrTemp = arrTemp.map(option => { return ({ 'text': option.value, img: \"\" }) });\r\n        console.log(arrTemp)\r\n        setCategoriesLayout(arrTemp);\r\n    };\r\n    function getChoosenTests(ch) {   \r\n        // set selected categories state to filter test results accordingly to choosen categories                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \r\n        setChecked(ch);\r\n        (ch.length > 0) ? setSelectedOption(categories.filter((n, j) => ch.indexOf(j) > -1)) : setSelectedOption(categories)\r\n    }\r\n    function readSingleFile(evt) {\r\n        // getting test information for Editing from local file and confirming that previous info is saved by displaying AlertMenu \r\n        var f = evt.target.files[0];\r\n        if (f) {\r\n            var r = new FileReader();\r\n            r.onload = function (e) {\r\n                setTestFromDB(JSON.parse(e.target.result));\r\n                if (props.forPage === 'create') {\r\n                    setAlertStyle({\r\n                        variantHead: \"danger\",\r\n                        heading: \"Warning\",\r\n                        text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\r\n                        color1: \"danger\",\r\n                        button1: \"Proceed\",\r\n                        color2: \"secondary\",\r\n                        button2: \"Cancel\"\r\n                    });\r\n                    setRevealAlert(true);\r\n                } else {\r\n                    props.onChange(JSON.parse(e.target.result));\r\n                    props.onLocal(true);\r\n                }\r\n                // setLocalTest(true)\r\n            }\r\n            r.readAsText(f);\r\n\r\n        } else {\r\n            alert(\"Failed to load file\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // fetching original data\r\n        fetchCategories();\r\n        fetchData();\r\n    }, []);\r\n    useEffect(() => {\r\n        // fetching data and displaying tests accordingly selected categories\r\n        let recordSet = testRecords;\r\n        let chosenRec = [];\r\n        console.log(selectedOption);\r\n        if (selectedOption) {\r\n            for (let i = 0; i < selectedOption.length; i++) {\r\n                let tempArr = [];\r\n                for (let j = 0; j < recordSet.length; j++) {\r\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\r\n                }\r\n                chosenRec = chosenRec.concat(tempArr);\r\n            }\r\n        }\r\n        // exclude duplicates in Array  \r\n        chosenRec = chosenRec.filter((c, index) => {\r\n            return chosenRec.map(x => x.id).indexOf(c.id) === index;\r\n        });\r\n        setTestsRecordsDisplay(chosenRec);\r\n    }, [selectedOption])\r\n    return (\r\n        <div style={{ width: '100%', maxWidth: \"600px\", height: \"80%\", overflow:'auto', margin: '6em 0 2em 0' }}>\r\n            {revealInfo && <TestPopupInfo test={testInfo} onRes={e => {\r\n                setRevealInfo(false); console.log('close')\r\n            }\r\n            } />}\r\n            {(props.forPage === 'test') && (currentUser) && <button className=\"testNav\" style={{ width: '100%', margin:0}} onClick={e=>{ window.location.assign(process.env.PUBLIC_URL + '/#/create'); }}>\r\n                Create New test\r\n            </button>}\r\n            <p className=\"testHeaders\" > CHOOSE TEST TO {(props.forPage === 'test')? 'TAKE':'MANAGE'}</p>\r\n            {categoriesLayout &&\r\n                <ChooseCategory type={categoriesLayout.length} answers={categoriesLayout} checkedMarks={checked} onChange={(ch) => { getChoosenTests(ch) }} />\r\n            }\r\n            <p className=\"testHeaders\" >DISCOVER TESTS</p>\r\n            {testRecordsDisplay && <div style={{ height: \"52%\", overflow:'auto', margin: '0' }}>\r\n            \r\n                <table style={{ width: '100%' }} >\r\n                   \r\n                    <tbody>\r\n                        {testRecordsDisplay.map((test, j) => {\r\n                            return (\r\n                                <tr key={\"divTests\" + j} > \r\n                                        {(props.forPage === 'create') &&\r\n                                           <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '0% 4%', backgroundColor: '#721c24', margin: '0 9% 0 0', display: 'flex', flexDirection: \"column\", alignItems: 'center', width:'100%' }} key={\"eraseBtnTests\" + j} value={test.id} onClick={e => handleDelete(e)}>Del <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" value={test.id} style={{ width: 'max(3.5vw,20px)', height: 'max(3.5vw,20px)' }}  /></button></td>\r\n                                        }                                  \r\n                                    <td style={{ backgroundColor: 'white', borderRadius: '5px' }}><div key={\"textTests\" + j} className='testText' value={test.id} onClick={e => handleHover(e)} style={{ cursor: \"pointer\", whiteSpace: 'wrap', textAlign: 'center', border: 0, width: \"100%\" }}>{test.main.name} <span value={test.id} style={{ fontStyle: 'oblique', color: '#554FA7' }}>@{test.main.authorName}</span></div></td>\r\n                                    <td><button className=\"testNav\" style={{ padding: '15% 4%',margin:'0', backgroundColor: 'white', color: '#554FA7', height:'100%', display: 'flex', alignItems: 'center',}} key={\"playBtnTests\" + j} value={test.id} onClick={e => handleClick(e)}><img src={(props.forPage === 'create') ? process.env.PUBLIC_URL + \"/icons/EditIcon.svg\" : process.env.PUBLIC_URL + \"/icons/Play.svg\"} value={test.id} alt={(props.forPage === 'create') ? \"Edit\" : \"Play\"} style={{ width: 'max(3.5vw,25px)', height: 'max(3.5vw,25px)' }} /></button></td>\r\n                                    {/* button text if needed <strong>{(props.forPage === 'create') ? 'Edit' : 'Play'}</strong> */}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>}\r\n            {(props.forPage === 'create') && <label >\r\n                <input type=\"checkbox\" id=\"checkEditLocalTest\" style={{ margin: '5% 2% 0 2%' }} onChange={e => setCheckEditLocalTestVisible(document.querySelector(\"#checkEditLocalTest\").checked)} />\r\n              Load local test from your disk\r\n              \r\n            { checkEditLocalTestVisible && <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />}\r\n            </label>}\r\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\r\n            {(props.forPage === 'test') && <div className=\"divStyle\">\r\n            Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\r\n          </div>}\r\n        </div>\r\n    );\r\n}\r\nexport default GetTests;","import React, { useState } from 'react';\r\nimport TestRun from '../../components/TestRun';\r\nimport GetTests from '../../components/getTests';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport Footer from \"../../components/Footer\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction ToRenderEverything() {\r\n// main page that runs tests \r\n  const [testLoad, setTestLoad] = useState(false);\r\n  const [localTest, setLocalTest] = useState(false);\r\n  const { currentUser } = useAuth()\r\n\r\n  function getTestfromDB(n) {\r\n    // sets test to run taken from the GetTests component. Test run by the TestRun component\r\n    console.log(n)\r\n    setTestLoad(n);\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"testContainer\">\r\n      {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onLocal={l => setLocalTest(l)} onChange={n => getTestfromDB(n)} /> }\r\n      {testLoad && <TestRun test={testLoad} local={localTest} />}\r\n      {!testLoad && <Footer />}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\r\nimport Cloudinary from './Cloudinary';\r\nfunction GetText(props) {\r\n    // component collecting answer option and image link for it, passing it to parent(GetAnswers)\r\n    const [answerText, setAnswerText] = useState(props.answer.text);\r\n    const [imgLink, setImgLink] = useState(props.answer.img);\r\n    const [checkBox, setCheckBox] = useState();\r\n    const getImgUrl = (url) => {\r\n        // on change url\r\n        document.querySelector(\"#mainImg\").value = url;\r\n        setImgLink(url);\r\n        sendBack(answerText, url);\r\n    }\r\n    function changeInput(e) {\r\n        // on change answer\r\n        setAnswerText(e.target.value)\r\n        sendBack(e.target.value, imgLink);\r\n    }\r\n    function changeImage(e) {\r\n        setImgLink(e.target.value);\r\n        sendBack(answerText, e.target.value);\r\n    }\r\n    function sendBack(a, b) {\r\n    // sending props back\r\n        let choice = {\r\n            text: a,\r\n            img: b,\r\n            num: props.num\r\n        };\r\n        props.onChange(choice);\r\n    }\r\n    useEffect(() => {\r\n        //  setting text and link for one answering option and updating on props change\r\n        setAnswerText(props.answer.text);\r\n        if (props.answer.img.length > 0) {\r\n            setCheckBox(true);\r\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\r\n            setImgLink(props.answer.img);\r\n        } else {\r\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\r\n            setCheckBox(false);\r\n        }\r\n    }, [props.answer]);\r\n    return (\r\n            <div >\r\n                <textarea style={{ width: '100%', borderRadius: '.25rem', borderColor: 'lightgray' }} value={answerText} onChange={e => changeInput(e)} />\r\n                <label style={{ color: 'black', width: '100%' }}>\r\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\r\n                check to add image link</label>\r\n                {checkBox && <div >\r\n                    <input type=\"text\" style={{ width: '100%', opacity: checkBox, borderRadius: '.25rem', borderColor: 'lightgray' }} value={imgLink} onChange={e => changeImage(e)} />\r\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\r\n                    <img src={imgLink} style={{width:'19%'}} alt='thumbnail'/>\r\n                </div>}\r\n            </div>\r\n    );\r\n}\r\nexport default GetText;","import React, { useEffect, useState } from 'react';\r\nimport GetText from './GetText.js';\r\n\r\nfunction GetAnswers(props) {\r\n    // component that handles EDITing answer's options (right and wrong) for particular test receive info from child-component(GetText) and sending them up to parent(GetQuestion)\r\n    function handleNewText() {\r\n        // create new answering option and send it up to GetAnswers\r\n        let emptyNew = { text: '', img: '', choice: props.correct };\r\n        props.onNew(emptyNew);\r\n    }\r\n    function handlePasteText(){\r\n        // pasting answer from localStorage and sending it up to GetAnswers\r\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\r\n        if (pasteItem===null) return\r\n        pasteItem.choice=props.correct;\r\n        props.onNew(pasteItem);\r\n    }\r\n    function handleChangeText(t) {\r\n        // getting answers changes from GetText and send them up to GetAnswers\r\n        let localArr = props.answers;\r\n        if ((t.text === '') && (t.img === '')) {\r\n            localArr.splice(t.num, 1);\r\n        } else {\r\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\r\n            localArr.splice(t.num, 1, answerRenew)\r\n        }\r\n        props.onChange(localArr);\r\n    }\r\n    function handleDelete(e) {\r\n// delete answer option\r\n        props.onDelete(e.target.value)\r\n    }\r\n    function handleCopy(e){\r\n        // Copy answer and send it up to GetAnswers\r\n        props.onCopy(e.target.value)\r\n    }\r\n    const [answers, setAnswers] = useState([]);\r\n    useEffect(() => {\r\n        // setting answering options from parent and updating on props change\r\n        setAnswers(props.answers);\r\n    }, [props.answers]);\r\n    return (\r\n        <div style={{display:\"flex\", alignItems:\"start\", justifyContent:\"start\", marginBottom:'4vh'}}>\r\n            <div style={{width:'85%' }}>\r\n                <div>\r\n                    {answers && answers.map((answerOption, j) => {\r\n                        return (\r\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\r\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\r\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\", margin:0 }}  key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>&#128209;Copy</button>\r\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />         \r\n                            </div>\r\n                        )\r\n                    }\r\n                    )}\r\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handlePasteText() }}>&#128203;Paste</button>\r\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handleNewText() }}>New &#10133;</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport GetAnswers from './GetAnswers.js';\r\nimport Cloudinary from './Cloudinary';\r\nfunction GetQuestion(props) {\r\n  // component that handles EDITing of the particular question of the test. It receive info from child-component(GetAnswers) and sending them up to parent(page/makeTest)  \r\n    var questionObj = {}\r\n\r\n    const [rights, setRights] = useState([]);\r\n    const [wrongs, setWrongs] = useState([]);\r\n    const getImgUrl = (url) => {\r\n        document.querySelector(\"#mainImg\").value = url;\r\n        props.onChange({ \"mainImg\": url })\r\n    }\r\n    // list available layouts\r\n    var layouts = [\"simple\", \"box\"];\r\n    useEffect(() => {\r\n        // fill/updating question depending on changes in parent\r\n        document.querySelector(\"#question\").value = props.q.question;\r\n        document.querySelector(\"#mainImg\").value = props.q.info.img;\r\n        document.querySelector(\"#positionsCount\").value = props.q.info.positions;\r\n        document.querySelector(\"#correctCount\").value = props.q.info.correct;\r\n        document.querySelector(\"#layout1\").value = props.q.info.layout;\r\n        setRights(props.q.rights);\r\n        setWrongs(props.q.wrongs);\r\n\r\n    }, [props.q]);\r\n    function handleReturnData(t, corr) {\r\n        // passing answers to the parent\r\n        if (corr) {\r\n            questionObj.rights = t;\r\n        } else {\r\n            questionObj.wrongs = t;\r\n        }\r\n        props.onChange(questionObj)\r\n    }\r\n    function handleCopyData(n, corr) {\r\n        // saving the answer to the localStorage to copy it\r\n        (corr) ? questionObj = props.q.rights[n] : questionObj = props.q.wrongs[n];\r\n        localStorage.setItem('answerCopy', JSON.stringify(questionObj));\r\n    }\r\n    function newRecord(e, corr) {\r\n        // setting new Record and send it to parent\r\n        if (corr) {\r\n            questionObj = props.q.rights;\r\n            questionObj.push({ text: e.text, img: e.img, choice: true });\r\n        } else {\r\n            questionObj = props.q.wrongs;\r\n            questionObj.push({ text: e.text, img: e.img, choice: false });\r\n        }\r\n        props.onChange(questionObj)\r\n    }\r\n\r\n\r\n    function delRecord(n, corr) {\r\n        // delete one answer option\r\n        if (corr) {\r\n            questionObj = props.q.rights;\r\n            questionObj.splice(n, 1);\r\n        } else {\r\n            questionObj = props.q.wrongs;\r\n            questionObj.splice(n, 1);\r\n        }\r\n        props.onChange(questionObj)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <label className='headerStyle'>Enter your question\r\n            <textarea id=\"question\" onChange={e => { props.onChange({ \"question\": e.target.value }) }} />\r\n            </label>\r\n            <br/>\r\n            <label className='headerStyle'>Add your question main picture link (if you have one)\r\n            <input id=\"mainImg\" onChange={e => { props.onChange({ \"mainImg\": e.target.value }) }} />\r\n            </label>\r\n            <Cloudinary getImgUrl={getImgUrl} />\r\n            <label className='headerStyle'>Choose question layout\r\n                <select id=\"layout1\" onChange={e => { props.onChange({ \"layout1\": e.target.value }) }} >\r\n                    {layouts.map((option, i) => {\r\n                        return (\r\n                            <option value={option} key={'layout_option' + i}>{option}</option>\r\n                        )\r\n                    }\r\n                    )}\r\n                </select>\r\n             </label>\r\n            <div className=\"containerGrid\">\r\n                <section className='panel1'>\r\n                    <label>\r\n                        <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length + wrongs.length}  onChange={e => { props.onChange({ \"positionsCount\": e.target.value }) }} />            \r\n                        How many positions would be displayed?(Maximum should be less then answers options)\r\n                    </label>\r\n                </section>\r\n                <section className='panel2'>\r\n                    <label>\r\n                        <input id=\"correctCount\" type=\"number\" min={0} max={rights.length}  onChange={e => { props.onChange({ \"correctCount\": e.target.value }) }} />           \r\n                        How many correct options should be selected?(Maximum should be less then correct answers options)\r\n                    </label>\r\n                </section>\r\n            </div>\r\n            <div className=\"containerGrid\">\r\n                <section className='panel2'>\r\n                    <label className='headerStyle' style={{color:'green'}} ><strong>Enter text of the correct answers:</strong></label>\r\n                    {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\r\n                </section>\r\n                <section className='panel1'>\r\n                    <label className='headerStyle' style={{ color:'red'}} ><strong>Enter text of the wrong answers:</strong></label>\r\n                    {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\r\n                </section>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\nexport default GetQuestion;","import React, { useEffect, useState } from 'react';\r\nimport \"./style.css\";\r\nfunction TestCreateNav(props) {\r\n// component that displays navigation for the editing specipic question inside the test\r\n    const [qArr, setqArr] = useState('');\r\n    const [moveVis, setMoveVis] = useState(false);\r\n    useEffect(() => {\r\n        // display question number 1\r\n        document.getElementById('questionPage').value = 1;\r\n    }, []);\r\n    useEffect(() => {\r\n        // fill/update array of question numbers\r\n        let arr = [];\r\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\r\n        setqArr(arr);\r\n    }, [props.qNumber]);\r\n    function questionNumberSet(n) {\r\n        // set current question based on pressing navigaton buttons and send result to parent\r\n        let questionNow = document.querySelector(\"#questionPage\");\r\n        if (Number.isInteger(n)) {\r\n\r\n            if (n === 1) {\r\n                if (questionNow.value === \"\") { questionNow.value = 1; }\r\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\r\n                else questionNow.value = 1;\r\n            }\r\n            if (n === -1) {\r\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\r\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\r\n                else questionNow.value = props.qNumber;\r\n            }\r\n        } else {\r\n            if (n === \"0\") {\r\n                let navButton = document.querySelectorAll(\".testNav\");\r\n                navButton.forEach(function (userItem) {\r\n                    userItem.classList.remove('invisible');\r\n                });\r\n                document.querySelector(\"#startNav\").classList.add('invisible');\r\n                questionNow.value = 1;\r\n            } else questionNow.value = n;\r\n        }\r\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\r\n    }\r\n    function deleteRec() {\r\n        // deletes current page number and switch to last existing ad send prop to delete to parent \r\n        props.onDel('');\r\n        let n = document.querySelector(\"#questionPage\");\r\n        let k = \"\"\r\n        if (parseInt(n.value) !== props.qNumber) {\r\n            k = n.value;\r\n            n.value = k;\r\n        } else {\r\n            k = n.value;\r\n            n.value = (parseInt(k) - 1).toString();\r\n        }\r\n    }\r\n    function visibilityMoveTo() {\r\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\r\n        setMoveVis(!moveVis)\r\n    }\r\n    return (\r\n\r\n        <div className=\"navContainer\" style={{ marginTop: '2%' }} >\r\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Question editing panel</strong></h3>\r\n            <button className=\"testNav\"\r\n                onClick={e => { questionNumberSet('1') }}>&#9198;</button>\r\n            <button className=\"testNav\"\r\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\r\n            <input className=\"testNavLight text-center\" style={{width:'3ch'}} type=\"number\" id=\"questionPage\"  min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\r\n            <button className=\"testNav\"\r\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\r\n            <button className=\"testNav\"\r\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;</button>\r\n            <button className=\"testNav\"\r\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\r\n            <button className=\"testNav\"\r\n                onClick={e => { deleteRec() }}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/>Delete</button>\r\n            <button className=\"testNav\"\r\n            // sending response about copy \r\n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\r\n            <button className=\"testNav\"\r\n            // sending response on paste\r\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\r\n            <button className=\"testNav\"\r\n            //  sending response on preview\r\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\r\n            {(props.qNumber > 1) && <button className=\"testNav\"\r\n            // on click revealing the array of option to move your question to\r\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\r\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\r\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\r\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\r\n            }}>\r\n                {qArr.map((option, i) => {\r\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\r\n                }\r\n                )}\r\n            </select>}\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\r\nimport firebase from \"../firebase\";\r\nimport AlertMenu from './alertMenu';\r\nfunction GetGradient(props) {\r\n    // handles selection of background gradients in Editing test page and passing css value to the test\r\n    const db = firebase.firestore();\r\n    const [revealAlert, setRevealAlert] = useState(false);\r\n    const [alertStyle, setAlertStyle] = useState({});\r\n    const [deleteRecId, setDeleteRecId] = useState(false);\r\n    const [gradients, setGradients] = useState([]);\r\n    const [newGradient, setNewGradient] = useState('');\r\n    const [newGradientName, setNewGradientName] = useState('');\r\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\r\n\r\n    const onReturn = (decision1) => {\r\n        // if Delete button on AlertMenu pressed it deletes choosen gradient from db of the gradients\r\n        setRevealAlert(false);\r\n        if (decision1 === \"Delete\") {\r\n            db.collection('gradients').doc(deleteRecId).delete()\r\n                .then(res => {\r\n                    console.log('deleted');\r\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"can not delete a record\");\r\n                })\r\n        }\r\n    }\r\n    function handleAdd(e) {\r\n        // adds name and css of the gradient to the db, then send signal to parent to reload to include new gradient to the list\r\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\r\n            .then(res => {\r\n                console.log('added');\r\n                props.reloadNeeded(true);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"can not delete a record\");\r\n            })\r\n    }\r\n    function handleDelete(e) {\r\n        // confirming delete gradient by revealing the AlertMenu\r\n        let recId = e.target.getAttribute(\"value\")\r\n        setDeleteRecId(recId)\r\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\r\n        setAlertStyle({\r\n            left: \"0\",\r\n            top: \"0\",\r\n            variantHead: \"danger\",\r\n            heading: \"Warning\",\r\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\r\n            color1: \"danger\",\r\n            button1: \"Delete\",\r\n            color2: \"secondary\",\r\n            button2: \"Cancel\"\r\n        });\r\n\r\n        setRevealAlert(true)\r\n    }\r\n    function handleClick(grad) {\r\n        // sending value of the choosen gradient to the parent\r\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\r\n        props.onChange(gr[0].value);\r\n    }\r\n    const fetchGradients = async () => {\r\n// getting information of the different gradients from db\r\n        const data = await db.collection(\"gradients\").get();\r\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n        setGradients(arrTemp);\r\n    };\r\n    useEffect(() => {\r\n        fetchGradients();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \r\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\r\n            {gradients && gradients.map((item, j) => {\r\n                return (\r\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\r\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius:'10px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\r\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\r\n                        <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  key={\"gradient_del_button\"+j} value={item.id} onClick={e => handleDelete(e)}>Del<img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(.9vw,10px)',height:'max(.9vw,10px)'}}/></button>\r\n                    </div>\r\n                )\r\n            }\r\n            )}\r\n            <label>\r\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} />\r\n                Add new background gradient CSS to our database of pre-set styles\r\n            </label>\r\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '100%' }}>\r\n                <label className='headerStyle'>Enter gradient CSS</label>\r\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\r\n                <label className='headerStyle'>Enter gradient name</label>\r\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\r\n                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  onClick={e => handleAdd(e)}>Add &#128504;</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default GetGradient;","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    // using Select library allows to select multiple categories for the test\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\r\nimport GetQuestion from '../../components/GetQuestion.js';\r\nimport TestCreateNav from '../../components/testCreateNav';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\nimport \"./style.css\";\r\nimport GetTests from '../../components/getTests.js';\r\nimport GetGradient from '../../components/getGradient.js';\r\nimport AlertMenu from '../../components/alertMenu';\r\nimport Cloudinary from '../../components/Cloudinary';\r\nimport QuestionDisplay from '../../components/QuestionDisplay';\r\nimport CustomSelect from '../../components/CustomSelect';\r\n\r\nvar demoArr = [];\r\nvar emptyQ = {\r\n    question: '',\r\n    rights: [{ text: '', img: '', choice: true }],\r\n    wrongs: [{ text: '', img: '', choice: false }],\r\n    info: {\r\n        positions: 2,\r\n        correct: 1,\r\n        layout: '',\r\n        img: ''\r\n    }\r\n}\r\nfunction ToRenderEverything() {\r\n    // main page that edit test\r\n    var defOptionArray = [];\r\n    const { currentUser } = useAuth();\r\n    const [testName, setTestName] = useState('');\r\n    const [testDescription, setTestDescription] = useState('');\r\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\r\n    const [visibility, setVisibility] = useState('');\r\n    const [editability, setEditability] = useState('');\r\n    const [displayQ, setDisplayQ] = useState(0);\r\n    const [testBackground, setTestBackground] = useState('');\r\n    const [testGradient, setTestGradient] = useState('');\r\n    const [testHH, setTestHH] = useState(0);\r\n    const [testMM, setTestMM] = useState(0);\r\n    const [testSS, setTestSS] = useState(0);\r\n    const [show, setShow] = useState(false);\r\n    const [revealAlert, setRevealAlert] = useState(false);\r\n    const [alertStyle, setAlertStyle] = useState({})\r\n    const [testArray, setTestArray] = useState([emptyQ]);\r\n    const [selectedOption, setSelectedOption] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\r\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\r\n    const db = firebase.firestore();\r\n    const fetchCategories = async () => {\r\n// getting categories from db\r\n        const data = await db.collection(\"categories\").get();\r\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\r\n        arrTemp.sort(function (a, b) {\r\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\r\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\r\n            if (nameA < nameB) {\r\n                return -1;\r\n            }\r\n            if (nameA > nameB) {\r\n                return 1;\r\n            }\r\n\r\n            // names must be equal\r\n            return 0;\r\n        });\r\n        setCategories(arrTemp);\r\n    };\r\n    const onReturn = (decision1, inputValue) => {\r\n        // onClick AlertMenu button\r\n        if (decision1 === \"Proceed\") {\r\n            // reload location\r\n            setRevealAlert(false);\r\n            reloadNeeded()\r\n        }\r\n        if (decision1 === \"Update\") {\r\n            // update test in db if successful it save current editing test in LocalStorage and reload location\r\n            setRevealAlert(false);\r\n            let text = {\r\n                main: {\r\n                    author: testAuthor.authorId,\r\n                    authorName: testAuthor.name,\r\n                    categories: selectedOption,\r\n                    name: testName,\r\n                    description: testDescription,\r\n                    visibility: visibility,\r\n                    editability: editability,\r\n                    background: testBackground,\r\n                    gradient: testGradient,\r\n                    hours: testHH,\r\n                    minutes: testMM,\r\n                    seconds: testSS\r\n                },\r\n                test: testArray\r\n            };\r\n            localStorage.setItem('testCopy', JSON.stringify(text));\r\n            db.collection('tests').doc(testAuthor.testId).set(text)\r\n                .then(result => {\r\n                    console.log(\"file updated\");\r\n                    reloadNeeded();\r\n                })\r\n                .catch(e => { console.log(\"file fail to updated\"); })\r\n        }\r\n        if (decision1 === \"Add\") {\r\n            // adds new category to db\r\n            console.log(inputValue)\r\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\r\n                let newItem = { label: inputValue, value: inputValue }\r\n                db.collection('categories').add(newItem)\r\n                    .then(result => {\r\n                        console.log(\"categories updated\");\r\n                        setCategories([...categories, newItem]);\r\n                    })\r\n                    .catch(e => { console.log(\"categories fail to updated\"); })\r\n                setRevealAlert(false);\r\n            } else {\r\n                setAlertStyle({\r\n                    left: \"0\",\r\n                    top: \"0\",\r\n                    variantHead: \"danger\",\r\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\r\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\r\n                    inputField: 'true',\r\n                    inputValue: inputValue,\r\n                    color1: \"danger\",\r\n                    button1: \"Add\",\r\n                    color2: \"secondary\",\r\n                    button2: \"Cancel\"\r\n                });\r\n            }\r\n        }\r\n        if (decision1 === \"Cancel\") {\r\n            // if cancel button pressed just close AlertMenu\r\n            setRevealAlert(false);\r\n        }\r\n    }\r\n    const reloadNeeded = (a) => {\r\n        window.location.reload();\r\n    }\r\n    const getImgUrl = (url) => {\r\n        // set background image \r\n        document.querySelector(\"#background\").value = url;\r\n        setTestBackground(url);\r\n    }\r\n    const getGradientCSS = (n) => {\r\n        // set background gradient\r\n        document.querySelector(\"#backgroundGradient\").value = n;\r\n        setTestGradient(n)\r\n    }\r\n    function handleUpdateQuestion(q) {\r\n        // update of question display number\r\n        if (q > 0) { setDisplayQ(q - 1) }\r\n        else {\r\n            setDisplayQ(q);\r\n        }\r\n    }\r\n    function handleReturnQuestion(t) {\r\n        // update information of the test state\r\n        let arr = [...testArray];\r\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\r\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\r\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\r\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\r\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\r\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\r\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\r\n        setTestArray(arr);\r\n    }\r\n    function handleCopyQuestion(e) {\r\n        // saving to localStorage entire question object for further pasting it to new test (copy question)\r\n        localStorage.setItem('questionCopy', JSON.stringify(testArray[displayQ]));\r\n    }\r\n    function handleInsertQuestion(e) {\r\n        // insert question from localStorage to new test (paste question)\r\n        let arr = [];\r\n        let questCopy = JSON.parse(localStorage.getItem('questionCopy'));\r\n        if (questCopy === null) return\r\n        for (let i = 0; i < testArray.length; i++) {\r\n            if (i === displayQ + 1) arr.push(questCopy)\r\n            arr.push(testArray[i])\r\n        }\r\n        if (displayQ === testArray.length - 1) arr.push(questCopy)\r\n        setTestArray(arr)\r\n        setDisplayQ(displayQ + 1)\r\n    }\r\n    function handleAdd(e) {\r\n        // adding empty new question to state\r\n        setTestArray(oldArray => [...oldArray, {\r\n            question: '',\r\n            rights: [{ text: '', img: '', choice: true }],\r\n            wrongs: [{ text: '', img: '', choice: false }],\r\n            info: {\r\n                positions: 2,\r\n                correct: 1,\r\n                layout: '',\r\n                img: ''\r\n            }\r\n        }]);\r\n        setDisplayQ(testArray.length);\r\n        console.log(displayQ);\r\n    }\r\n    function handleShow() {\r\n        // show modal with current question displayed like it would be presented on the test\r\n        StopScroll();\r\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\r\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\r\n        for (let i = 0; i < arr.length; i++) {\r\n            demoArr.push(arr[i]);\r\n        }\r\n        console.log(demoArr);\r\n        show ? setShow(false) : setShow(true)\r\n    }\r\n    function handleDelete() {\r\n// delete question frrom state\r\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\r\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\r\n    }\r\n    function handleMove(t) {\r\n        // move question into new position inside the teast\r\n        if (t[0] !== t[1]) {\r\n            let arr = [];\r\n            let record1 = testArray[t[0]];\r\n            for (let i = 0; i < testArray.length; i++) {\r\n                if (i === t[1]) {\r\n                    if (t[1] > t[0]) {\r\n                        arr.push(testArray[i]);\r\n                        arr.push(record1);\r\n                    } else {\r\n                        arr.push(record1);\r\n                        arr.push(testArray[i]);\r\n                    }\r\n                }\r\n                else if (i !== t[0]) arr.push(testArray[i])\r\n            }\r\n            setTestArray(arr);\r\n            setDisplayQ(t[1])\r\n            console.log(record1, arr)\r\n        }\r\n    }\r\n    function getTestfromDB(n) {\r\n        // setting test to edit from outside sourse\r\n        console.log(n)\r\n        let newTest = n;\r\n        setTestArray(newTest.test);\r\n        setDisplayQ(0);\r\n        document.querySelector(\"#questionPage\").value = 1;\r\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\r\n        defOptionArray = newTest.main.categories\r\n        setSelectedOption(defOptionArray);\r\n        document.querySelector(\"#testName\").value = newTest.main.name;\r\n        setTestName(newTest.main.name);\r\n        document.querySelector(\"#testDescription\").value = newTest.main.description;\r\n        setTestDescription(newTest.main.description);\r\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\r\n        setVisibility(newTest.main.visibility);\r\n        document.querySelector(\"#editability\").value = newTest.main.editability;\r\n        setEditability(newTest.main.editability);\r\n        document.querySelector(\"#background\").value = newTest.main.background;\r\n        setTestBackground(newTest.main.background);\r\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\r\n        setTestGradient(newTest.main.gradient);\r\n        document.querySelector(\"#hh\").value = newTest.main.hours;\r\n        setTestHH(newTest.main.hours);\r\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\r\n        setTestMM(newTest.main.minutes);\r\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\r\n        setTestSS(newTest.main.seconds);\r\n    }\r\n    function upload(e) {\r\n        // uploading test to db\r\n        let text = {\r\n            main: {\r\n                author: currentUser.uid,\r\n                authorName: currentUser.displayName,\r\n                categories: selectedOption,\r\n                name: testName,\r\n                description: testDescription,\r\n                visibility: visibility,\r\n                editability: editability,\r\n                background: testBackground,\r\n                gradient: testGradient,\r\n                hours: testHH,\r\n                minutes: testMM,\r\n                seconds: testSS\r\n            },\r\n            test: testArray\r\n        };\r\n        db.collection(\"tests\").add(text)\r\n            .then(result => {\r\n                console.log(\"file created in DB\");\r\n                reloadNeeded()\r\n            })\r\n            .catch(e => { console.log(\"no connectionto DB\"); })\r\n    }\r\n    function download(e) {\r\n        // download test to local hard drive\r\n        let text = JSON.stringify({\r\n            main: {\r\n                author: currentUser.uid,\r\n                authorName: currentUser.displayName,\r\n                categories: selectedOption,\r\n                name: testName,\r\n                description: testDescription,\r\n                visibility: visibility,\r\n                editability: editability,\r\n                background: testBackground,\r\n                gradient: testGradient,\r\n                hours: testHH,\r\n                minutes: testMM,\r\n                seconds: testSS\r\n            },\r\n            test: testArray\r\n        });\r\n        console.log(text)\r\n        let filename = \"test.txt\";\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n    function update(e) {\r\n        // update test inside db with new changes\r\n        setRevealAlert(true);\r\n        setAlertStyle({\r\n            variantHead: \"warning\",\r\n            heading: \"Warning\",\r\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\r\n            color1: \"danger\",\r\n            button1: \"Update\",\r\n            color2: \"secondary\",\r\n            button2: \"Cancel\"\r\n        });\r\n    }\r\n    function handleNewCategory(e) {\r\n        // getting new category through AlertMenu\r\n        setRevealAlert(true);\r\n        setAlertStyle({\r\n            variantHead: \"warning\",\r\n            heading: \"Alert\",\r\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\r\n            inputField: 'true',\r\n            inputValue: \"\",\r\n            color1: \"danger\",\r\n            button1: \"Add\",\r\n            color2: \"secondary\",\r\n            button2: \"Cancel\"\r\n        });\r\n    }\r\n    function startNewTest(e) {\r\n        // \r\n        if (testName > \"\") {\r\n            setRevealAlert(true);\r\n            setAlertStyle({\r\n                variantHead: \"info\",\r\n                heading: \"Warning\",\r\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\r\n                color1: \"danger\",\r\n                button1: \"Proceed\",\r\n                color2: \"secondary\",\r\n                button2: \"Cancel\"\r\n            });\r\n        }\r\n    }\r\n    const saveReload = (a) => {\r\n        // saves current test to localStorage in order to return back to it after reload location\r\n        if (a) {\r\n            let text = {\r\n                main: {\r\n                    author: currentUser.uid,\r\n                    authorName: currentUser.displayName,\r\n                    categories: selectedOption,\r\n                    name: testName,\r\n                    description: testDescription,\r\n                    visibility: visibility,\r\n                    editability: editability,\r\n                    background: testBackground,\r\n                    gradient: testGradient,\r\n                    hours: testHH,\r\n                    minutes: testMM,\r\n                    seconds: testSS\r\n                },\r\n                test: testArray\r\n            };\r\n            localStorage.setItem('testCopy', JSON.stringify(text));\r\n            reloadNeeded();\r\n        }\r\n    }\r\n    function StopScroll(){\r\n        // prevent scrolling\r\n        var x=window.scrollX;\r\n        var y=window.scrollY;\r\n        window.onscroll=function(){window.scrollTo(x, y);};    \r\n    }\r\n    useEffect(() => {\r\n        // reloading page with saved test\r\n        fetchCategories();\r\n        let pasteItem = JSON.parse(localStorage.getItem('testCopy'));\r\n        if ((pasteItem !== null)) getTestfromDB(pasteItem)\r\n        localStorage.removeItem('testCopy');\r\n    }, []);\r\n    return (\r\n        <div className=\"makerContainer\">\r\n            <div style={{display: 'flex', alignItems:'start', justifyContent:'center'}}>\r\n             <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onLocal={n => { console.log(\"test loaded\") }} onChange={n => getTestfromDB(n)} />\r\n            </div>\r\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\r\n            <div className='navContainer' >\r\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Test editing panel</strong></h3>\r\n\r\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\r\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128187;</button>\r\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload to web &#128228;</button>\r\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update on web &#128257;</button>}\r\n\r\n            </div>\r\n            <label className='headerStyle' >Enter test Name (keep it under 30 symbols)\r\n                    <input id=\"testName\" onChange={e => setTestName(e.target.value)} />\r\n            </label>\r\n            <br />\r\n            <label className='headerStyle' >Enter test description\r\n                    <textarea id=\"testDescription\" onChange={e => setTestDescription(e.target.value)} />\r\n            </label>\r\n            <div className=\"containerGrid\">\r\n                <section className='panel1'>\r\n                    <label >\r\n                        <select id=\"visibility\" onChange={e => setVisibility(e.target.value)} >\r\n                            <option value=\"Private\">Private</option>\r\n                            <option value=\"Public\">Public</option>\r\n                        </select>\r\n                        Is this test Private or Public?\r\n                    </label>\r\n                </section>\r\n                <section className='panel2'>\r\n                    <label >\r\n                        <select id=\"editability\" onChange={e => setEditability(e.target.value)}>\r\n                            <option value=\"Yes\">Yes</option>\r\n                            <option value=\"No\">No</option>\r\n                        </select>\r\n                        Would you allow others to edit content of test?\r\n                    </label>\r\n                </section>\r\n            </div>\r\n            {selectedOption &&\r\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red', marginLeft: '1.5%' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\r\n            }\r\n            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: \"1% 0 0 1.5%\" }} onClick={e => handleNewCategory(e)}>Add New Category</button>\r\n            <div className=\"panel2 containerGrid\">\r\n                <section className='headerStyle' >Enter time (if there are no time limit enter 0 0 0):</section>\r\n                <section className='panel1 headerStyle' style={{ float: 'left' }}>\r\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '5ch' }} onChange={e => setTestHH(e.target.value)} /> hh\r\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestMM(e.target.value)} /> mm\r\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestSS(e.target.value)} /> ss\r\n            </section>\r\n            </div>\r\n            <div className=\"containerGrid\">\r\n                <section className='panel1'>\r\n                    <label >\r\n                        <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />\r\n                        Add/change BACKGROUND to your test\r\n                </label>\r\n                    <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '98%' }}>\r\n\r\n                        <label className='headerStyle'>Enter test background image link or upload your image from computer\r\n                        <input id=\"background\" onChange={e => setTestBackground(e.target.value)} />\r\n                        </label>\r\n                        <Cloudinary getImgUrl={getImgUrl} />\r\n                    </div>\r\n                </section>\r\n                <section className='panel2'>\r\n                    <label >\r\n                        <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\r\n                    Add/change background GRADIENT to your test\r\n               </label>\r\n                    <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '98%' }}>\r\n                        <label className='headerStyle' >Enter test background gradient CSS here\r\n                        <textarea id=\"backgroundGradient\" onChange={e => setTestGradient(e.target.value)} />\r\n                        </label>\r\n                        <GetGradient reloadNeeded={saveReload} onChange={n => getGradientCSS(n)} />\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\r\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\r\n            {show &&\r\n                <div className=\"modalContainer\" style={{top: window.pageYOffset}}>\r\n                    <div className=\"closeTag\" style={{position:'absolute',top:'2%', right:'2%'}} onClick={(e) =>{ setShow(false); window.onscroll=function(){};}}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\r\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} status={\"create\"} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\r\n                </div>\r\n            }\r\n            {testArray[displayQ] &&\r\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\r\n            }\r\n          <div style={{width:'100%', marginLeft:\"10px\", pointerEvents:\"cursor\"}}>&copy; 2021 <Link to=\"/about\">Sergey Bolotnikov</Link> </div>  \r\n        </div >\r\n    )\r\n}\r\nexport default ToRenderEverything;\r\n","import React from \"react\"\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport './App.scss';\r\n// Components\r\nimport Signup from \"./components/Signup\"\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\nimport Dashboard from \"./components/Dashboard\"\r\nimport Login from \"./components/Login\"\r\nimport About from \"./components/About\"\r\nimport Logout from \"./components/Logout\"\r\nimport RedirectMain from \"./components/RedirectMain\"\r\nimport PrivateRoute from \"./components/PrivateRoute\"\r\nimport ForgotPassword from \"./components/ForgotPassword\"\r\nimport UpdateProfile from \"./components/UpdateProfile\"\r\nimport DirectTestPage from \"./components/DirectTestPage\"\r\nimport Nav from \"./components/Nav\"\r\n//Pages\r\nimport testPage from './pages/testPage';\r\nimport makeTest from './pages/makeTest';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n          <Nav />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={testPage} />\r\n            <Route exact path=\"/redirect\" component={RedirectMain} />\r\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n            <Route path=\"/signup\" component={Signup} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\r\n          </Switch>\r\n      </AuthProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n document.getElementById('root'));\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}
{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/Logout.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/alertMenu.js","components/testNav/index.js","components/LayoutBox/index.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/Footer.js","components/ChooseCategory/index.js","components/TestPopupInfo.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","components/CustomSelect.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","console","log","updateProfile","displayName","photoURL","then","catch","error","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","to","e","a","preventDefault","current","length","className","style","width","maxWidth","src","alt","onSubmit","id","margin","type","ref","required","disabled","Dashboard","toLogin","setToLogin","testsCreated","setTestsCreated","testsResultsOnRec","setTestsResultsOnRec","testsAverageScore","setTestsAverageScore","userRating","setUserRating","db","firestore","collection","where","uid","get","result","docs","map","doc","data","resArray","averageRes","i","parseFloat","score","toFixed","rate","marginTop","padding","textAlign","textDecoration","border","backgroundColor","borderRadius","whiteSpace","fontStyle","color","onClick","Login","Logout","logoutHandle","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","Cloudinary","imageSelected","setImageSelected","display","alignItems","justifyContent","marginLeft","onChange","event","target","files","formData","FormData","append","Axios","post","response","parentElement","previousSibling","getImgUrl","pictureUpload","UpdateProfile","userNameRef","userURLRef","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","document","querySelector","childNodes","variant","AlertMenu","button1Color","setbutton1Color","button2Color","setbutton2Color","Object","values","keys","indexOf","styling","color1","color2","height","position","top","window","pageYOffset","left","variantHead","heading","text","inputField","marginBottom","inputValue","onReturn","button1","button2","TestNav","timerInterval","stringTime","hours","minutes","seconds","displayTime","setDisplayTime","revealAlert","setRevealAlert","alertStyle","setAlertStyle","secondsLeft","h","m","s","stopTest","clearInterval","classList","add","querySelectorAll","forEach","userItem","onExit","questionNumberSet","n","questionNow","Number","isInteger","parseInt","qNumber","navButton","remove","decision1","zIndex","setInterval","background","fontSize","min","max","toString","right","backgroundImage","borderWidth","LayoutBox","answers","checked","checkedMarks","opacity","vis","mode","minHeight","maxHeight","minWidth","lineHeight","textShadow","question","alignContent","flexWrap","overflow","answerOption","j","choice","checkingMulti","img","backgroundRepeat","backgroundSize","LayoutSimple","innerWidth","info","alignSelf","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","gradientValue","gradient","comma","status","layout","ch","GetResults","testRecords","setTestsRecords","resultsData","testId","querySnapshot","sort","b","time","fetchData","test","ResultsDisplay","testeeName","setTesteeName","testeeId","handleDont","location","assign","timeInSeconds","t","split","res","userId","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","visible","setVisible","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","answersSet","rights","concat","wrongs","positions","local","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollpased","imgDisplay","setImgDisplay","handleNavCollpase","imgLink","float","Footer","bottom","ChooseCategory","backgroundPosition","TestPopupInfo","author","description","questionsTotal","onRes","GetTests","testRecordsDisplay","setTestsRecordsDisplay","revealInfo","setRevealInfo","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","categoriesLayout","setCategoriesLayout","setChecked","testFromDB","setTestFromDB","checkEditLocalTestVisible","setCheckEditLocalTestVisible","testInfo","setTestInfo","arrTemp","forPage","filter","editability","visibility","nameA","toUpperCase","nameB","fetchCategories","label","option","recordSet","chosenRec","tempArr","findIndex","c","index","x","getChoosenTests","recId","getAttribute","handleLink","elementPos","objFound","authorName","handleDelete","clientY","item","positionY","handleHover","cursor","handleClick","evt","f","r","FileReader","onload","parse","onLocal","readAsText","alert","readSingleFile","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","l","getTestfromDB","GetText","answer","answerText","setAnswerText","setImgLink","checkBox","setCheckBox","sendBack","num","cor","changeInput","changeImage","GetAnswers","setAnswers","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","isSelected","control","styles","singleValue","isDisabled","transition","CustomSelect","options","isMulti","closeMenuOnSelect","isSearchable","demoArr","emptyQ","defOptionArray","testName","setTestName","testDescription","setTestDescription","authorId","testAuthor","setTestAuthor","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","reload","newTest","removeItem","set","newItem","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","upload","size","getGradientCSS","oldArray","record1","handleMove","slice","handleShow","handleUpdateQuestion","questCopy","handleInsertQuestion","pointerEvents","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","exact","path","makeTest","testPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a9e5b892.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    if (passwordRef.current.value.length < 6) {\r\n      return setError(\"Passwords should be at least 6 symbols long\")\r\n    }\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n      setToRoot(true);\r\n\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n\r\n          <h2 className=\"header1\">Sign Up\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n                    <input id=\"password-confirm\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordConfirmRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Already have an account? <Link className=\"links\" to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport firebase from \"../firebase\";\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\n function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const [toLogin, setToLogin] = useState(false);\r\n  const [testsCreated, setTestsCreated] = useState(0);\r\n  const [testsResultsOnRec, setTestsResultsOnRec] = useState(0); \r\n  const [testsAverageScore, setTestsAverageScore] = useState(0);\r\n  const [userRating, setUserRating] = useState('BeginnerQuizer');\r\n  const db = firebase.firestore();\r\n\r\n  \r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      setToLogin(true);\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n  function fetchTestsCreatedData()  {\r\n     db.collection(\"tests\").where(\"main.author\", \"==\", currentUser.uid).get()\r\n    .then(result=>{setTestsCreated(result.docs.map(doc => ({ ...doc.data() })).length)})\r\n    .catch(e=>{console.log('fail to get tests for user')})\r\n\r\n  }\r\n  function fetchTestsResultsData()  {\r\n    db.collection(\"results\").where(\"userId\", \"==\", currentUser.uid).get()\r\n   .then(result=>{\r\n     let resArray=result.docs.map(doc => ({ ...doc.data() }));\r\n     let averageRes=0;\r\n     console.log(resArray)\r\n     for (let i=0; i<resArray.length;i++){\r\n       averageRes+=parseFloat(resArray[i].result)  \r\n     }\r\n     let score=0;\r\n     if (resArray.length>0) score=(averageRes/resArray.length).toFixed(3)\r\n    setTestsAverageScore(score); \r\n    setTestsResultsOnRec(resArray.length)\r\n    let rate='';\r\n    if (score<=100) rate='DiamondQuizer';\r\n    if (score<=90) rate='GoldQuizer';\r\n    if (score<=80) rate='SilverQuizer';\r\n    if (score<=70) rate='BronzeQuizer';\r\n    if (score<=60) rate='BeginnerQuizer';\r\n    setUserRating(rate)\r\n  }).catch(e=>{console.log('fail to get user results')})\r\n\r\n }\r\n  useEffect(() => {\r\n    if (toLogin === true) { return <Redirect to=\"/login\" /> }\r\n    fetchTestsCreatedData();\r\n    fetchTestsResultsData();\r\n}, []);\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '6%' }}>\r\n        <div className='registeCard' style={{ padding: '.75em' }}>\r\n          <h2 className=\"header1\">Welcome\r\n          <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <img style={{ width: '60%', margin: '3% 15%' }} src={currentUser.photoURL > \"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"} alt=\"profile pic\" />\r\n          <h2 className=\"divStyle\" style={{ textAlign: 'center', width: '100%', maxWidth: '23ch', margin: 'auto' }}> <strong>@</strong>{currentUser.displayName}</h2>\r\n          <h6 className=\"divStyle\" style={{ textAlign: 'center', textDecoration: 'underline' }} >   {currentUser.email} </h6>\r\n        </div>\r\n        <table style={{ width: '97%',border:\"1px solid white\",backgroundColor: 'white', borderRadius: '10px', margin:\"3% auto\"  }} >\r\n                   \r\n                    <tbody >\r\n                    {/* borderBottom: '1px solid lightgrey',   */}\r\n                                <tr style={{backgroundColor: 'white'}}>\r\n                                    <td ><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz created:</div></td>\r\n                                    <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsCreated}</span></td>\r\n                                </tr>\r\n                                <tr style={{backgroundColor: 'white'}}>\r\n                                    <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz results on file:</div></td>\r\n                                    <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsResultsOnRec}</span></td>\r\n                                </tr>\r\n                                <tr style={{backgroundColor: 'white'}}>\r\n                                    <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Average Quiz rated:</div></td>\r\n                                    <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsAverageScore}%</span></td>\r\n                                </tr>\r\n                                <tr style={{backgroundColor: 'transparent'}}>\r\n                                 <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\", color:'transparent' }}> quiz</div></td>\r\n                                </tr>\r\n                                <tr style={{backgroundColor: 'lightgrey'}} >\r\n                                    <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Your rate:</div></td>\r\n                                    <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{userRating}</span></td>\r\n                                </tr>\r\n                            \r\n                    </tbody>\r\n                </table>\r\n                <button className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} onClick={handleLogout}>\r\n                Log Out\r\n            </button>        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Dashboard","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      // history.push(\"/test-editor/\")\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n      <div className='mainContainer'>\r\n        <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n          <div className='registeCard'>\r\n            <h2 className=\"header1\">Log In\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /> </h2>\r\n            {error && <label className='alertStyle'>{error}</label>}\r\n            <form onSubmit={handleSubmit}>\r\n              <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n              </label>\r\n              <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n              </label>\r\n              <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n                Log In\r\n            </button>\r\n            </form>\r\n            <div className=\"divStyle\">\r\n              <Link className=\"links\" to=\"/forgot-password\">Forgot Password?</Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"divStyle\">\r\n            Need an account? <Link className=\"links\" to=\"/signup\">Sign Up</Link>\r\n          </div>\r\n          <div className=\"divStyle\">\r\n            Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Password Reset\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          {message &&<label className='successStyle'>{message}</label> }\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Reset Password\r\n            </button>\r\n          </form>\r\n          <div className=\"divStyle\">\r\n            <Link to=\"/login\" className=\"links\" >Login</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link to=\"/signup\"className=\"links\" >Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div style={{display:'flex', alignItems:'center', justifyContent:'start', marginLeft:'2%', maxWidth:'600px'}}>\r\n            <input type='file' style={{width:'48%'}} onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button testNav\" onClick={(e)=>{pictureUpload(e)}}>Upload Image</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef = useRef()\r\n  const userURLRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const getImgUrl = (url) => {\r\n    document.querySelector(\"#userURL\").childNodes[1].value = url;\r\n    userURLRef.current.value = url;\r\n    console.log(userURLRef.current.value)\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value !== currentUser.displayName) || (userURLRef.current.value !== currentUser.photoURL)) {\r\n      promises.push(updateUser(userNameRef.current.value, userURLRef.current.value))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUDNAME);\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUD_PRESET);\r\n  }, [])\r\n\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '5%' }}>\r\n        <div className='registeCard' >\r\n          <h2 className=\"header1\">Update Profile\r\n          <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >User's Name (keep it shorter then 20 symbols please)\r\n                <input id=\"userName\" type=\"text\" ref={userNameRef} defaultValue={currentUser.displayName} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle' id=\"userURL\" >User's picture link\r\n                <input type=\"text\" ref={userURLRef} defaultValue={currentUser.photoURL} />\r\n              <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\r\n            </label>\r\n            <label className='headerStyle'  >Email\r\n              <input id=\"email\" type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n              <input id=\"password\" type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n              <input id=\"password-confirm\" type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '2% auto' }} type=\"submit\">\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          <Link to=\"/\" className=\"links\" >Cancel</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React,{ useEffect, useState } from \"react\"\r\nvar variant = {\r\n  'danger': {\r\n    'color': '#721c24',\r\n    'backgroundColor': '#f8d7da',\r\n    'borderColor': '#f5c6cb'\r\n    \r\n  },\r\n  'success': {\r\n    'color': '#155724',\r\n    'backgroundColor': '#d4edda',\r\n    'borderColor': '#c3e6cb'\r\n   },\r\n   'secondary': {\r\n    'color': '#383d41',\r\n    'backgroundColor': '#e2e3e5',\r\n    'borderColor': '#d6d8db'\r\n  },\r\n  'warning': {\r\n    'color': '#856404',\r\n    'backgroundColor': '#fff3cd',\r\n    'borderColor': '#ffeeba'\r\n  },\r\n  'info': {\r\n    'color': '#0c5460',\r\n    'backgroundColor': '#d1ecf1',\r\n    'borderColor': '#bee5eb',\r\n  },\r\n  '': {},\r\n}\r\nexport default function AlertMenu(props) {\r\n  const [button1Color, setbutton1Color]=useState('');\r\n  const [button2Color, setbutton2Color]=useState('');\r\n  useEffect(() => {\r\n    setbutton1Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color1)].color);\r\n    setbutton2Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color2)].color);\r\n}, []);\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh',position:'absolute',top: window.pageYOffset,left:0, display:'flex', justifyContent:'center', alignItems:'center' }} >\r\n      <div className='alertContainer'>\r\n        <label className='alertItemStyle' style={Object.values(variant)[Object.keys(variant).indexOf(props.styling.variantHead)]}>{props.styling.heading}</label>\r\n        <h5 className=\"alertItemStyle\">{props.styling.text}</h5>\r\n        {props.styling.inputField && <input id=\"inputField\" style={{ width: \"100%\", marginBottom: \"10px\" }} defaultValue={props.inputValue} />}\r\n        {(props.styling.color1!==\"\") && <button className='alertItemStyle' style={{backgroundColor:button1Color, color:'white'}} onClick={e => { props.onReturn(props.styling.button1, (props.styling.inputField ? document.querySelector(\"#inputField\").value : null)); }}>\r\n          {props.styling.button1}\r\n        </button>}\r\n        {(props.styling.color2!==\"\") &&<button className=\"alertItemStyle\" style={{backgroundColor:button2Color, color:'white'}} onClick={e => { props.onReturn(props.styling.button2) }}>\r\n          {props.styling.button2}\r\n        </button>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { Fragment, useState } from 'react';\nimport AlertMenu from '../alertMenu';\nfunction TestNav(props) {\n    var timerInterval\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Finish\") { \n           stopTest();\n        }\n    }\n    function timerDraw(event) {\n        let seconds = props.seconds;\n        let minutes = props.minutes;\n        let hours = props.hours;\n        questionNumberSet('0');\n        event.preventDefault();\n        if ((seconds !== 0) || (minutes !== 0) || (hours !== 0)) {\n            timerInterval = setInterval(function () {\n                secondsLeft--;\n                if (seconds === 0) {\n                    seconds = 59;\n                }\n                else seconds--;\n                if (seconds === 59) {\n                    if (minutes === 0) {\n                        minutes = 59;\n                        hours--;\n                    } else minutes--;\n                }\n                setDisplayTime(stringTime(hours, minutes, seconds));\n                if ((secondsLeft === 0)) {\n                    clearInterval(timerInterval);\n                    document.querySelector(\".testNav\").classList.add('invisible');\n                    props.onExit(\"00:00:00\");\n                }\n\n            }, 1000);\n        }\n    };\n    function stringTime(h, m, s) {\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\n    }\n    function stopTest() {\n        clearInterval(timerInterval);\n        console.log('end')\n        document.querySelector(\".testNav\").classList.add('invisible');\n        let navButton = document.querySelectorAll(\".testNav\");\n        navButton.forEach(function (userItem) {\n            userItem.classList.add('invisible');\n        });\n        props.onExit(displayTime);\n    }\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else {\n                    questionNow.value = 1;\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Would you like to finish the test?`,\n                        color1: \"danger\",\n                        button1: \"Finish\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                }\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                navButton = document.querySelectorAll(\".testNavLight\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    return (\n        <Fragment>\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <button className=\"testNav\" id=\"startNav\" style={{ position: 'absolute', top: '44vh', left: \"43vw\", zIndex: '200' }}\n                onClick={timerDraw}>Start</button>\n            <button className=\"testNav invisible\" style={{ position: \"absolute\", top: '48vh', left: 0, background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <label className=\"testNav invisible\" style={{position: \"absolute\",top:'0',left:'0', margin:'1.25vh 1vw', fontSize: 'calc(10px + 1vw)', zIndex: 1500 }} >\n                <input className=\"testNavLight invisible\" style={{ width: '3ch', fontSize: 'calc(10px + 1vw)' }} type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n                of {props.qNumber}</label>\n            <button className=\"testNav invisible \" style={{ position: \"absolute\", top: '48vh', right: 0, background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n\n            <label className=\"testNav invisible\" style={{ position: \"absolute\", background: \"transparent\", top: 0, left: '38vw', width: '8ch', zIndex: 1500 }}>{displayTime}</label> \n            <button className=\"testNav invisible\" id=\"finishBtn\"  style={{ position: \"absolute\", top: 0, right: 0,marginTop:'1.25vh', backgroundImage:`url(${process.env.PUBLIC_URL + \"/icons/finish.svg\"})`,width: \"9vh\", height: \"3vh\", borderWidth: '0px',borderRadius:'5px', zIndex: 1500 }}\n                onClick={stopTest}></button>\n\n        </Fragment>\n    );\n}\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst LayoutBox = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n    },[props.answers]);\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n            <div id='questionContainerBox' style={{ opacity: props.vis}}>\n                <section className=\"questionSection\">\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color:'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin:'auto',\n                            textAlign:\"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n              \n                </section>\n                <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-between',alignContent:'center', flexWrap: 'wrap', width: '99%', overflow:'visible' }}>\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{width:'49%',minHeight:'22%', maxHeight: '200px', maxWidth:'200px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Box\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n            </div>\n        </Fragment>\n    );\n}\nexport default LayoutBox;","import React, { useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nfunction LayoutSimple(props) {\n\n    useEffect(() => {\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n        \n    }, [props.answers]);\n    function checkingMulti(e) {\n        if (props.info.correct === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <div id='questionContainerSimple' style={{ opacity: props.vis}}>\n            <section className=\"questionSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\n                <div style={{width:'100%',display: 'flex',justifyContent:'center', alignItems: 'center', height: window.innerWidth < 700 ? '30%' : '70%' }}>\n                    <img src={props.info.img} style={{ height:'100%', alignSelf:'center'}} alt={props.info.img} />\n                </div>\n                <div style={{width:'100%', height: window.innerWidth < 700 ? '70%' : '30%' }}>\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color: 'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin: 'auto',\n                            textAlign: \"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n                </div>\n            </section>\n            <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'visible' }}>\n                {props.answers.map((answerOption, j) => {\n                    return (\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256} mode='multi'\n                                    min={10}\n                                    style={{\n                                        minHeight: \"95%\",\n                                        maxHeight: \"95%\",\n                                        minWidth: \"95%\",\n                                        maxWidth: \"95%\",\n                                        lineHeight: 1,\n                                        textAlign: \"center\",\n                                        textShadow: '1px 1px 2px black'\n                                    }}>{answerOption.text}</Textfit>\n                            </div>\n                        </label>\n                    )\n                })}\n            </section>\n        </div>\n    );\n}\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\nimport LayoutBox from '../../components/LayoutBox';\nimport LayoutSimple from '../../components/LayoutSimple';\nconst QuestionDisplay = props => {\n    const [backgroundVal,setBackgroundVal]= useState('')\n    useEffect(() => {\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\n        setBackgroundVal(gradientValue+comma+backgroundValue);\n        console.log(props.question)\n    }, []);\n    return (\n            <div id='questionDisplayContainer' className={`${(props.status==='test') ? \"noScroll\" : \"\"}`} style={{backgroundImage:backgroundVal}}>\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}    \n            </div>\n    );\n}\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nfunction GetResults(props) {\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    useEffect(() => {\n        let resultsData = []\n        const fetchData = async () => {\n\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    resultsData.push(doc.data());\n                });\n                resultsData.sort(function (a, b) {\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\n                });\n                setTestsRecords(resultsData);\n            });\n\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\n        };\n        fetchData();\n        console.log(testRecords);\n\n    }, [])\n\n    return (\n        <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n            <table style={{ margin:'auto' }} >\n                <tr>\n                    <th>Name</th>\n                    <th>Result</th>\n                    <th>Time Left</th>\n                </tr>\n                <tbody>\n                {testRecords && testRecords.map((test, j) => {\n                    return (\n                        <tr key={j}>\n                            <td key={\"name\"+j}>{test.displayName}</td>\n                            <td key={\"result\"+j}>{test.result}</td>\n                            <td key={\"time\"+j}>{test.time}</td>\n                        </tr>\n\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default GetResults;","import React, { useState, useRef } from 'react';\nimport firebase from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport GetResults from \"../getResults\";\nconst ResultsDisplay = props => {\n    const { currentUser } = useAuth()\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\n    function handleSave() {\n        const db = firebase.firestore();\n        db.collection(\"results\").add({\n            testId: props.testId,\n            displayName: testeeName,\n            userId: testeeId.current,\n            result: props.rate,\n            time: timeInSeconds(props.time)\n        }).then(result=>{handleDont()})\n        .catch(e=>{console.log('fail to record result')})\n        \n    }\n    function handleDont() {\n        window.location.assign(process.env.PUBLIC_URL + '/#/');\n        console.log(\"redirect to /test\")\n        // setToTest([true]);\n    }\n    function timeInSeconds(t) {\n        let time = t.split(':');\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\n    }\n    return (\n\n        <div style={{ display: 'flex', flexWrap: 'wrap', width: '100%', height: '100vh', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '1px 1px #f5d142',\n         backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' , backgroundSize: '100% 100%' }}>\n           {props.testId.length > 0 &&  <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\n           {props.testId.length > 0 && <GetResults testId={props.testId} />}\n           {/* <button className=\"testNav\" style={{position:\"absolute\", top:0,right:0, background:\"transparent\",borderWidth:'0px', zIndex:1500}}\n                    onClick={e => handleDont(e)}>\n                        <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:\"4vh\",height:\"4vh\"}}/>\n                        </button>   */}\n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\n             <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\"}}>\n             <table style={{ margin: 'auto' }} >\n                    <tr>\n                        <th>Question</th>\n                        <th>Result</th>\n                    </tr>\n\n                    {props.res.map((res, j) => {\n                        return (\n                            <tr key={\"n\"+j}>\n                                <td key={\"num\"+j} >{j + 1}</td>\n                                <td key={\"correct\"+j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            </div>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\n\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\n            </label>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</button>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</button>}\n            <div style={{display: 'flex', width: '100%',justifyContent: 'center'}}>\n            {props.testId.length <= 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</button>}\n            </div> \n        </div>\n    );\n}\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\nimport TestNav from '../testNav';\nimport QuestionDisplay from '../QuestionDisplay';\nimport ResultsDisplay from '../ResultsDisplay';\nimport \"./style.css\";\n\nfunction TestRun(props) {\n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\n  var testBackground = props.test.main.background;\n  var quizMain = props.test.test;\n  var test = [];\n  var choiceSet = [];\n  const [displayQ, setDisplayQ] = useState(0);\n  const [resultTime, setResultTime] = useState('');\n  const [choices, setChoices] = useState([]);\n  const [results, setResults] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [visible, setVisible] = useState(0);\n  const [testGenerated, setTestGenerated] = useState('');\n  function randomizer(arr) {\n\n    let testArray = [];\n    let answerCount = arr.length;\n    let positionN = 0;\n    for (let i = 0; i < answerCount; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n\n    }\n    return testArray\n  }\n\n  function randomChoice(arr, n) {\n\n    let testArray = [];\n    let positionN = 0;\n    for (let i = 0; i < n; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n    }\n    return testArray\n  }\n  function handleChoices(ch) {\n    let localChoices = choices;\n    localChoices.splice(displayQ, 1, ch);\n    console.log(localChoices);\n    setChoices(localChoices);\n\n  }\n  function handleChangeQuestion(q) {\n    if (q > 0) { setDisplayQ(q - 1) }\n    else {\n      setDisplayQ(q);\n      setVisible(1);\n\n    }\n  }\n  function correctAnswers() {\n    let arr = [];\n    let arrSmall = [];\n    for (let i = 0; i < testGenerated.length; i++) {\n      arrSmall = [];\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\n      }\n      arr.push(arrSmall)\n    }\n    return arr\n  }\n  function handleQuizEnd(t) {\n    let arr = [];\n    let n = 0;\n    console.log(t);\n    let correctArr = correctAnswers();\n    setVisible(0);\n    for (let i = 0; i < correctArr.length; i++) {\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\n      if (arr[i] === true) n += 1\n    }\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\n    setRating(((n / correctArr.length * 100).toFixed(2)));\n    setResults(arr);\n    setResultTime(t);\n    console.log(results)\n  }\n\n  useEffect(() => {\n    console.log(props.test.id)\n    let answersSet = [];\n    for (let i = 0; i < quizMain.length; i++) {\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\n      answersSet = randomizer(answersSet);\n\n      test.push({\n        \"info\": quizMain[i].info,\n        \"question\": quizMain[i].question,\n        \"answers\": answersSet,\n      })\n      choiceSet.splice(0, 0, [])\n\n    }\n    setChoices(choiceSet);\n    setTestGenerated(test);\n  }, []);\n useEffect(()=>{\n  (results.length > 0) ? document.querySelector(\"nav.navbar\").style.display = 'flex' :document.querySelector(\"nav.navbar\").style.display = 'none';\n },[results]);\n\n\n  return (\n    <>\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testId={props.local?\"\":props.test.id} />}\n      {testGenerated && results.length <= 0 && \n      <div  style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\n      <TestNav  qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\n      </div>\n      }\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient} status={\"test\"}  info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\n    </>\n  )\n}\n\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\nimport firebase from \"../firebase\";\nimport { useParams } from 'react-router-dom'\nimport TestRun from './TestRun'\nexport default function DirectTestPage() {\n  // http://localhost:3000/taketest/DDKOWkpHKTC3l2Aav7bC\n  const [test, setTest] = useState({});\n  const [loading, setLoading] = useState(false)\n  const db = firebase.firestore();\n  let { id } = useParams();\n  useEffect(() => {\n    db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\n\n      setTest({ ...querySnapshot.data(), id: id });\n      setLoading(true);\n    })\n      .catch(error => {\n        console.log(error)\n      })\n\n\n\n  }, [])\n  return (\n    <>\n      {loading && <TestRun test={test} local={false} />}\n    </>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport  \"./Nav.scss\";\n\n\nfunction Nav(props) {\n    const [isNavCollapsed, setIsNavCollpased] = useState(true);\n    const { currentUser } = useAuth();\n    const [imgDisplay, setImgDisplay] = useState('');\n    \n    function handleNavCollpase() {\n        setIsNavCollpased(!isNavCollapsed)\n    }\n    useEffect(() => {\n        let imgLink =  process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\n        else{\n            setImgDisplay(imgLink)\n        }\n        \n    }, [currentUser]);\n    useEffect(()=>{\n        if(window.innerWidth<1000){\n        if (isNavCollapsed){\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"block\";\n        }\n    }\n\n    },[isNavCollapsed]);\n    useEffect(()=>{\n        if (window.innerWidth>=1000){\n            document.querySelector(\"#navbarNav\").style.display=\"flex\";\n            document.querySelector(\"#navbarNav\").style.justifyContent=\"center\";\n            document.querySelector(\"#navbarNav\").style.width=\"83%\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n       \n\n    },[window.innerWidth]);\n\n    return (\n        <nav className=\"navbar\" >\n            \n            {window.innerWidth<1000 ? <Link to=\"/update-profile\"><img className=\"member-photo\" src={imgDisplay} alt=\"avatar\"/></Link>\n             :<Link to=\"/\" className=\"navHeader\"> <img src={ process.env.PUBLIC_URL+\"/icons/logoName.svg\"} alt=\"close\" style={{width:'1.5em',height:'2em'}}/></Link> }\n\t\t\t{window.innerWidth<1000 ? <Link to=\"/\" className=\"navHeader\"> \n            Quiz Land</Link> : null}\n            {window.innerWidth<1000 ? <span id=\"navbar-toggler\"  onClick={handleNavCollpase}>\n                <div style={{ width: '1em', height: '1em',float:'center' }}>\n                   {isNavCollapsed ? \n                     <img src={ process.env.PUBLIC_URL+\"/icons/burger.svg\"} alt=\"open\" /> :\n                    <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" />}\n                </div>\n            </span>: null}\n            \n                <ul id=\"navbarNav\">\n\n\n                   {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Login\n                        </Link>\n\n                    </li>}\n                    {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Signup\n                    </Link>\n\n                    </li>}\n\n                    <li className=\"nav-item\">\n                        <Link to=\"/test\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Take tests\n                    </Link>\n                    </li>\n                   {  currentUser && <li className=\"nav-item\">\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Manage tests\n                    </Link>\n                    </li>}\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            About\n                    </Link>\n                    </li>\n                    {  currentUser && <li className=\"nav-item\">\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollpase()} >\n                            Logout\n                    </Link>\n                    </li>}\n                </ul>\n            \n\n            {window.innerWidth<1000 ? null: <Link to=\"/update-profile\">\n               <img className=\"member-photo\"  src={imgDisplay} alt=\"member avatar\"/>\n            </Link>}\n        </nav>\n    );\n}\n\nexport default Nav;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n<div style={{position:'absolute',left:0, bottom:0,zIndex: '1600',width:'100%', marginLeft:\"10px\",textShadow:\"2px 2px white\"}}\r\n    // display:flex;\r\n    // justify-content: space-between;\r\n    // align-content: center;}}\r\n    >\r\n&copy; 2021 Sergey Bolotnikov\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Fragment, useEffect } from 'react';\nimport \"./style.scss\";\nconst ChooseCategory = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i <props.answers.length; i++) {\n            document.querySelector(\"#category_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#category_\" + i).checked = true;\n        }\n        console.log(props.answers)\n    },[]);\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#category_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#category_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n                <section className=\"categoriesSection\" >\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelCat\" + j} style={{width:'47%',maxHeight:'180px', maxWidth:'180px', margin:'5px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputCat\" + j} id={\"category_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '25% 25%',backgroundPosition: 'right top' }}>\n                                    <div className=\"tickmark\" key={\"divCat\" + j}> </div>\n                                    <div className=\"name2\" key={\"div2Cat\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n        </Fragment>\n    );\n}\nexport default ChooseCategory;","import React from \"react\"\r\nexport default function TestPopupInfo(props) {\r\n    return (\r\n        // {author: \"\", description:\"\", name:\"\", questionsTotal: 0}\r\n        <div style={{ width: '100vw', height: '100vh',position:'absolute',top: window.pageYOffset, left:0, display:'flex', justifyContent:'center', alignItems:'center'  }} >\r\n            <div className='alertContainer'>\r\n                <h3 className=\"alertItemStyle\"><strong>{props.test.name}</strong></h3>\r\n                <p className=\"alertItemStyle\"><strong>Author:</strong> {props.test.author}</p>\r\n                <p className=\"alertItemStyle\"><strong>Description:</strong> {props.test.description}</p>\r\n                <p className=\"alertItemStyle\"><strong>Question amount:</strong> {props.test.questionsTotal}</p>\r\n                <button className=\"alertItemStyle\" style={{ backgroundColor: '#d1ecf1', color: '#0c5460' }} onClick={e=>{ \r\n                    console.log('click'); props.onRes('')}}>\r\n                    Close\r\n        </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport ChooseCategory from \"../components/ChooseCategory\";\nimport TestPopupInfo from \"../components/TestPopupInfo\"\nimport { Link } from \"react-router-dom\";\nfunction GetTests(props) {\n    const db = firebase.firestore();\n    const { currentUser } = useAuth();\n    const [testRecords, setTestsRecords] = useState([]);\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [revealInfo, setRevealInfo] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [categories, setCategories] = useState([]);\n    const [categoriesLayout, setCategoriesLayout] = useState([]);\n    const [checked, setChecked] = useState([]);\n    const [testFromDB, setTestFromDB] = useState({});\n    const [checkEditLocalTestVisible, setCheckEditLocalTestVisible] = useState(false);\n    const [testInfo, setTestInfo] = useState({});\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('tests').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    props.reloadNeeded(true);\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n        if (decision1 === \"Proceed\") {\n            props.onChange(testFromDB);\n            props.onLocal(false);\n        }\n    }\n    function handleLink(e) {\n        let recId = e.target.getAttribute(\"value\");\n        console.log(recId)\n        setAlertStyle({\n            variantHead: \"success\",\n            heading: \"Direct link to Test\",\n            text: `https://sbolotnikov.github.io/test-editor/#/taketest/${recId}`,\n            color1: \"\",\n            button1: \"\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\n        let objFound = testRecords[elementPos];\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleHover(t) {\n        console.log(t.clientY);\n        let test = testRecords.filter(item => item.id === t.target.getAttribute(\"value\"))[0];\n        setTestInfo({\n            author: test.main.authorName,\n            description: test.main.description,\n            name: test.main.name,\n            questionsTotal: test.test.length,\n            positionY: t.clientY + 5\n        })\n        setRevealInfo(true);\n\n    }\n    function handleClick(test) {\n        console.log(test.target.getAttribute(\"value\"))\n        if (props.forPage === 'create') {\n            setAlertStyle({\n                variantHead: \"danger\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n            setRevealAlert(true);\n            setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0])\n        } else { props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0]) }\n    }\n    const fetchData = async () => {\n        let arrTemp = [];\n        const data = await db.collection(\"tests\").get();\n        if (props.forPage === 'create')\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\n        else\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        console.log(arrTemp)\n        setTestsRecords(arrTemp);\n        setTestsRecordsDisplay(arrTemp);\n    };\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setCategories(arrTemp);\n        arrTemp = arrTemp.map(option => { return ({ 'text': option.value, img: process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\" }) });\n        console.log(arrTemp)\n        setCategoriesLayout(arrTemp);\n    };\n    function getChoosenTests(ch) {\n        setChecked(ch);\n        (ch.length > 0) ? setSelectedOption(categories.filter((n, j) => ch.indexOf(j) > -1)) : setSelectedOption(categories)\n    }\n    function readSingleFile(evt) {\n        var f = evt.target.files[0];\n        if (f) {\n            var r = new FileReader();\n            r.onload = function (e) {\n                setTestFromDB(JSON.parse(e.target.result));\n                if (props.forPage === 'create') {\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                        color1: \"danger\",\n                        button1: \"Proceed\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                } else {\n                    props.onChange(JSON.parse(e.target.result));\n                    props.onLocal(true);\n                }\n                // setLocalTest(true)\n            }\n            r.readAsText(f);\n\n        } else {\n            alert(\"Failed to load file\");\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        fetchData();\n    }, []);\n    useEffect(() => {\n        let recordSet = testRecords;\n        let chosenRec = [];\n        console.log(selectedOption);\n        if (selectedOption) {\n            for (let i = 0; i < selectedOption.length; i++) {\n                let tempArr = [];\n                for (let j = 0; j < recordSet.length; j++) {\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\n                }\n                chosenRec = chosenRec.concat(tempArr);\n            }\n        }\n        // exclude duplicates in Array  \n        chosenRec = chosenRec.filter((c, index) => {\n            return chosenRec.map(x => x.id).indexOf(c.id) === index;\n        });\n        setTestsRecordsDisplay(chosenRec);\n    }, [selectedOption])\n    return (\n        <div style={{ width: '100%', maxWidth: \"600px\", height: \"40vh\", margin: '10% 0%' }}>\n        {revealInfo && <TestPopupInfo test={testInfo} onRes={e=>{\n             setRevealInfo(false); console.log('close')}\n        }/>}\n            {categoriesLayout &&\n                <ChooseCategory type={categoriesLayout.length} answers={categoriesLayout} checkedMarks={checked} onChange={(ch) => { getChoosenTests(ch) }} />\n            }\n            {testRecordsDisplay && <div style={{ width: '97%', height: '45%', overflow: 'auto', margin: '0' }}>\n                <table style={{ width: '100%' }} >\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th style={{ backgroundColor: 'white', borderRadius: '5px' }} >DISCOVER TESTS</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {testRecordsDisplay.map((test, j) => {\n                            return (\n                                <tr key={\"divTests\" + j} >\n                                    <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: '#0c5460', margin: '4%' }} key={\"linkBtnTests\" + j} value={test.id} onClick={e => handleLink(e)}>Link &#128279;</button>\n                                        {(props.forPage === 'create') &&\n                                            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: '#721c24', margin: '4%' }} key={\"eraseBtnTests\" + j} value={test.id} onClick={e => handleDelete(e)}>Del <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(.9vw,10px)', height: 'max(.9vw,10px)' }} /></button>\n                                        }\n                                    </td>\n                                    <td style={{ backgroundColor: 'white', borderRadius: '5px' }}><div key={\"textTests\" + j} className='testText' value={test.id} onClick={e => handleHover(e)}  style={{ cursor: \"pointer\", whiteSpace: 'wrap', textAlign: 'center', border: 0, width: \"100%\" }}>{test.main.name} <span value={test.id} style={{ fontStyle: 'oblique', color: '#554FA7' }}>@{test.main.authorName}</span></div></td>\n                                    <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: 'white', color: '#554FA7', }} key={\"playBtnTests\" + j} value={test.id} onClick={e => handleClick(e)}><img src={(props.forPage === 'create') ? process.env.PUBLIC_URL + \"/icons/EditIcon.svg\" : process.env.PUBLIC_URL + \"/icons/Play.svg\"} value={test.id} alt={(props.forPage === 'create') ? \"edit\" : \"play\"} style={{ width: 'max(4vw,25px)', height: 'max(4vw,25px)' }} />{(props.forPage === 'create') ? 'Edit' : 'Play'}</button></td>\n                                </tr>\n                            )\n                        }\n                        )} \n                    </tbody>\n                </table>\n            </div>}\n            {currentUser && <label >\n                <input type=\"checkbox\" id=\"checkEditLocalTest\" style={{ margin: '5% 2%' }} onChange={e => setCheckEditLocalTestVisible(document.querySelector(\"#checkEditLocalTest\").checked)} />\n              Load local test from your disk\n              </label>}\n            {currentUser && checkEditLocalTestVisible && <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />}\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {/* {(props.forPage === 'test') && <Link to=\"/taketest/RtqxyubO57LToxbaOzpj\">\n                <button className=\"btnNav\">\n                    Take Demo Test\n              </button>\n            </Link>} */}\n        </div>\n    );\n}\nexport default GetTests;","import React, { useState } from 'react';\nimport TestRun from '../../components/TestRun';\nimport GetTests from '../../components/getTests';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport \"./style.css\";\n\n\nfunction ToRenderEverything() {\n\n  const [testLoad, setTestLoad] = useState(false);\n  const [localTest, setLocalTest] = useState(false);\n  const { currentUser } = useAuth()\n\n  function getTestfromDB(n) {\n    console.log(n)\n    setTestLoad(n);\n  }\n  return (\n    <div className=\"testContainer\">\n      {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onLocal={l => setLocalTest(l)} onChange={n => getTestfromDB(n)} />}\n      {testLoad && <TestRun test={testLoad} local={localTest} />}\n    </div>\n  )\n}\n\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\nimport Cloudinary from './Cloudinary';\nfunction GetText(props) {\n    const [answerText, setAnswerText] = useState(props.answer.text);\n    const [imgLink, setImgLink] = useState(props.answer.img);\n    const [checkBox, setCheckBox] = useState();\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        setImgLink(url);\n        sendBack(answerText, url);\n    }\n    function changeInput(e) {\n        setAnswerText(e.target.value)\n        sendBack(e.target.value, imgLink);\n    }\n    function changeImage(e) {\n        setImgLink(e.target.value);\n        console.log(imgLink)\n        sendBack(answerText, e.target.value);\n    }\n    function sendBack(a, b) {\n        let choice = {\n            text: a,\n            img: b,\n            num: props.num\n        };\n        props.onChange(choice);\n    }\n    useEffect(() => {\n        setAnswerText(props.answer.text);\n        if (props.answer.img.length > 0) {\n            setCheckBox(true);\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\n            setImgLink(props.answer.img);\n        } else {\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\n            setCheckBox(false);\n        }\n    }, [props.answer]);\n    return (\n            <div >\n                <textarea style={{ width: '100%' }} value={answerText} onChange={e => changeInput(e)} />\n                <label style={{ color: 'black', width: '100%' }}>\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\n                check to add image link</label>\n                {checkBox && <div>\n                    <input type=\"text\" style={{ width: '80%', opacity: checkBox }} value={imgLink} onChange={e => changeImage(e)} />\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                </div>}\n            </div>\n    );\n}\nexport default GetText;","import React, { useEffect, useState } from 'react';\nimport GetText from './GetText.js';\n\nfunction GetAnswers(props) {\n    function handleNewText() {\n        let emptyNew = { text: '', img: '', choice: props.correct };\n        props.onNew(emptyNew);\n    }\n    function handlePasteText(){\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\n        if (pasteItem===null) return\n        pasteItem.choice=props.correct;\n        props.onNew(pasteItem);\n    }\n    function handleChangeText(t) {\n        let localArr = props.answers;\n        if ((t.text === '') && (t.img === '')) {\n            localArr.splice(t.num, 1);\n        } else {\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\n            localArr.splice(t.num, 1, answerRenew)\n        }\n        props.onChange(localArr);\n    }\n    function handleDelete(e) {\n        props.onDelete(e.target.value)\n    }\n    function handleCopy(e){\n        props.onCopy(e.target.value)\n    }\n    const [answers, setAnswers] = useState([]);\n    useEffect(() => {\n        setAnswers(props.answers);\n    }, [props.answers]);\n    return (\n        <div style={{display:\"flex\", alignItems:\"start\", justifyContent:\"start\", marginBottom:'4vh'}}>\n            <div style={{width:'85%' }}>\n                <div>\n                    {answers && answers.map((answerOption, j) => {\n                        return (\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\", margin:0 }}  key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>&#128209;Copy</button>\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />         \n                            </div>\n                        )\n                    }\n                    )}\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handlePasteText() }}>&#128203;Paste</button>\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handleNewText() }}>New &#10133;</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\nimport GetAnswers from './GetAnswers.js';\nimport Cloudinary from './Cloudinary';\nfunction GetQuestion(props) {\n    var questionObj = {}\n\n    const [rights, setRights] = useState([]);\n    const [wrongs, setWrongs] = useState([]);\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        props.onChange({ \"mainImg\": url })\n    }\n    // list available layouts\n    var layouts = [\"simple\", \"box\"];\n    useEffect(() => {\n        document.querySelector(\"#question\").value = props.q.question;\n        document.querySelector(\"#mainImg\").value = props.q.info.img;\n        document.querySelector(\"#positionsCount\").value = props.q.info.positions;\n        document.querySelector(\"#correctCount\").value = props.q.info.correct;\n        document.querySelector(\"#layout1\").value = props.q.info.layout;\n        setRights(props.q.rights);\n        setWrongs(props.q.wrongs);\n\n    }, [props.q]);\n    function handleReturnData(t, corr) {\n        if (corr) {\n            questionObj.rights = t;\n            // setRights(localChoices);\n        } else {\n            questionObj.wrongs = t;\n            //  setWrongs(localChoices);\n        }\n        props.onChange(questionObj)\n    }\n    function handleCopyData(n, corr) {\n        (corr) ? questionObj = props.q.rights[n] : questionObj = props.q.wrongs[n];\n        localStorage.setItem('answerCopy', JSON.stringify(questionObj));\n    }\n    function newRecord(e, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.push({ text: e.text, img: e.img, choice: true });\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.push({ text: e.text, img: e.img, choice: false });\n        }\n        props.onChange(questionObj)\n    }\n\n\n    function delRecord(n, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.splice(n, 1);\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.splice(n, 1);\n        }\n        props.onChange(questionObj)\n    }\n\n    return (\n        <Fragment>\n            <label className='headerStyle'>Enter your question\n            <textarea id=\"question\" onChange={e => { props.onChange({ \"question\": e.target.value }) }} />\n            </label>\n            <br/>\n            <label className='headerStyle'>Add your question main picture link (if you have one)\n            <input id=\"mainImg\" onChange={e => { props.onChange({ \"mainImg\": e.target.value }) }} />\n            </label>\n            <Cloudinary getImgUrl={getImgUrl} />\n            <label className='headerStyle'>Choose question layout\n                <select id=\"layout1\" onChange={e => { props.onChange({ \"layout1\": e.target.value }) }} >\n                    {layouts.map((option, i) => {\n                        return (\n                            <option value={option} key={'layout_option' + i}>{option}</option>\n                        )\n                    }\n                    )}\n                </select>\n             </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label>\n                        <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length + wrongs.length}  onChange={e => { props.onChange({ \"positionsCount\": e.target.value }) }} />            \n                        How many positions would be displayed?(Maximum should be less then answers options)\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label>\n                        <input id=\"correctCount\" type=\"number\" min={0} max={rights.length}  onChange={e => { props.onChange({ \"correctCount\": e.target.value }) }} />           \n                        How many correct options should be selected?(Maximum should be less then correct answers options)\n                    </label>\n                </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel2'>\n                    <label className='headerStyle' style={{color:'green'}} ><strong>Enter text of the correct answers:</strong></label>\n                    {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\n                </section>\n                <section className='panel1'>\n                    <label className='headerStyle' style={{ color:'red'}} ><strong>Enter text of the wrong answers:</strong></label>\n                    {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\n                </section>\n            </div>\n        </Fragment >\n    )\n}\nexport default GetQuestion;","import React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nfunction TestCreateNav(props) {\n\n    const [qArr, setqArr] = useState('');\n    const [moveVis, setMoveVis] = useState(false);\n    useEffect(() => {\n        document.getElementById('questionPage').value = 1;\n    }, []);\n    useEffect(() => {\n        let arr = [];\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\n        setqArr(arr);\n    }, [props.qNumber]);\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    function deleteRec() {\n        props.onDel('');\n        let n = document.querySelector(\"#questionPage\");\n        let k = \"\"\n        if (parseInt(n.value) !== props.qNumber) {\n            k = n.value;\n            n.value = k;\n        } else {\n            k = n.value;\n            n.value = (parseInt(k) - 1).toString();\n        }\n    }\n    function visibilityMoveTo() {\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\n        setMoveVis(!moveVis)\n    }\n    return (\n\n        <div className=\"navContainer\" style={{ position: 'relative' }} >\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Question editing panel</strong></h3>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet('1') }}>&#9198;</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <input className=\"testNavLight text-center\" style={{width:'3ch'}} type=\"number\" id=\"questionPage\"  min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\n            <button className=\"testNav\"\n                onClick={e => { deleteRec() }}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/>Delete</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\n            {(props.qNumber > 1) && <button className=\"testNav\"\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\n            }}>\n                {qArr.map((option, i) => {\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\n                }\n                )}\n            </select>}\n        </div>\n\n    );\n}\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nfunction GetGradient(props) {\n    const db = firebase.firestore();\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [gradients, setGradients] = useState([]);\n    const [newGradient, setNewGradient] = useState('');\n    const [newGradientName, setNewGradientName] = useState('');\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\n\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('gradients').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n    }\n    function handleAdd(e) {\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\n            .then(res => {\n                console.log('added');\n                props.reloadNeeded(true);\n                // setGradients(gradients.push({name:newGradientName,value:newGradient}))\n            })\n            .catch(error => {\n                console.log(\"can not delete a record\");\n            })\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\n        setAlertStyle({\n            left: \"0\",\n            top: \"0\",\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n\n        setRevealAlert(true)\n    }\n    function handleClick(grad) {\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\n        props.onChange(gr[0].value);\n    }\n    const fetchGradients = async () => {\n\n        const data = await db.collection(\"gradients\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n        setGradients(arrTemp);\n    };\n    useEffect(() => {\n        fetchGradients();\n    }, []);\n\n    return (\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {gradients && gradients.map((item, j) => {\n                return (\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius:'10px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\n                        <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  key={\"gradient_del_button\"+j} value={item.id} onClick={e => handleDelete(e)}>Del<img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(.9vw,10px)',height:'max(.9vw,10px)'}}/></button>\n                    </div>\n                )\n            }\n            )}\n            <label>\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} />\n                Add new background gradient CSS to our database of pre-set styles\n            </label>\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '100%' }}>\n                <label className='headerStyle'>Enter gradient CSS</label>\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\n                <label className='headerStyle'>Enter gradient name</label>\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\n                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  onClick={e => handleAdd(e)}>Add &#128504;</button>\n            </div>\n        </div>\n    );\n}\nexport default GetGradient;","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport GetQuestion from '../../components/GetQuestion.js';\nimport TestCreateNav from '../../components/testCreateNav';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport firebase from \"../../firebase\";\nimport \"./style.css\";\nimport GetTests from '../../components/getTests.js';\nimport GetGradient from '../../components/getGradient.js';\nimport AlertMenu from '../../components/alertMenu';\nimport Cloudinary from '../../components/Cloudinary';\nimport QuestionDisplay from '../../components/QuestionDisplay';\nimport CustomSelect from '../../components/CustomSelect';\n\nvar demoArr = [];\nvar emptyQ = {\n    question: '',\n    rights: [{ text: '', img: '', choice: true }],\n    wrongs: [{ text: '', img: '', choice: false }],\n    info: {\n        positions: 2,\n        correct: 1,\n        layout: '',\n        img: ''\n    }\n}\nfunction ToRenderEverything() {\n    var defOptionArray = [];\n    const { currentUser } = useAuth();\n    const [testName, setTestName] = useState('');\n    const [testDescription, setTestDescription] = useState('');\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\n    const [visibility, setVisibility] = useState('');\n    const [editability, setEditability] = useState('');\n    const [displayQ, setDisplayQ] = useState(0);\n    const [testBackground, setTestBackground] = useState('');\n    const [testGradient, setTestGradient] = useState('');\n    const [testHH, setTestHH] = useState(0);\n    const [testMM, setTestMM] = useState(0);\n    const [testSS, setTestSS] = useState(0);\n    const [show, setShow] = useState(false);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({})\n    const [testArray, setTestArray] = useState([emptyQ]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\n    const db = firebase.firestore();\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n        });\n        setCategories(arrTemp);\n    };\n    const onReturn = (decision1, inputValue) => {\n        if (decision1 === \"Proceed\") {\n            setRevealAlert(false);\n            reloadNeeded()\n        }\n        if (decision1 === \"Update\") {\n            setRevealAlert(false);\n            let text = {\n                main: {\n                    author: testAuthor.authorId,\n                    authorName: testAuthor.name,\n                    categories: selectedOption,\n                    name: testName,\n                    description: testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            db.collection('tests').doc(testAuthor.testId).set(text)\n                .then(result => {\n                    console.log(\"file updated\");\n                    reloadNeeded();\n                })\n                .catch(e => { console.log(\"file fail to updated\"); })\n        }\n        if (decision1 === \"Add\") {\n            console.log(inputValue)\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\n                let newItem = { label: inputValue, value: inputValue }\n                db.collection('categories').add(newItem)\n                    .then(result => {\n                        console.log(\"categories updated\");\n                        setCategories([...categories, newItem]);\n                    })\n                    .catch(e => { console.log(\"categories fail to updated\"); })\n                setRevealAlert(false);\n            } else {\n                setAlertStyle({\n                    left: \"0\",\n                    top: \"0\",\n                    variantHead: \"danger\",\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n                    inputField: 'true',\n                    inputValue: inputValue,\n                    color1: \"danger\",\n                    button1: \"Add\",\n                    color2: \"secondary\",\n                    button2: \"Cancel\"\n                });\n            }\n        }\n        if (decision1 === \"Cancel\") {\n            setRevealAlert(false);\n        }\n    }\n    const reloadNeeded = (a) => {\n        window.location.reload();\n    }\n    const getImgUrl = (url) => {\n        document.querySelector(\"#background\").value = url;\n        setTestBackground(url);\n    }\n    const getGradientCSS = (n) => {\n        document.querySelector(\"#backgroundGradient\").value = n;\n        setTestGradient(n)\n    }\n    function handleUpdateQuestion(q) {\n        if (q > 0) { setDisplayQ(q - 1) }\n        else {\n            setDisplayQ(q);\n        }\n    }\n    function handleReturnQuestion(t) {\n        let arr = [...testArray];\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\n        setTestArray(arr);\n    }\n    function handleCopyQuestion(e) {\n        localStorage.setItem('questionCopy', JSON.stringify(testArray[displayQ]));\n    }\n    function handleInsertQuestion(e) {\n        let arr = [];\n        let questCopy = JSON.parse(localStorage.getItem('questionCopy'));\n        if (questCopy === null) return\n        for (let i = 0; i < testArray.length; i++) {\n            if (i === displayQ + 1) arr.push(questCopy)\n            arr.push(testArray[i])\n        }\n        if (displayQ === testArray.length - 1) arr.push(questCopy)\n        setTestArray(arr)\n        setDisplayQ(displayQ + 1)\n    }\n    function handleAdd(e) {\n        // e.preventDefault()\n        setTestArray(oldArray => [...oldArray, {\n            question: '',\n            rights: [{ text: '', img: '', choice: true }],\n            wrongs: [{ text: '', img: '', choice: false }],\n            info: {\n                positions: 2,\n                correct: 1,\n                layout: '',\n                img: ''\n            }\n        }]);\n        setDisplayQ(testArray.length);\n        console.log(displayQ);\n    }\n    function handleShow() {\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\n        for (let i = 0; i < arr.length; i++) {\n            demoArr.push(arr[i]);\n        }\n        console.log(demoArr);\n        show ? setShow(false) : setShow(true)\n    }\n    function handleDelete() {\n\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\n    }\n    function handleMove(t) {\n        if (t[0] !== t[1]) {\n            let arr = [];\n            let record1 = testArray[t[0]];\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === t[1]) {\n                    if (t[1] > t[0]) {\n                        arr.push(testArray[i]);\n                        arr.push(record1);\n                    } else {\n                        arr.push(record1);\n                        arr.push(testArray[i]);\n                    }\n                }\n                else if (i !== t[0]) arr.push(testArray[i])\n            }\n            setTestArray(arr);\n            setDisplayQ(t[1])\n            console.log(record1, arr)\n        }\n    }\n    function getTestfromDB(n) {\n        console.log(n)\n        let newTest = n;\n        setTestArray(newTest.test);\n        setDisplayQ(0);\n        document.querySelector(\"#questionPage\").value = 1;\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\n        defOptionArray = newTest.main.categories\n        setSelectedOption(defOptionArray);\n        document.querySelector(\"#testName\").value = newTest.main.name;\n        setTestName(newTest.main.name);\n        document.querySelector(\"#testDescription\").value = newTest.main.description;\n        setTestDescription(newTest.main.description);\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\n        setVisibility(newTest.main.visibility);\n        document.querySelector(\"#editability\").value = newTest.main.editability;\n        setEditability(newTest.main.editability);\n        document.querySelector(\"#background\").value = newTest.main.background;\n        setTestBackground(newTest.main.background);\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n        setTestGradient(newTest.main.gradient);\n        document.querySelector(\"#hh\").value = newTest.main.hours;\n        setTestHH(newTest.main.hours);\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\n        setTestMM(newTest.main.minutes);\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\n        setTestSS(newTest.main.seconds);\n    }\n    function upload(e) {\n        let text = {\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description: testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        };\n        db.collection(\"tests\").add(text)\n            .then(result => {\n                console.log(\"file created in DB\");\n                reloadNeeded()\n            })\n            .catch(e => { console.log(\"no connectionto DB\"); })\n    }\n    function download(e) {\n        let text = JSON.stringify({\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description: testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        });\n        console.log(text)\n        let filename = \"test.txt\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n    function update(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Warning\",\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\n            color1: \"danger\",\n            button1: \"Update\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function handleNewCategory(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Alert\",\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n            inputField: 'true',\n            inputValue: \"\",\n            color1: \"danger\",\n            button1: \"Add\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function startNewTest(e) {\n        if (testName > \"\") {\n            setRevealAlert(true);\n            setAlertStyle({\n                variantHead: \"info\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n        }\n    }\n    const saveReload = (a) => {\n        if (a) {\n            let text = {\n                main: {\n                    author: currentUser.uid,\n                    authorName: currentUser.displayName,\n                    categories: selectedOption,\n                    name: testName,\n                    description: testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            reloadNeeded();\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        let pasteItem = JSON.parse(localStorage.getItem('testCopy'));\n        if ((pasteItem !== null)) getTestfromDB(pasteItem)\n        localStorage.removeItem('testCopy');\n    }, []);\n    return (\n        <div className=\"makerContainer\">\n            <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onLocal={n => { console.log(\"test loaded\") }} onChange={n => getTestfromDB(n)} />\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <div className='navContainer' >\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Test editing panel</strong></h3>\n\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128187;</button>\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload to web &#128228;</button>\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update on web &#128257;</button>}\n\n            </div>\n            <label className='headerStyle' >Enter test Name (keep it under 30 symbols)\n                    <input id=\"testName\" onChange={e => setTestName(e.target.value)} />\n            </label>\n            <br />\n            <label className='headerStyle' >Enter test description\n                    <textarea id=\"testDescription\" onChange={e => setTestDescription(e.target.value)} />\n            </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <select id=\"visibility\" onChange={e => setVisibility(e.target.value)} >\n                            <option value=\"Private\">Private</option>\n                            <option value=\"Public\">Public</option>\n                        </select>\n                        Is this test Private or Public?\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <select id=\"editability\" onChange={e => setEditability(e.target.value)}>\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                        Would you allow others to edit content of test?\n                    </label>\n                </section>\n            </div>\n            {selectedOption &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red', marginLeft: '1.5%' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\n            }\n            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: \"1% 0 0 1.5%\" }} onClick={e => handleNewCategory(e)}>Add New Category</button>\n            <div className=\"panel2 containerGrid\">\n                <section className='headerStyle' >Enter time (if there are no time limit enter 0 0 0):</section>\n                <section className='panel1 headerStyle' style={{ float: 'left' }}>\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '5ch' }} onChange={e => setTestHH(e.target.value)} /> hh\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestMM(e.target.value)} /> mm\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestSS(e.target.value)} /> ss\n            </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />\n                        Add/change BACKGROUND to your test\n                </label>\n                    <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '98%' }}>\n\n                        <label className='headerStyle'>Enter test background image link or upload your image from computer\n                        <input id=\"background\" onChange={e => setTestBackground(e.target.value)} />\n                        </label>\n                        <Cloudinary getImgUrl={getImgUrl} />\n                    </div>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\n                    Add/change background GRADIENT to your test\n               </label>\n                    <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '98%' }}>\n                        <label className='headerStyle' >Enter test background gradient CSS here\n                        <textarea id=\"backgroundGradient\" onChange={e => setTestGradient(e.target.value)} />\n                        </label>\n                        <GetGradient reloadNeeded={saveReload} onChange={n => getGradientCSS(n)} />\n                    </div>\n                </section>\n            </div>\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\n            {show &&\n                <div className=\"modalContainer\" style={{top: window.pageYOffset}}>\n                    <div className=\"closeTag\" style={{position:'absolute',top:'2%', right:'2%'}} onClick={(e) => setShow(false)}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} status={\"create\"} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\n                </div>\n            }\n            {testArray[displayQ] &&\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\n            }\n\n        </div >\n    )\n}\nexport default ToRenderEverything;\n","import React from \"react\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.scss';\n// Components\nimport Signup from \"./components/Signup\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport Logout from \"./components/Logout\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport DirectTestPage from \"./components/DirectTestPage\"\nimport Nav from \"./components/Nav\"\nimport Footer from \"./components/Footer\"\n//Pages\nimport testPage from './pages/testPage';\nimport makeTest from './pages/makeTest';\n\nfunction App() {\n\n  return (\n    <Router>\n      <AuthProvider>\n          <Nav />\n          <Footer />\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\n            <Route exact path=\"/test\" component={testPage} />\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\n          </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
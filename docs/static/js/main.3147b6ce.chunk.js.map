{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/Logout.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/testNav/index.js","components/LayoutBox/index.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/alertMenu.js","components/CustomSelect.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","console","log","updateProfile","displayName","photoURL","then","catch","error","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","to","e","a","preventDefault","current","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","Dashboard","toLogin","setToLogin","width","marginLeft","marginRight","src","alt","onClick","Login","Logout","logoutHandle","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","Cloudinary","imageSelected","setImageSelected","onChange","event","target","files","formData","FormData","append","Axios","post","response","data","parentElement","previousSibling","getImgUrl","pictureUpload","cursor","textAlign","UpdateProfile","userNameRef","userURLRef","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","margin","document","querySelector","childNodes","TestNav","timerInterval","stringTime","hours","minutes","seconds","displayTime","setDisplayTime","secondsLeft","h","m","s","questionNumberSet","n","questionNow","Number","isInteger","parseInt","qNumber","navButton","querySelectorAll","forEach","userItem","classList","remove","add","position","top","zIndex","transformOrigin","setInterval","clearInterval","onExit","min","max","toString","LayoutBox","i","length","checked","checkedMarks","indexOf","opacity","vis","color","marginTop","height","window","innerWidth","maxHeight","minWidth","lineHeight","textShadow","question","display","justifyContent","alignItems","flexWrap","overflow","answers","map","answerOption","j","choice","checkingMulti","backgroundImage","img","backgroundRepeat","backgroundSize","text","LayoutSimple","info","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","background","gradientValue","gradient","comma","layout","ch","GetResults","db","firestore","testRecords","setTestsRecords","resultsData","collection","where","testId","get","querySnapshot","doc","sort","b","result","time","fetchData","borderRadius","test","ResultsDisplay","testeeName","setTesteeName","testeeId","uid","handleDont","location","reload","timeInSeconds","t","split","alignContent","rate","res","userId","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","visible","setVisible","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","toFixed","answersSet","rights","concat","wrongs","positions","local","left","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollpased","imgDisplay","setImgDisplay","handleNavCollpase","imgLink","setAttribute","data-toggle","data-target","aria-controls","aria-expanded","aria-label","viewBox","stroke","xmlns","d","fill","AlertMenu","transform","styling","variantHead","heading","inputField","marginBottom","inputValue","color1","block","onReturn","button1","color2","button2","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","padding","option","isSelected","control","styles","backgroundColor","singleValue","isDisabled","transition","CustomSelect","label","options","isMulti","closeMenuOnSelect","isSearchable","GetTests","testRecordsDisplay","setTestsRecordsDisplay","revealAlert","setRevealAlert","alertStyle","setAlertStyle","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","testFromDB","setTestFromDB","arrTemp","forPage","docs","filter","author","editability","visibility","nameA","toUpperCase","nameB","fetchCategories","recordSet","tempArr","findIndex","fontSize","whiteSpace","recId","getAttribute","handleLink","elementPos","x","objFound","authorName","handleDelete","textOverflow","item","handleClick","decision1","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","getTestfromDB","evt","f","r","FileReader","onload","parse","readAsText","alert","readSingleFile","GetText","answer","answerText","setAnswerText","setImgLink","checkBox","setCheckBox","sendBack","num","cor","changeInput","changeImage","GetAnswers","setAnswers","float","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","Row","Col","xs","md","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","demoArr","emptyQ","defOptionArray","testName","setTestName","authorId","testAuthor","setTestAuthor","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","newTest","set","newItem","element","createElement","encodeURIComponent","body","appendChild","click","removeChild","download","upload","size","getGradientCSS","oldArray","record1","handleMove","slice","handleShow","handleUpdateQuestion","questCopy","handleInsertQuestion","pointerEvents","Object","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","exact","path","makeTest","testPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3147b6ce.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n        // history.push(\"/test-editor/\");\r\n      setToRoot(true);\r\n     \r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Sign Up\r\n            </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Already have an account? <Link to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { Card, Button, Alert, Container} from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const [toLogin, setToLogin] = useState(false);\r\n  if (toLogin===true){return <Redirect to=\"/login\" />}\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      setToLogin(true);\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\", width:\"100%\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Profile</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <h6 className=\"text-center mb-4\"> <strong>Display Name:</strong> {currentUser.displayName}</h6>\r\n            <h6 className=\"text-center mb-4\">  <strong>Email:</strong> {currentUser.email} </h6>\r\n            <img style={{width:'70%', marginLeft:\"15%\",marginRight:\"15%\"}} src={currentUser.photoURL>\"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"./images/defaultIcon.png\"} alt=\"profile pic\"/>\r\n            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n              Update Profile\r\n          </Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          <Button variant=\"link\" onClick={handleLogout}>\r\n            Log Out\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      // history.push(\"/test-editor/\")\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Log In</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Log In\r\n            </Button>\r\n            </Form>\r\n            <div className=\"w-100 text-center mt-3\">\r\n              <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            {message && <Alert variant=\"success\">{message}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Reset Password\r\n            </Button>\r\n            </Form>\r\n            <div className=\"w-100 text-center mt-3\">\r\n              <Link to=\"/login\">Login</Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input type='file' onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button\" onClick={(e)=>{pictureUpload(e)}}><h5 style={{cursor: \"pointer\", textAlign:\"center\"}}>Upload Image</h5></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef= useRef()\r\n  const userURLRef= useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser} = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const getImgUrl = (url) => {\r\n    document.querySelector(\"#userURL\").childNodes[1].value=url;\r\n}\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value!== currentUser.displayName)||(userURLRef.current.value!== currentUser.photoURL)){\r\n      promises.push(updateUser(userNameRef.current.value, userURLRef.current.value))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        // history.push(\"/test-editor/\")\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUDNAME);\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUD_PRESET);\r\n  },[])\r\n\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n          <Form.Group id=\"userName\">\r\n                <Form.Label>User's Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\" \r\n                  ref={userNameRef}\r\n                  defaultValue={currentUser.displayName}\r\n                  placeholder=\"Leave blank to keep the same\"  />\r\n              </Form.Group>\r\n              \r\n                               \r\n                            \r\n              <Form.Group id=\"userURL\">\r\n                <Form.Label>User's picture link</Form.Label>\r\n                <Form.Control \r\n                type=\"text\" \r\n                ref={userURLRef}\r\n                defaultValue={currentUser.photoURL}\r\n                placeholder=\"Leave blank to keep the same\"  />\r\n                 <Cloudinary style={{width: \"200px\", objectFit: \"cover\", margin: \"10px\"}} getImgUrl={getImgUrl} />\r\n              </Form.Group>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { Fragment, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport \"./style.css\";\nfunction TestNav(props) {\n    var timerInterval\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\n    function timerDraw(event) {\n        let seconds = props.seconds;\n        let minutes = props.minutes;\n        let hours = props.hours;\n        questionNumberSet('0');\n        event.preventDefault();\n        if ((seconds!==0)||(minutes!==0)||(hours!==0)){\n        timerInterval = setInterval(function () {\n            secondsLeft--;\n            if (seconds === 0) {\n                seconds = 59;\n            }\n            else seconds--;\n            if (seconds === 59) {\n                if (minutes === 0) {\n                    minutes = 59;\n                    hours--;\n                } else minutes--;\n            }\n            setDisplayTime(stringTime(hours, minutes, seconds));\n            if ((secondsLeft === 0)) {\n                clearInterval(timerInterval);\n                document.querySelector(\".testNav\").classList.add('invisible');\n                props.onExit(\"00:00:00\");\n            }\n\n        }, 1000);\n    }\n    };\n    function stringTime(h, m, s) {\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\n    }\n    function stopTest() {\n        clearInterval(timerInterval);\n        document.querySelector(\".testNav\").classList.add('invisible');\n        let navButton=document.querySelectorAll(\".testNav\");\n        navButton.forEach(function(userItem) {\n        userItem.classList.add('invisible');\n                });\n        props.onExit(displayTime);\n    }\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton=document.querySelectorAll(\".testNav\");\n                navButton.forEach(function(userItem) {\n                 userItem.classList.remove('invisible');\n                });\n                navButton=document.querySelectorAll(\".testNavLight\");\n                navButton.forEach(function(userItem) {\n                    userItem.classList.remove('invisible');\n                   });\n                document.querySelector(\"#startNav\").classList.add('invisible');             \n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    return (\n        <Fragment>\n            <div className=\"navContainer\" >\n               <Button id=\"startNav\" style={{position:'absolute', top:'50vh', zIndex:'200', transformOrigin: 'center',margin:'10px 0 0 0'}}\n                onClick={timerDraw}>Start</Button>          \n                <button  className=\"testNav  invisible\"\n                    onClick={e => { questionNumberSet('1') }}>&#9198;First</button>\n                <button className=\"testNav invisible\"\n                    onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n                <input  className=\"testNavLight text-center invisible\" type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n                <button className=\"testNav invisible \"\n                    onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n                <button className=\"testNav invisible\"\n                    onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;Last</button>\n                <input  className=\"testNavLight text-center invisible\" type=\"text\" value={displayTime} style={{width:'8ch'}} />\n                <button className=\"testNav invisible\"\n                    onClick={stopTest}>&#128721;Stop</button>  \n            </div>\n        </Fragment>\n    );\n}\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst LayoutBox = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i < document.querySelectorAll(\".checkOut\").length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n\n    });\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n            <div className='container' style={{ opacity: props.vis }}>\n                <div className=\"d-flex align-middle justify-content-center \" style={{ position: \"relative\", color: \"white\", width: \"100%\", marginTop: '7%', height: window.innerWidth < 700 ? '8vh' : '30vh', }} >\n                    <Textfit max={256}\n                        min={24}\n                        style={{\n                            minHeight: \"80%\",\n                            maxHeight: \"80%\",\n                            minWidth: \"80%\",\n                            maxWidth: \"80%\",\n                            lineHeight: 1,\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '100%', overflow:'visible', height: window.innerWidth < 700 ? '87vh' : '40vh', }}>\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{ width: '44%',height: 'auto',margin: '1px', maxWidth:'200px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Box\" + j}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\nexport default LayoutBox;","import React, { useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nfunction LayoutSimple(props) {\n\n    useEffect(() => {\n        for (let i = 0; i < document.querySelectorAll(\".checkOut\").length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n        console.log(props.answers)\n    }, []);\n    function checkingMulti(e) {\n        if (props.info.correct === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <div style={{ opacity: props.vis, width: '100%', height: '100%', flexWrap: 'wrap', maxWidth: \"1300px\" }}>\n            <div className=\"d-flex align-middle justify-content-center\" style={{ width: '100%', height: window.innerWidth < 700 ? '20%' : '40%' }}>\n                <img src={props.info.img} style={{ width: \"auto\", maxWidth: '350px' }} alt={props.info.img} />\n            </div>\n            <div className=\"d-flex align-middle justify-content-center \" style={{ position: \"relative\", color: \"white\", width: \"100%\", height: \"20%\" }} >\n                <Textfit max={256}\n                    min={24}\n                    style={{\n                        minHeight: \"80%\",\n                        maxHeight: \"80%\",\n                        minWidth: \"80%\",\n                        maxWidth: \"80%\",\n                        lineHeight: 1,\n                        textShadow: '1px 1px 2px black'\n                    }}>{props.question}</Textfit>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '100%', overflow: 'hidden', height: window.innerWidth < 700 ? '60%' : '40%', }}>\n                {props.answers.map((answerOption, j) => {\n                    return (\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256}\n                                    min={24}\n                                    style={{\n                                        minHeight: \"80%\",\n                                        maxHeight: \"80%\",\n                                        minWidth: \"80%\",\n                                        maxWidth: \"80%\",\n                                        lineHeight: 1,\n                                        textShadow: '1px 1px 2px black'\n                                    }}>{answerOption.text}</Textfit>\n                            </div>\n                        </label>\n                    )\n                })}\n            </div>\n        </div>\n    );\n}\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\nimport LayoutBox from '../../components/LayoutBox';\nimport LayoutSimple from '../../components/LayoutSimple';\nimport \"./style.css\";\nconst QuestionDisplay = props => {\n    const [backgroundVal,setBackgroundVal]= useState('')\n    useEffect(() => {\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\n        setBackgroundVal(gradientValue+comma+backgroundValue)\n        console.log(props.question)\n    }, []);\n    return (\n            <div style={{height:'100vh',width:'100%',backgroundImage:backgroundVal, backgroundRepeat: \"no-repeat\", backgroundSize: 'cover'}}>\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}    \n            </div>\n    );\n}\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nfunction GetResults(props) {\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    useEffect(() => {\n        let resultsData = []\n        const fetchData = async () => {\n\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    resultsData.push(doc.data());\n                });\n                resultsData.sort(function (a, b) {\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\n                });\n                setTestsRecords(resultsData);\n            });\n\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\n        };\n        fetchData();\n        console.log(testRecords);\n\n    }, [])\n\n    return (\n        <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n            <table style={{ margin:'auto' }} >\n                <tr>\n                    <th>Name</th>\n                    <th>Result</th>\n                    <th>Time Left</th>\n                </tr>\n                <tbody>\n                {testRecords && testRecords.map((test, j) => {\n                    return (\n                        <tr key={j}>\n                            <td key={\"name\"+j}>{test.displayName}</td>\n                            <td key={\"result\"+j}>{test.result}</td>\n                            <td key={\"time\"+j}>{test.time}</td>\n                        </tr>\n\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default GetResults;","import React, { useState, useRef } from 'react';\nimport { Button } from 'react-bootstrap';\nimport firebase from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport GetResults from \"../getResults\";\n// import { Redirect, Link } from \"react-router-dom\"\nconst ResultsDisplay = props => {\n    const { currentUser } = useAuth()\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\n    // const [toTest, setToTest] = useState([false]);\n\n\n    // useEffect(() => {\n    // if (toTest[0]===true){\n    //     return <Redirect to=\"/update-profile\" />;}\n    // },[toTest]);\n    function handleSave() {\n        const db = firebase.firestore();\n        db.collection(\"results\").add({\n            testId: props.testId,\n            displayName: testeeName,\n            userId: testeeId.current,\n            result: props.rate,\n            time: timeInSeconds(props.time)\n        }).then(result=>{handleDont()})\n        .catch(e=>{console.log('fail to record result')})\n        \n    }\n    function handleDont() {\n        // history.push(\"/test-editor/test\")\n        window.location.reload();\n        console.log(\"redirect to /test\")\n        // setToTest([true]);\n    }\n    function timeInSeconds(t) {\n        let time = t.split(':');\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\n    }\n    return (\n\n        <div style={{ display: 'flex', flexWrap: 'wrap', width: '100%', height: '100vh', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '2px 2px #ff0000', backgroundImage: `url(${props.background})`, backgroundSize: '100% 100%' }}>\n           {props.testId.length > 0 &&  <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\n           {props.testId.length > 0 && <GetResults testId={props.testId} />}\n\n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\n             <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\",  backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n             <table style={{ margin: 'auto' }} >\n                    <tr>\n                        <th>Question</th>\n                        <th>Result</th>\n                    </tr>\n\n                    {props.res.map((res, j) => {\n                        return (\n                            <tr key={\"n\"+j}>\n                                <td key={\"num\"+j} >{j + 1}</td>\n                                <td key={\"correct\"+j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            </div>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\n\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\n            </label>}\n            {props.testId.length > 0 && <Button variant='success' style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</Button>}\n            {props.testId.length > 0 && <Button variant='danger' style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</Button>}\n            <div style={{display: 'flex', width: '100%',justifyContent: 'center'}}>\n            {props.testId.length <= 0 && <Button variant='success' style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</Button>}\n            </div> \n        </div>\n    );\n}\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\nimport TestNav from '../testNav';\nimport QuestionDisplay from '../QuestionDisplay';\nimport ResultsDisplay from '../ResultsDisplay';\nimport \"./style.css\";\n\nfunction TestRun(props) {\n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\n  var testBackground = props.test.main.background;\n  var quizMain = props.test.test;\n  var test = [];\n  var choiceSet = [];\n  const [displayQ, setDisplayQ] = useState(0);\n  const [resultTime, setResultTime] = useState('');\n  const [choices, setChoices] = useState([]);\n  const [results, setResults] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [visible, setVisible] = useState(0);\n  const [testGenerated, setTestGenerated] = useState('');\n  function randomizer(arr) {\n\n    let testArray = [];\n    let answerCount = arr.length;\n    let positionN = 0;\n    for (let i = 0; i < answerCount; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n\n    }\n    return testArray\n  }\n\n  function randomChoice(arr, n) {\n\n    let testArray = [];\n    let positionN = 0;\n    for (let i = 0; i < n; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n    }\n    return testArray\n  }\n  function handleChoices(ch) {\n    let localChoices = choices;\n    localChoices.splice(displayQ, 1, ch)\n    setChoices(localChoices);\n\n  }\n  function handleChangeQuestion(q) {\n    if (q > 0) { setDisplayQ(q - 1) }\n    else {\n      setDisplayQ(q);\n      setVisible(1);\n\n    }\n  }\n  function correctAnswers() {\n    let arr = [];\n    let arrSmall = [];\n    for (let i = 0; i < testGenerated.length; i++) {\n      arrSmall = [];\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\n      }\n      arr.push(arrSmall)\n    }\n    return arr\n  }\n  function handleQuizEnd(t) {\n    let arr = [];\n    let n = 0;\n    console.log(t);\n    let correctArr = correctAnswers();\n    setVisible(0);\n    for (let i = 0; i < correctArr.length; i++) {\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\n      if (arr[i] === true) n += 1\n    }\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\n    setRating(((n / correctArr.length * 100).toFixed(2)));\n    setResults(arr);\n    setResultTime(t);\n    console.log(results)\n  }\n\n  useEffect(() => {\n    console.log(props.test.id)\n    let answersSet = [];\n    for (let i = 0; i < quizMain.length; i++) {\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\n      answersSet = randomizer(answersSet);\n\n      test.push({\n        \"info\": quizMain[i].info,\n        \"question\": quizMain[i].question,\n        \"answers\": answersSet,\n      })\n      choiceSet.splice(0, 0, [])\n\n    }\n    setChoices(choiceSet);\n    setTestGenerated(test);\n    document.querySelector(\"nav.navbar\").style.display = 'none';\n  }, []);\n\n\n\n  return (\n    <>\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testId={props.local?\"\":props.test.id} />}\n      {testGenerated && results.length <= 0 && \n      <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\n      <TestNav qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\n      </div>\n      }\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient}   info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\n    </>\n  )\n}\n\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\nimport firebase from \"../firebase\";\nimport {useParams} from 'react-router-dom'\nimport TestRun from './TestRun'\nexport default function DirectTestPage() {\n  // http://localhost:3000/taketest/DDKOWkpHKTC3l2Aav7bC\n  const [test, setTest]=useState({});\n  const [loading, setLoading]=useState(false)\n  const db = firebase.firestore();\n  let { id } = useParams();\n  useEffect(() => {\n     db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\n      \n      setTest({ ...querySnapshot.data(), id: id } );\n      setLoading(true);\n     })\n     .catch(error=>{\n      console.log(error)\n     })\n        \n    \n\n  }, [])\n  return (\n    <>\n{loading && <TestRun test={test} local={false} />}\n    </>\n  )\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Nav(props) {\r\n    const [isNavCollapsed, setIsNavCollpased] = useState(true);\r\n    const { currentUser } = useAuth();\r\n    const [imgDisplay, setImgDisplay] = useState('');\r\n    \r\n    function handleNavCollpase() {\r\n        setIsNavCollpased(!isNavCollapsed)\r\n    }\r\n    useEffect(() => {\r\n        let imgLink =  \"https://res.cloudinary.com/sergeyb/image/upload/v1616530982/quizzes/defaultIcon_w0obug.png\";\r\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\r\n        else{\r\n            document.querySelector('#imgMember').setAttribute('src',imgLink)\r\n            setImgDisplay(imgLink)\r\n        }\r\n        \r\n\r\n    }, [currentUser]);\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg\" >\r\n            <Link to=\"/\" className=\"navHeader\">\r\n                Quiz Land\r\n\t\t\t</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded={!isNavCollapsed ? true : false} aria-label=\"Toggle navigation\"\r\n                onClick={handleNavCollpase}>\r\n                <div style={{ width: '1em', height: '1em',color:\"white\" }}>\r\n                   {isNavCollapsed ? \r\n                    <svg viewBox=\"0 0 29 15\"  stroke=\"white\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M0.00012207 1.5C0.00012207 0.671573 0.671695 0 1.50012 0H27.5001C28.3285 0 29.0001 0.671573 29.0001 1.5C29.0001 2.32843 28.3285 3 27.5001 3H1.50012C0.671695 3 0.00012207 2.32843 0.00012207 1.5Z\" fill=\"#010101\" />\r\n                        <path d=\"M0.00012207 7.5C0.00012207 6.67157 0.671695 6 1.50012 6H27.5001C28.3285 6 29.0001 6.67157 29.0001 7.5C29.0001 8.32843 28.3285 9 27.5001 9H1.50012C0.671695 9 0.00012207 8.32843 0.00012207 7.5Z\" fill=\"#010101\" />\r\n                        <path d=\"M0.00012207 13.5C0.00012207 12.6716 0.671695 12 1.50012 12H27.5001C28.3285 12 29.0001 12.6716 29.0001 13.5C29.0001 14.3284 28.3285 15 27.5001 15H1.50012C0.671695 15 0.00012207 14.3284 0.00012207 13.5Z\" fill=\"#010101\" />\r\n                    </svg> :\r\n                    <svg viewBox=\"0 0 23 23\"  stroke=\"white\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M1.06069 1.06066C1.64647 0.474877 2.59622 0.474877 3.18201 1.06066L21.5668 19.4454C22.1526 20.0312 22.1526 20.981 21.5668 21.5668C20.981 22.1525 20.0312 22.1525 19.4455 21.5668L1.06069 3.18198C0.474901 2.5962 0.474901 1.64645 1.06069 1.06066Z\" fill=\"#010101\" />\r\n                        <path d=\"M1.06062 21.5668C0.47483 20.981 0.47483 20.0312 1.06062 19.4454L19.4454 1.06066C20.0312 0.474876 20.9809 0.474876 21.5667 1.06066C22.1525 1.64645 22.1525 2.5962 21.5667 3.18198L3.18194 21.5668C2.59615 22.1525 1.6464 22.1525 1.06062 21.5668Z\" fill=\"#010101\" />\r\n                    </svg>}\r\n                </div>\r\n            </button>\r\n            <div className={`${isNavCollapsed ? 'collapse' : ''} navbar-collapse`} id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n\r\n\r\n                   {!currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Login\r\n                        </Link>\r\n\r\n                    </li>}\r\n                    {!currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Signup\r\n                    </Link>\r\n\r\n                    </li>}\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/test\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Take Tests\r\n                    </Link>\r\n                    </li>\r\n                   {  currentUser ? <li className=\"nav-item\">\r\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Create tests\r\n                    </Link>\r\n                    </li>:\"\"}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            About\r\n                    </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollpase()} >\r\n                            Logout\r\n                    </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <Link to=\"/\" className=\"nav-link\">\r\n               <img className=\"member-photo\" id='imgMember' src={imgDisplay>\"\" ? imgDisplay : process.env.PUBLIC_URL + \"./images/defaultIcon.png\"} alt=\"member avatar\"/>\r\n            </Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\"\r\nimport { Button, Card, Alert} from \"react-bootstrap\"\r\n\r\nexport default function AlertMenu(props) {\r\n\r\n  return (\r\n    \r\n      <div style={{width:'100vw', height:'100vh', position:\"absolute\"}} >\r\n        <Card style={{position:\"relative\",zIndex:1000,transformOrigin: '50% 50%',transform: 'translate(center, center)',margin:'auto', maxWidth: \"400px\" }}>\r\n          <Card.Body>\r\n          <Alert style={{textAlign:\"center\"}} variant={props.styling.variantHead}>{props.styling.heading}</Alert>\r\n            <h5 className=\"text-center mb-2\">{props.styling.text}</h5>\r\n            {props.styling.inputField && <input id=\"inputField\" style={{width:\"100%\", marginBottom:\"10px\"}} defaultValue={props.inputValue} />}\r\n            <Button variant={props.styling.color1} block onClick={e=>{props.onReturn(props.styling.button1, (props.styling.inputField ?document.querySelector(\"#inputField\").value : null));}}>\r\n                {props.styling.button1}\r\n            </Button>\r\n            <Button variant={props.styling.color2} block onClick={e=>{props.onReturn(props.styling.button2)}}>\r\n                 {props.styling.button2}\r\n            </Button>\r\n\r\n          </Card.Body>\r\n        </Card>\r\n\r\n      </div>\r\n   \r\n  )\r\n}","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport { Button } from 'react-bootstrap';\nimport AlertMenu from './alertMenu';\nimport CustomSelect from './CustomSelect';\nfunction GetTests(props) {\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [categories, setCategories] = useState([]);\n    const [testFromDB, setTestFromDB] = useState({})\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('tests').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    props.reloadNeeded(true);\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n        if (decision1 === \"Proceed\") {\n            props.onChange(testFromDB);\n        }\n    }\n    function handleLink(e) {\n        let recId = e.target.getAttribute(\"value\");\n        console.log(recId)\n        setAlertStyle({\n            variantHead: \"success\",\n            heading: \"Direct link to Test\",\n            text: `https://sbolotnikov.github.io/test-editor/#/taketest/${recId}`,\n            color1: \"\",\n            button1: \"\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\n        let objFound = testRecords[elementPos];\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleClick(test) {\n        console.log(test.target.getAttribute(\"value\"))\n        if (props.forPage === 'create'){\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n            color1: \"danger\",\n            button1: \"Proceed\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true);\n        setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\")))\n    }else{props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\")))}\n    }\n    const fetchData = async () => {\n        let arrTemp = [];\n        const data = await db.collection(\"tests\").get();\n        if (props.forPage === 'create')\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\n        else\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setTestsRecords(arrTemp)\n    };\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp=data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setCategories(arrTemp);\n    };\n    useEffect(() => {\n        fetchCategories();\n        fetchData();\n    }, []);\n    useEffect(() => {\n        let recordSet = testRecords;\n        console.log(selectedOption);\n        if (selectedOption) {\n            for (let i = 0; i < selectedOption.length; i++) {\n                let tempArr = [];\n                for (let j = 0; j < recordSet.length; j++) {\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\n                }\n                recordSet = tempArr;\n            }\n        }\n        setTestsRecordsDisplay(recordSet);\n    }, [selectedOption])\n    return (\n        <div style={{ width: '100%' }}>\n            {categories &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose categories\" />\n            }\n            {testRecordsDisplay && testRecordsDisplay.map((test, j) => {\n                return (\n                    <div key={\"divTests\"+j} style={{ display: \"flex\", margin: '5px' }} >\n                        <Button key={\"linkBtnTests\"+j} style={{ fontSize: '12px', whiteSpace: 'nowrap' }} variant='success' value={test.id} onClick={e => handleLink(e)}>Link &#128279;</Button>\n                        {(props.forPage === 'create') &&\n                            <Button key={\"eraseBtnTests\"+j} style={{ fontSize: '12px', whiteSpace: 'nowrap' }} variant='danger' value={test.id} onClick={e => handleDelete(e)}>Del &#10008;</Button>\n                        }\n                        <div key={\"textTests\"+j} style={{ cursor: \"pointer\", whiteSpace: 'nowrap', width: \"auto\", overflow: 'hidden', textOverflow: 'ellipsis' }} value={test.id} onClick={e => handleClick(e)} >{test.main.name} by {test.main.authorName} </div>\n                    </div>\n                )\n            }\n            )}\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n        </div>\n    );\n}\nexport default GetTests;","import React, { Fragment, useState } from 'react';\nimport TestRun from '../../components/TestRun';\nimport GetTests from '../../components/getTests';\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport \"./style.css\";\n\n\nfunction ToRenderEverything() {\n\n  const [testLoad, setTestLoad] = useState(false);\n  const [localTest, setLocalTest] = useState(false);\n  const { currentUser } = useAuth()\n\n  function readSingleFile(evt) {\n    var f = evt.target.files[0];\n    if (f) {\n      var r = new FileReader();\n      r.onload = function (e) {\n        setTestLoad(JSON.parse(e.target.result));\n        setLocalTest(true)\n      }\n      r.readAsText(f);\n\n    } else {\n      alert(\"Failed to load file\");\n    }\n  }\n  function getTestfromDB(n) {\n    console.log(n)\n    setTestLoad(n[0]);\n  }\n  return (\n    <>\n      {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onChange={n => getTestfromDB(n)} />}\n      {currentUser && !testLoad && <label className='headerStyle'> Load saved locally test\n                <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />\n      </label>}\n      {testLoad && <TestRun test={testLoad} local={localTest} />}\n\n    </>\n  )\n}\n\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\nimport Cloudinary from './Cloudinary';\nfunction GetText(props) {\n    const [answerText, setAnswerText] = useState(props.answer.text);\n    const [imgLink, setImgLink] = useState(props.answer.img);\n    const [checkBox, setCheckBox] = useState();\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        setImgLink(url);\n        sendBack(answerText, url);\n    }\n    function changeInput(e) {\n        setAnswerText(e.target.value)\n        sendBack(e.target.value, imgLink);\n    }\n    function changeImage(e) {\n        setImgLink(e.target.value);\n        console.log(imgLink)\n        sendBack(answerText, e.target.value);\n    }\n    function sendBack(a, b) {\n        let choice = {\n            text: a,\n            img: b,\n            num: props.num\n        };\n        props.onChange(choice);\n    }\n    useEffect(() => {\n        setAnswerText(props.answer.text);\n        if (props.answer.img.length > 0) {\n            setCheckBox(true);\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\n            setImgLink(props.answer.img);\n        } else {\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\n            setCheckBox(false);\n        }\n    }, [props.answer]);\n    return (\n            <div >\n                <textarea style={{ width: '100%' }} value={answerText} onChange={e => changeInput(e)} />\n                <label style={{ color: 'black', width: '100%' }}>\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\n                check to add image link</label>\n                {checkBox && <div>\n                    <input type=\"text\" style={{ width: '80%', opacity: checkBox }} value={imgLink} onChange={e => changeImage(e)} />\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                </div>}\n            </div>\n    );\n}\nexport default GetText;","import React, { useEffect, useState } from 'react';\nimport GetText from './GetText.js';\nimport { Button } from 'react-bootstrap';\n\nfunction GetAnswers(props) {\n    function handleNewText() {\n        let emptyNew = { text: '', img: '', choice: props.correct };\n        props.onNew(emptyNew);\n    }\n    function handlePasteText(){\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\n        if (pasteItem===null) return\n        pasteItem.choice=props.correct;\n        props.onNew(pasteItem);\n    }\n    function handleChangeText(t) {\n        let localArr = props.answers;\n        if ((t.text === '') && (t.img === '')) {\n            localArr.splice(t.num, 1);\n        } else {\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\n            localArr.splice(t.num, 1, answerRenew)\n        }\n        props.onChange(localArr);\n    }\n    function handleDelete(e) {\n        props.onDelete(e.target.value)\n    }\n    function handleCopy(e){\n        props.onCopy(e.target.value)\n    }\n    const [answers, setAnswers] = useState([]);\n    useEffect(() => {\n        setAnswers(props.answers);\n    }, [props.answers]);\n    return (\n        <div className=\"d-flex align-items-start justify-content-center\">\n            <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n                <div style={{ width: '100%' }}>\n                    {answers && answers.map((answerOption, j) => {\n                        return (\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\n                                <Button style={{ float:\"right\" }} variant='danger' key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}>x</Button>\n                                <Button style={{ float:\"right\" }} variant='info' key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>Copy</Button>\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />\n                                \n                            </div>\n                        )\n                    }\n                    )}\n                    <Button variant='info' onClick={e => { handlePasteText() }}>Paste</Button>\n                    <Button variant='success' onClick={e => { handleNewText() }}>New</Button>\n                    {/* <LayoutBox type={1} vis={1} question={'props.question'} checkedMarks={[1]} answers={[{ 'text': '6.96 miles/sec','img': '',  'choice': true }]} /> */}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\nimport GetAnswers from './GetAnswers.js';\nimport Cloudinary from './Cloudinary';\nimport { Row, Col } from 'react-bootstrap';\n\n\nfunction GetQuestion(props) {\n    var questionObj={}\n\n    const [rights, setRights] = useState([]);\n    const [wrongs, setWrongs] = useState([]);\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value=url;\n        props.onChange({\"mainImg\":url})\n    }\n    // list available layouts\n    var layouts = [\"simple\", \"box\"];\n    useEffect(() => {\n        document.querySelector(\"#question\").value=props.q.question;\n        document.querySelector(\"#mainImg\").value=props.q.info.img;\n        document.querySelector(\"#positionsCount\").value=props.q.info.positions;\n        document.querySelector(\"#correctCount\").value=props.q.info.correct;\n        document.querySelector(\"#layout1\").value=props.q.info.layout;\n        setRights(props.q.rights);\n        setWrongs(props.q.wrongs);\n\n    },[props.q]);\n    function handleReturnData(t, corr) {  \n        if (corr){ \n            questionObj.rights=t;\n            // setRights(localChoices);\n        } else{\n             questionObj.wrongs=t;\n            //  setWrongs(localChoices);\n        }\n        props.onChange(questionObj)\n    }\n    function handleCopyData(n, corr){\n        (corr)?questionObj=props.q.rights[n]:questionObj=props.q.wrongs[n];\n        localStorage.setItem('answerCopy',JSON.stringify(questionObj));\n    }\n    function newRecord(e, corr) {\n        if (corr){\n            questionObj=props.q.rights;\n            questionObj.push({ text: e.text, img: e.img, choice: true });\n         }else{\n            questionObj=props.q.wrongs;\n            questionObj.push({ text: e.text, img: e.img, choice: false });\n         }\n        props.onChange(questionObj) \n    }\n \n\n    function delRecord(n, corr) {\n        if (corr){\n            questionObj=props.q.rights;\n            questionObj.splice(n,1);\n        } else{\n            questionObj=props.q.wrongs;\n            questionObj.splice(n,1);\n        }\n        props.onChange(questionObj)\n    }\n\n    return (\n        <Fragment>\n                    <h3 className='headerStyle'>Enter your question</h3>\n                    <textarea id=\"question\" style={{ width: '100%' }} onChange={e => { props.onChange({\"question\":e.target.value})}} />\n                    <h4 className='headerStyle'>Add your question main picture link (if you have one)</h4>\n                    <input id=\"mainImg\" style={{ width: '100%' }} onChange={e =>{ props.onChange({\"mainImg\":e.target.value})}} />\n                    <Cloudinary style={{width: \"200px\", objectFit: \"cover\", margin: \"10px\"}} getImgUrl={getImgUrl} />\n                    <label style={{ width: '100%', color: 'black' }}>\n                    <select id=\"layout1\" style={{ width: '40%', marginRight: '5px', marginTop: '5px' }} onChange={e => { props.onChange({\"layout1\":e.target.value})}} >\n                        {layouts.map((option, i) => {\n                            return (           \n                                    <option value={option} key={'layout_option'+i}>{option}</option>                            \n                            )\n                        }\n                        )}\n                        </select>\n                        Choose question layout\n                    </label>\n                    <label style={{ width: '50%', color: 'black' }}>\n                        <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length+wrongs.length} style={{ width: '20%', marginRight: '5px', marginTop: '5px' }} onChange={e =>{ props.onChange({\"positionsCount\":e.target.value})}} />\n                        How many positions would be displayed?(Maximum should be less then answers options)\n                    </label>\n                    <label style={{ width: '50%', color: 'black' }}>\n                        <input id=\"correctCount\" type=\"number\" min={0} max={rights.length} style={{ width: '20%', marginRight: '5px', marginTop: '5px' }} onChange={e =>{ props.onChange({\"correctCount\":e.target.value})}} />\n                        How many correct options should be selected?(Maximum should be less then correct answers options)\n                    </label>\n                    <Row>\n                        <Col xs={12} md={6}>\n                            <h3 className='headerStyle'>Enter text of the correct answers:</h3>\n                           {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\n                        </Col>\n                        <Col xs={12} md={6}>\n                            <h3 className='headerStyle'>Enter text of the wrong answers:</h3>\n                            {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\n                        </Col>\n                    </Row>        \n        </Fragment >\n    )\n}\nexport default GetQuestion;","import React, { Fragment, useEffect, useState } from 'react';\nimport \"./style.css\";\nfunction TestCreateNav(props) {\n\n    const [qArr, setqArr] = useState('');\n    const [moveVis, setMoveVis] = useState(false);\n    useEffect(() => {\n        document.getElementById('questionPage').value = 1;\n    }, []);\n    useEffect(() => {\n        let arr = [];\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\n        setqArr(arr);\n    }, [props.qNumber]);\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    function deleteRec() {\n        props.onDel('');\n        let n = document.querySelector(\"#questionPage\");\n        let k = \"\"\n        if (parseInt(n.value) !== props.qNumber) {\n            k = n.value;\n            n.value = k;\n        } else {\n            k = n.value;\n            n.value = (parseInt(k) - 1).toString();\n        }\n    }\n    function visibilityMoveTo() {\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\n        setMoveVis(!moveVis)\n    }\n    return (\n\n        <div className=\"navContainer\" style={{ position: 'relative' }} >\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#b30059' }}><strong>Question editing panel</strong></h3>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet('1') }}>&#9198;First</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <input className=\"testNavLight text-center\" type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;Last</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\n            <button className=\"testNav\"\n                onClick={e => { deleteRec() }}>&#128465;Delete</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\n            {(props.qNumber > 1) && <button className=\"testNav\"\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\n            }}>\n                {qArr.map((option, i) => {\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\n                }\n                )}\n            </select>}\n        </div>\n\n    );\n}\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport { Button } from 'react-bootstrap';\nimport AlertMenu from './alertMenu';\nfunction GetGradient(props) {\n    const db = firebase.firestore();\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [gradients, setGradients] = useState([]);\n    const [newGradient, setNewGradient] = useState('');\n    const [newGradientName, setNewGradientName] = useState('');\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\n\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('gradients').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n    }\n    function handleAdd(e) {\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\n            .then(res => {\n                console.log('added');\n                props.reloadNeeded(true);\n                // setGradients(gradients.push({name:newGradientName,value:newGradient}))\n            })\n            .catch(error => {\n                console.log(\"can not delete a record\");\n            })\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\n        setAlertStyle({\n            left: \"0\",\n            top: \"0\",\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n\n        setRevealAlert(true)\n    }\n    function handleClick(grad) {\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\n        props.onChange(gr[0].value);\n    }\n    const fetchGradients = async () => {\n\n        const data = await db.collection(\"gradients\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n        setGradients(arrTemp);\n    };\n    useEffect(() => {\n        fetchGradients();\n    }, []);\n\n    return (\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {gradients && gradients.map((item, j) => {\n                return (\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\n                        <Button key={\"gradient_del_button\"+j}  style={{ fontSize: '12px', whiteSpace: 'nowrap' }} variant='danger' value={item.id} onClick={e => handleDelete(e)}>Del &#10008;</Button>\n                    </div>\n                )\n            }\n            )}\n            <label className='headerStyle'>\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} /> \n                Add new background gradient CSS to our database of pre-set styles\n            </label>\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '48%' }}>\n                <label className='headerStyle'>Enter gradient CSS</label>\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\n                <label className='headerStyle'>Enter gradient name</label>\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\n                <Button style={{ fontSize: '12px', whiteSpace: 'nowrap' }} variant='success' onClick={e => handleAdd(e)}>Add &#128504;</Button>\n            </div>\n        </div>\n    );\n}\nexport default GetGradient;","import React, { useState, useEffect } from 'react';\nimport GetQuestion from '../../components/GetQuestion.js';\nimport TestCreateNav from '../../components/testCreateNav';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport firebase from \"../../firebase\";\nimport \"./style.css\";\nimport { Button } from 'react-bootstrap';\nimport GetTests from '../../components/getTests.js';\nimport GetGradient from '../../components/getGradient.js';\nimport AlertMenu from '../../components/alertMenu';\nimport Cloudinary from '../../components/Cloudinary';\nimport QuestionDisplay from '../../components/QuestionDisplay';\nimport CustomSelect from '../../components/CustomSelect';\n\nvar demoArr = [];\nvar emptyQ = {\n    question: '',\n    rights: [{ text: '', img: '', choice: true }],\n    wrongs: [{ text: '', img: '', choice: false }],\n    info: {\n        positions: 2,\n        correct: 1,\n        layout: '',\n        img: ''\n    }\n}\nfunction ToRenderEverything() {\n    var defOptionArray = [];\n    const { currentUser } = useAuth();\n    const [testName, setTestName] = useState('');\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\n    const [visibility, setVisibility] = useState('');\n    const [editability, setEditability] = useState('');\n    const [displayQ, setDisplayQ] = useState(0);\n    const [testBackground, setTestBackground] = useState('');\n    const [testGradient, setTestGradient] = useState('');\n    const [testHH, setTestHH] = useState(0);\n    const [testMM, setTestMM] = useState(0);\n    const [testSS, setTestSS] = useState(0);\n    const [show, setShow] = useState(false);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({})\n    const [testArray, setTestArray] = useState([emptyQ]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\n\n    const db = firebase.firestore();\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n        });\n        setCategories(arrTemp);\n    };\n    const onReturn = (decision1, inputValue) => {\n        if (decision1 === \"Proceed\") {\n            setRevealAlert(false);\n            reloadNeeded()\n        }\n        if (decision1 === \"Update\") {\n            setRevealAlert(false);\n            let text = {\n                main: {\n                    author: testAuthor.authorId,\n                    authorName: testAuthor.name,\n                    categories: selectedOption,\n                    name: testName,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            db.collection('tests').doc(testAuthor.testId).set(text)\n                .then(result => {\n                    console.log(\"file updated\");\n                    reloadNeeded();\n                })\n                .catch(e => { console.log(\"file fail to updated\"); })\n        }\n        if (decision1 === \"Add\") {\n            console.log(inputValue)\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\n                let newItem = { label: inputValue, value: inputValue }\n                db.collection('categories').add(newItem)\n                    .then(result => {\n                        console.log(\"categories updated\");\n                        setCategories([...categories, newItem]);\n                    })\n                    .catch(e => { console.log(\"categories fail to updated\"); })\n                setRevealAlert(false);\n            } else {\n                setAlertStyle({\n                    left: \"0\",\n                    top: \"0\",\n                    variantHead: \"danger\",\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n                    inputField: 'true',\n                    inputValue: inputValue,\n                    color1: \"danger\",\n                    button1: \"Add\",\n                    color2: \"secondary\",\n                    button2: \"Cancel\"\n                });\n            }\n        }\n        if (decision1 === \"Cancel\") {\n            setRevealAlert(false);\n        }\n    }\n    const reloadNeeded = (a) => {\n        window.location.reload();\n    }\n    const getImgUrl = (url) => {\n        document.querySelector(\"#background\").value = url;\n        setTestBackground(url);\n    }\n    const getGradientCSS = (n) => {\n        document.querySelector(\"#backgroundGradient\").value = n;\n        setTestGradient(n)\n    }\n    function handleUpdateQuestion(q) {\n        if (q > 0) { setDisplayQ(q - 1) }\n        else {\n            setDisplayQ(q);\n        }\n    }\n    function handleReturnQuestion(t) {\n        let arr = [...testArray];\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\n        setTestArray(arr);\n    }\n    function handleCopyQuestion(e) {\n        localStorage.setItem('questionCopy',JSON.stringify(testArray[displayQ]));\n    }\n    function handleInsertQuestion(e) {\n        let arr = [];\n        let questCopy=JSON.parse(localStorage.getItem('questionCopy'));\n        if (questCopy===null) return\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === displayQ + 1) arr.push(questCopy)\n                arr.push(testArray[i])\n            }\n            if (displayQ === testArray.length - 1) arr.push(questCopy)\n            setTestArray(arr)\n            setDisplayQ(displayQ + 1)\n    }\n    function handleAdd(e) {\n        // e.preventDefault()\n        setTestArray(oldArray => [...oldArray, {\n            question: '',\n            rights: [{ text: '', img: '', choice: true }],\n            wrongs: [{ text: '', img: '', choice: false }],\n            info: {\n                positions: 2,\n                correct: 1,\n                layout: '',\n                img: ''\n            }\n        }]);\n        setDisplayQ(testArray.length);\n        console.log(displayQ);\n    }\n    function handleShow() {\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\n        for (let i = 0; i < arr.length; i++) {\n            demoArr.push(arr[i]);\n        }\n        console.log(demoArr);\n        show ? setShow(false) : setShow(true)\n    }\n    function handleDelete() {\n\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\n    }\n    function handleMove(t) {\n        if (t[0] !== t[1]) {\n            let arr = [];\n            let record1 = testArray[t[0]];\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === t[1]) {\n                    if (t[1] > t[0]) {\n                        arr.push(testArray[i]);\n                        arr.push(record1);\n                    } else {\n                        arr.push(record1);\n                        arr.push(testArray[i]);\n                    }\n                }\n                else if (i !== t[0]) arr.push(testArray[i])\n            }\n            setTestArray(arr);\n            setDisplayQ(t[1])\n            console.log(record1, arr)\n        }\n    }\n    function getTestfromDB(n) {\n        console.log(n)\n        let newTest = n[0];\n        setTestArray(newTest.test);\n        setDisplayQ(0);\n        document.querySelector(\"#questionPage\").value = 1;\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\n        defOptionArray = newTest.main.categories\n        setSelectedOption(defOptionArray);\n        document.querySelector(\"#testName\").value = newTest.main.name;\n        setTestName(newTest.main.name);\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\n        setVisibility(newTest.main.visibility);\n        document.querySelector(\"#editability\").value = newTest.main.editability;\n        setEditability(newTest.main.editability);\n        document.querySelector(\"#background\").value = newTest.main.background;\n        setTestBackground(newTest.main.background);\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n        setTestGradient(newTest.main.gradient);\n        document.querySelector(\"#hh\").value = newTest.main.hours;\n        setTestHH(newTest.main.hours);\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\n        setTestMM(newTest.main.minutes);\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\n        setTestSS(newTest.main.seconds);\n    }\n    function readSingleFile(evt) {\n        //Retrieve the first (and only!) File from the FileList object\n        var f = evt.target.files[0];\n        if (f) {\n            var r = new FileReader();\n            r.onload = function (e) {\n                let newTest = JSON.parse(e.target.result);\n                console.log(newTest)\n                setTestArray(newTest.test);\n                setDisplayQ(0);\n                document.querySelector(\"#questionPage\").value = 1;\n                setTestAuthor({ authorId: \"\", name: \"\", testId: \"\" });\n                setSelectedOption(newTest.main.categories);\n                document.querySelector(\"#testName\").value = newTest.main.name;\n                setTestName(newTest.main.name);\n                document.querySelector(\"#visibility\").value = newTest.main.visibility;\n                setVisibility(newTest.main.visibility);\n                document.querySelector(\"#editability\").value = newTest.main.editability;\n                setEditability(newTest.main.editability);\n                document.querySelector(\"#background\").value = newTest.main.background;\n                setTestBackground(newTest.main.background);\n                document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n                setTestGradient(newTest.main.gradient);\n                document.querySelector(\"#hh\").value = newTest.main.hours;\n                setTestHH(newTest.main.hours);\n                document.querySelector(\"#mm\").value = newTest.main.minutes;\n                setTestMM(newTest.main.minutes);\n                document.querySelector(\"#ss\").value = newTest.main.seconds;\n                setTestSS(newTest.main.seconds);\n            }\n            r.readAsText(f);\n        } else {\n            alert(\"Failed to load file\");\n        }\n    }\n    function upload(e) {\n        let text = {\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        };\n        db.collection(\"tests\").add(text)\n            .then(result => {\n                console.log(\"file created in DB\");\n                reloadNeeded()\n            })\n            .catch(e => { console.log(\"no connectionto DB\"); })\n    }\n    function download(e) {\n        let text = JSON.stringify({\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        });\n        console.log(text)\n        let filename = \"test.txt\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n    function update(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Warning\",\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\n            color1: \"danger\",\n            button1: \"Update\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function handleNewCategory(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Alert\",\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n            inputField: 'true',\n            inputValue: \"\",\n            color1: \"danger\",\n            button1: \"Add\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function startNewTest(e) {\n        if (testName > \"\") {\n            setRevealAlert(true);\n            setAlertStyle({\n                variantHead: \"warning\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n    }, []);\n    return (\n        <div style={{ maxWidth: \"1440px\", overflow: \"hidden\" }}>\n            <label className='headerStyle'> Load locally saved tests\n                <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />\n            </label>\n            <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onChange={n => getTestfromDB(n)} />\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <div className='navContainer' style={{ width: '97%', margin: '40px auto', padding: \"10px\" }}>\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#b30059' }}><strong>Test editing panel</strong></h3>\n\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128190;</button>\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload as New &#128228;</button>\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update in DB &#128257;</button>}\n\n            </div>\n            <label className='headerStyle' style={{ width: '100%' }} >Enter your test Name\n                    <input id=\"testName\" style={{ width: '100%' }} onChange={e => setTestName(e.target.value)} />\n            </label>\n            <label className='headerStyle' style={{ width: '43%' }} >Is this test Private or Public?\n                    <select id=\"visibility\" type=\"\" style={{ width: '50%', float: 'right' }} onChange={e => setVisibility(e.target.value)} >\n                    <option value=\"Private\">Private</option>\n                    <option value=\"Public\">Public</option>\n                </select>\n            </label>\n            <label className='headerStyle' style={{ width: '55%' }} >Would you allow others to edit content of test?\n                    <select id=\"editability\" style={{ width: '30%', float: 'right' }} onChange={e => setEditability(e.target.value)}>\n                    <option value=\"Yes\">Yes</option>\n                    <option value=\"No\">No</option>\n                </select>\n            </label>\n            {selectedOption &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\n            }\n            <Button onClick={e => handleNewCategory(e)}>Add New Category</Button>\n            <h4 className='headerStyle' style={{ width: '100%' }} >Enter Time limits (if there are no time limit enter 0 0 0) :\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '9%' }} onChange={e => setTestHH(e.target.value)} /> hh\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '9%' }} onChange={e => setTestMM(e.target.value)} /> mm\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '9%' }} onChange={e => setTestSS(e.target.value)} /> ss\n            </h4>\n            <label className='headerStyle'>\n                <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />\n                Add/change BACKGROUND to your test\n            </label>\n            <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '50%' }}>\n\n                <h4 className='headerStyle' style={{ width: '100%' }} >Enter test background image link or upload your image from computer</h4>\n                <input id=\"background\" style={{ width: '100%' }} onChange={e => setTestBackground(e.target.value)} />\n                <Cloudinary style={{ width: \"40%\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n            </div>\n            <label className='headerStyle'>\n                <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\n                Add/change background GRADIENT to your test\n            </label>\n            <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '50%' }}>\n                <h4 className='headerStyle' style={{ width: '100%' }} >Enter test background gradient CSS here</h4>\n                <textarea id=\"backgroundGradient\" style={{ width: '100%' }} onChange={e => setTestGradient(e.target.value)} />\n                <GetGradient reloadNeeded={reloadNeeded} onChange={n => getGradientCSS(n)} />\n            </div>\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\n            {show &&\n                <div className=\"modalContainer\" >\n                    <div className=\"closeTag\" onClick={(e) => setShow(false)}>&#10060;Close</div>\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\n                </div>\n            }\n            {testArray[displayQ] &&\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\n            }\n\n        </div >\n    )\n}\nexport default ToRenderEverything;\n","import React from \"react\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// Components\nimport Signup from \"./components/Signup\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport Logout from \"./components/Logout\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport DirectTestPage from \"./components/DirectTestPage\"\nimport Nav from \"./components/Nav\"\n//Pages\nimport testPage from './pages/testPage';\nimport makeTest from './pages/makeTest';\n\nfunction App() {\n\n  return (\n\n    <Router>\n      <AuthProvider>\n          <Nav />\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\n            <Route exact path=\"/test\" component={testPage} />\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\n          </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
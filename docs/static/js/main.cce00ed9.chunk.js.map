{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/Logout.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/testNav/index.js","components/LayoutBox/index.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/alertMenu.js","components/CustomSelect.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","console","log","updateProfile","displayName","photoURL","then","catch","error","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","to","e","a","preventDefault","current","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","Dashboard","toLogin","setToLogin","width","marginLeft","marginRight","src","alt","onClick","Login","Logout","logoutHandle","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","Cloudinary","imageSelected","setImageSelected","onChange","event","target","files","formData","FormData","append","Axios","post","response","data","parentElement","previousSibling","getImgUrl","pictureUpload","cursor","textAlign","UpdateProfile","userNameRef","userURLRef","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","margin","document","querySelector","childNodes","TestNav","timerInterval","stringTime","hours","minutes","seconds","displayTime","setDisplayTime","secondsLeft","h","m","s","questionNumberSet","n","questionNow","Number","isInteger","parseInt","qNumber","navButton","querySelectorAll","forEach","userItem","classList","remove","add","position","top","left","zIndex","setInterval","clearInterval","onExit","background","fontSize","min","max","toString","right","padding","borderWidth","height","LayoutBox","i","length","checked","checkedMarks","indexOf","opacity","vis","color","marginTop","window","innerWidth","maxHeight","minWidth","lineHeight","textShadow","question","display","justifyContent","alignItems","flexWrap","overflow","answers","map","answerOption","j","choice","checkingMulti","backgroundImage","img","backgroundRepeat","backgroundSize","text","LayoutSimple","info","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","gradientValue","gradient","comma","layout","ch","GetResults","db","firestore","testRecords","setTestsRecords","resultsData","collection","where","testId","get","querySnapshot","doc","sort","b","result","time","fetchData","borderRadius","test","ResultsDisplay","testeeName","setTesteeName","testeeId","uid","handleDont","location","reload","timeInSeconds","t","split","alignContent","rate","res","userId","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","visible","setVisible","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","toFixed","answersSet","rights","concat","wrongs","positions","local","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollpased","imgDisplay","setImgDisplay","handleNavCollpase","imgLink","setAttribute","data-toggle","data-target","aria-controls","aria-expanded","aria-label","AlertMenu","transformOrigin","transform","styling","variantHead","heading","inputField","marginBottom","inputValue","color1","block","onReturn","button1","color2","button2","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","option","isSelected","control","styles","backgroundColor","singleValue","isDisabled","transition","CustomSelect","label","options","isMulti","closeMenuOnSelect","isSearchable","GetTests","testRecordsDisplay","setTestsRecordsDisplay","revealAlert","setRevealAlert","alertStyle","setAlertStyle","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","testFromDB","setTestFromDB","checkEditLocalTestVisible","setCheckEditLocalTestVisible","arrTemp","forPage","docs","filter","author","editability","visibility","nameA","toUpperCase","nameB","fetchCategories","recordSet","tempArr","findIndex","whiteSpace","recId","getAttribute","handleLink","elementPos","x","objFound","authorName","handleDelete","textOverflow","item","handleClick","evt","f","r","FileReader","onload","parse","onLocal","readAsText","alert","readSingleFile","decision1","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","l","getTestfromDB","GetText","answer","answerText","setAnswerText","setImgLink","checkBox","setCheckBox","sendBack","num","cor","changeInput","changeImage","GetAnswers","setAnswers","float","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","demoArr","emptyQ","defOptionArray","testName","setTestName","authorId","testAuthor","setTestAuthor","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","newTest","removeItem","set","newItem","element","createElement","encodeURIComponent","body","appendChild","click","removeChild","download","upload","size","getGradientCSS","oldArray","record1","handleMove","slice","handleShow","handleUpdateQuestion","questCopy","handleInsertQuestion","pointerEvents","Object","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","exact","path","makeTest","testPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.cce00ed9.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n      setToRoot(true);\r\n     \r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Sign Up\r\n            </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Already have an account? <Link to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { Card, Button, Alert, Container} from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const [toLogin, setToLogin] = useState(false);\r\n  if (toLogin===true){return <Redirect to=\"/login\" />}\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      setToLogin(true);\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\", width:\"100%\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Profile</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <h6 className=\"text-center mb-4\"> <strong>Display Name:</strong> {currentUser.displayName}</h6>\r\n            <h6 className=\"text-center mb-4\">  <strong>Email:</strong> {currentUser.email} </h6>\r\n            <img style={{width:'70%', marginLeft:\"15%\",marginRight:\"15%\"}} src={currentUser.photoURL>\"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"./images/defaultIcon.png\"} alt=\"profile pic\"/>\r\n            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n              Update Profile\r\n          </Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          <Button variant=\"link\" onClick={handleLogout}>\r\n            Log Out\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      // history.push(\"/test-editor/\")\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Log In</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Log In\r\n            </Button>\r\n            </Form>\r\n            <div className=\"w-100 text-center mt-3\">\r\n              <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            {message && <Alert variant=\"success\">{message}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Reset Password\r\n            </Button>\r\n            </Form>\r\n            <div className=\"w-100 text-center mt-3\">\r\n              <Link to=\"/login\">Login</Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input type='file' onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button\" onClick={(e)=>{pictureUpload(e)}}><h5 style={{cursor: \"pointer\", textAlign:\"center\"}}>Upload Image</h5></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef= useRef()\r\n  const userURLRef= useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser} = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const getImgUrl = (url) => {\r\n    document.querySelector(\"#userURL\").childNodes[1].value=url;\r\n}\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value!== currentUser.displayName)||(userURLRef.current.value!== currentUser.photoURL)){\r\n      promises.push(updateUser(userNameRef.current.value, userURLRef.current.value))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        // history.push(\"/test-editor/\")\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUDNAME);\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUD_PRESET);\r\n  },[])\r\n\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n          <Form.Group id=\"userName\">\r\n                <Form.Label>User's Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\" \r\n                  ref={userNameRef}\r\n                  defaultValue={currentUser.displayName}\r\n                  placeholder=\"Leave blank to keep the same\"  />\r\n              </Form.Group>\r\n              \r\n                               \r\n                            \r\n              <Form.Group id=\"userURL\">\r\n                <Form.Label>User's picture link</Form.Label>\r\n                <Form.Control \r\n                type=\"text\" \r\n                ref={userURLRef}\r\n                defaultValue={currentUser.photoURL}\r\n                placeholder=\"Leave blank to keep the same\"  />\r\n                 <Cloudinary style={{width: \"200px\", objectFit: \"cover\", margin: \"10px\"}} getImgUrl={getImgUrl} />\r\n              </Form.Group>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { Fragment, useState } from 'react';\nfunction TestNav(props) {\n    var timerInterval\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\n    function timerDraw(event) {\n        let seconds = props.seconds;\n        let minutes = props.minutes;\n        let hours = props.hours;\n        questionNumberSet('0');\n        event.preventDefault();\n        if ((seconds!==0)||(minutes!==0)||(hours!==0)){\n        timerInterval = setInterval(function () {\n            secondsLeft--;\n            if (seconds === 0) {\n                seconds = 59;\n            }\n            else seconds--;\n            if (seconds === 59) {\n                if (minutes === 0) {\n                    minutes = 59;\n                    hours--;\n                } else minutes--;\n            }\n            setDisplayTime(stringTime(hours, minutes, seconds));\n            if ((secondsLeft === 0)) {\n                clearInterval(timerInterval);\n                document.querySelector(\".testNav\").classList.add('invisible');\n                props.onExit(\"00:00:00\");\n            }\n\n        }, 1000);\n    }\n    };\n    function stringTime(h, m, s) {\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\n    }\n    function stopTest() {\n        clearInterval(timerInterval);\n        document.querySelector(\".testNav\").classList.add('invisible');\n        let navButton=document.querySelectorAll(\".testNav\");\n        navButton.forEach(function(userItem) {\n        userItem.classList.add('invisible');\n                });\n        props.onExit(displayTime);\n    }\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton=document.querySelectorAll(\".testNav\");\n                navButton.forEach(function(userItem) {\n                 userItem.classList.remove('invisible');\n                });\n                navButton=document.querySelectorAll(\".testNavLight\");\n                navButton.forEach(function(userItem) {\n                    userItem.classList.remove('invisible');\n                   });\n                document.querySelector(\"#startNav\").classList.add('invisible');             \n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    return (\n        <Fragment>\n               <button className=\"testNav\" id=\"startNav\" style={{position:'absolute', top:'44vh',left:\"43vw\", zIndex:'200'}}\n                onClick={timerDraw}>Start</button>          \n                <button className=\"testNav invisible\" style={{position:\"absolute\", top:'48vh',left:0, background:\"transparent\", zIndex:1500}}\n                    onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n                <label className=\"testNav invisible\"style={{margin:0, fontSize:'calc(10px + 1vw)' }} >\n                <input  className=\"testNavLight text-center invisible\" style={{width:'3ch',fontSize:'calc(10px + 1vw)'}} type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n                of {props.qNumber}</label>\n                <button className=\"testNav invisible \" style={{position:\"absolute\", top:'48vh',right:0, background:\"transparent\", zIndex:1500}}\n                    onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n                \n                <input  className=\"testNav text-right invisible\" type=\"text\" value={displayTime} style={{position:\"absolute\", background:\"transparent\", top:'5vh',right:0,padding:0,borderWidth:0, width:'8ch'}} />\n                <button className=\"testNav invisible\" style={{position:\"absolute\", top:0,right:0, background:\"transparent\",borderWidth:'0px', zIndex:1500}}\n                    onClick={stopTest}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:\"4vh\",height:\"4vh\"}}/></button>  \n            \n        </Fragment>\n    );\n}\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst LayoutBox = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i < document.querySelectorAll(\".checkOut\").length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n\n    });\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n            <div className='container' style={{ opacity: props.vis }}>\n                <div className=\"d-flex align-middle justify-content-center \" style={{ position: \"relative\", color: \"white\", width: \"100%\", marginTop: '7%', height: window.innerWidth < 700 ? '8vh' : '30vh', }} >\n                    <Textfit max={256}\n                        min={24}\n                        style={{\n                            minHeight: \"80%\",\n                            maxHeight: \"80%\",\n                            minWidth: \"80%\",\n                            maxWidth: \"80%\",\n                            lineHeight: 1,\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '100%', overflow:'visible', height: window.innerWidth < 700 ? '87vh' : '40vh', }}>\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{ width: '44%',height: 'auto',margin: '1px', maxWidth:'200px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Box\" + j}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\nexport default LayoutBox;","import React, { useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nfunction LayoutSimple(props) {\n\n    useEffect(() => {\n        for (let i = 0; i < document.querySelectorAll(\".checkOut\").length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n        console.log(props.answers)\n    }, []);\n    function checkingMulti(e) {\n        if (props.info.correct === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <div style={{ opacity: props.vis, width: '100%', height: '100%', flexWrap: 'wrap', maxWidth: \"1300px\" }}>\n            <div className=\"d-flex align-middle justify-content-center\" style={{ width: '100%', height: window.innerWidth < 700 ? '20%' : '40%' }}>\n                <img src={props.info.img} style={{ width: \"auto\", maxWidth: '350px',marginTop:\"5px\" }} alt={props.info.img} />\n            </div>\n            <div className=\"d-flex align-middle justify-content-center \" style={{ position: \"relative\", color: \"white\", width: \"100%\", height: \"20%\" }} >\n                <Textfit max={256}\n                    min={24}\n                    style={{\n                        minHeight: \"80%\",\n                        maxHeight: \"80%\",\n                        minWidth: \"80%\",\n                        maxWidth: \"80%\",\n                        lineHeight: 1,\n                        textShadow: '1px 1px 2px black'\n                    }}>{props.question}</Textfit>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '100%', overflow: 'hidden', height: window.innerWidth < 700 ? '60%' : '40%', }}>\n                {props.answers.map((answerOption, j) => {\n                    return (\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256}\n                                    min={24}\n                                    style={{\n                                        minHeight: \"80%\",\n                                        maxHeight: \"80%\",\n                                        minWidth: \"80%\",\n                                        maxWidth: \"80%\",\n                                        lineHeight: 1,\n                                        textShadow: '1px 1px 2px black'\n                                    }}>{answerOption.text}</Textfit>\n                            </div>\n                        </label>\n                    )\n                })}\n            </div>\n        </div>\n    );\n}\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\nimport LayoutBox from '../../components/LayoutBox';\nimport LayoutSimple from '../../components/LayoutSimple';\nimport \"./style.css\";\nconst QuestionDisplay = props => {\n    const [backgroundVal,setBackgroundVal]= useState('')\n    useEffect(() => {\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\n        setBackgroundVal(gradientValue+comma+backgroundValue)\n        console.log(props.question)\n    }, []);\n    return (\n            <div style={{height:'100vh',width:'100%',backgroundImage:backgroundVal, backgroundRepeat: \"no-repeat\", backgroundSize: 'cover'}}>\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}    \n            </div>\n    );\n}\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nfunction GetResults(props) {\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    useEffect(() => {\n        let resultsData = []\n        const fetchData = async () => {\n\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    resultsData.push(doc.data());\n                });\n                resultsData.sort(function (a, b) {\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\n                });\n                setTestsRecords(resultsData);\n            });\n\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\n        };\n        fetchData();\n        console.log(testRecords);\n\n    }, [])\n\n    return (\n        <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n            <table style={{ margin:'auto' }} >\n                <tr>\n                    <th>Name</th>\n                    <th>Result</th>\n                    <th>Time Left</th>\n                </tr>\n                <tbody>\n                {testRecords && testRecords.map((test, j) => {\n                    return (\n                        <tr key={j}>\n                            <td key={\"name\"+j}>{test.displayName}</td>\n                            <td key={\"result\"+j}>{test.result}</td>\n                            <td key={\"time\"+j}>{test.time}</td>\n                        </tr>\n\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default GetResults;","import React, { useState, useRef } from 'react';\nimport firebase from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport GetResults from \"../getResults\";\n// import { Redirect, Link } from \"react-router-dom\"\nconst ResultsDisplay = props => {\n    const { currentUser } = useAuth()\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\n    // const [toTest, setToTest] = useState([false]);\n\n\n    // useEffect(() => {\n    // if (toTest[0]===true){\n    //     return <Redirect to=\"/update-profile\" />;}\n    // },[toTest]);\n    function handleSave() {\n        const db = firebase.firestore();\n        db.collection(\"results\").add({\n            testId: props.testId,\n            displayName: testeeName,\n            userId: testeeId.current,\n            result: props.rate,\n            time: timeInSeconds(props.time)\n        }).then(result=>{handleDont()})\n        .catch(e=>{console.log('fail to record result')})\n        \n    }\n    function handleDont() {\n        // history.push(\"/test-editor/test\")\n        window.location.reload();\n        console.log(\"redirect to /test\")\n        // setToTest([true]);\n    }\n    function timeInSeconds(t) {\n        let time = t.split(':');\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\n    }\n    return (\n\n        <div style={{ display: 'flex', flexWrap: 'wrap', width: '100%', height: '100vh', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '1px 1px #f5d142',\n         backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' , backgroundSize: '100% 100%' }}>\n           {props.testId.length > 0 &&  <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\n           {props.testId.length > 0 && <GetResults testId={props.testId} />}\n           <button className=\"testNav\" style={{position:\"absolute\", top:0,right:0, background:\"transparent\",borderWidth:'0px', zIndex:1500}}\n                    onClick={e => handleDont(e)}>\n                        <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:\"4vh\",height:\"4vh\"}}/>\n                        </button>  \n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\n             <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\"}}>\n             <table style={{ margin: 'auto' }} >\n                    <tr>\n                        <th>Question</th>\n                        <th>Result</th>\n                    </tr>\n\n                    {props.res.map((res, j) => {\n                        return (\n                            <tr key={\"n\"+j}>\n                                <td key={\"num\"+j} >{j + 1}</td>\n                                <td key={\"correct\"+j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            </div>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\n\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\n            </label>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</button>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</button>}\n            <div style={{display: 'flex', width: '100%',justifyContent: 'center'}}>\n            {props.testId.length <= 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</button>}\n            </div> \n        </div>\n    );\n}\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\nimport TestNav from '../testNav';\nimport QuestionDisplay from '../QuestionDisplay';\nimport ResultsDisplay from '../ResultsDisplay';\nimport \"./style.css\";\n\nfunction TestRun(props) {\n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\n  var testBackground = props.test.main.background;\n  var quizMain = props.test.test;\n  var test = [];\n  var choiceSet = [];\n  const [displayQ, setDisplayQ] = useState(0);\n  const [resultTime, setResultTime] = useState('');\n  const [choices, setChoices] = useState([]);\n  const [results, setResults] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [visible, setVisible] = useState(0);\n  const [testGenerated, setTestGenerated] = useState('');\n  function randomizer(arr) {\n\n    let testArray = [];\n    let answerCount = arr.length;\n    let positionN = 0;\n    for (let i = 0; i < answerCount; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n\n    }\n    return testArray\n  }\n\n  function randomChoice(arr, n) {\n\n    let testArray = [];\n    let positionN = 0;\n    for (let i = 0; i < n; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n    }\n    return testArray\n  }\n  function handleChoices(ch) {\n    let localChoices = choices;\n    localChoices.splice(displayQ, 1, ch)\n    setChoices(localChoices);\n\n  }\n  function handleChangeQuestion(q) {\n    if (q > 0) { setDisplayQ(q - 1) }\n    else {\n      setDisplayQ(q);\n      setVisible(1);\n\n    }\n  }\n  function correctAnswers() {\n    let arr = [];\n    let arrSmall = [];\n    for (let i = 0; i < testGenerated.length; i++) {\n      arrSmall = [];\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\n      }\n      arr.push(arrSmall)\n    }\n    return arr\n  }\n  function handleQuizEnd(t) {\n    let arr = [];\n    let n = 0;\n    console.log(t);\n    let correctArr = correctAnswers();\n    setVisible(0);\n    for (let i = 0; i < correctArr.length; i++) {\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\n      if (arr[i] === true) n += 1\n    }\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\n    setRating(((n / correctArr.length * 100).toFixed(2)));\n    setResults(arr);\n    setResultTime(t);\n    console.log(results)\n  }\n\n  useEffect(() => {\n    console.log(props.test.id)\n    let answersSet = [];\n    for (let i = 0; i < quizMain.length; i++) {\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\n      answersSet = randomizer(answersSet);\n\n      test.push({\n        \"info\": quizMain[i].info,\n        \"question\": quizMain[i].question,\n        \"answers\": answersSet,\n      })\n      choiceSet.splice(0, 0, [])\n\n    }\n    setChoices(choiceSet);\n    setTestGenerated(test);\n    document.querySelector(\"nav.navbar\").style.display = 'none';\n  }, []);\n\n\n\n  return (\n    <>\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testId={props.local?\"\":props.test.id} />}\n      {testGenerated && results.length <= 0 && \n      <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\n      <TestNav qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\n      </div>\n      }\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient}   info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\n    </>\n  )\n}\n\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\nimport firebase from \"../firebase\";\nimport {useParams} from 'react-router-dom'\nimport TestRun from './TestRun'\nexport default function DirectTestPage() {\n  // http://localhost:3000/taketest/DDKOWkpHKTC3l2Aav7bC\n  const [test, setTest]=useState({});\n  const [loading, setLoading]=useState(false)\n  const db = firebase.firestore();\n  let { id } = useParams();\n  useEffect(() => {\n     db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\n      \n      setTest({ ...querySnapshot.data(), id: id } );\n      setLoading(true);\n     })\n     .catch(error=>{\n      console.log(error)\n     })\n        \n    \n\n  }, [])\n  return (\n    <>\n{loading && <TestRun test={test} local={false} />}\n    </>\n  )\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Nav(props) {\r\n    const [isNavCollapsed, setIsNavCollpased] = useState(true);\r\n    const { currentUser } = useAuth();\r\n    const [imgDisplay, setImgDisplay] = useState('');\r\n    \r\n    function handleNavCollpase() {\r\n        setIsNavCollpased(!isNavCollapsed)\r\n    }\r\n    useEffect(() => {\r\n        let imgLink =  \"https://res.cloudinary.com/sergeyb/image/upload/v1616530982/quizzes/defaultIcon_w0obug.png\";\r\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\r\n        else{\r\n            document.querySelector('#imgMember').setAttribute('src',imgLink)\r\n            setImgDisplay(imgLink)\r\n        }\r\n        \r\n\r\n    }, [currentUser]);\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg\" >\r\n            <Link to=\"/\" className=\"navHeader\">\r\n                Quiz Land\r\n\t\t\t</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded={!isNavCollapsed ? true : false} aria-label=\"Toggle navigation\"\r\n                onClick={handleNavCollpase}>\r\n                <div style={{ width: '1em', height: '1em',color:\"white\" }}>\r\n                   {isNavCollapsed ? \r\n                     <img src={ process.env.PUBLIC_URL+\"/icons/burger.svg\"} alt=\"close\" style={{width:'1em',height:'1em'}}/> :\r\n                    <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'1em',height:'1em'}}/>}\r\n                </div>\r\n            </button>\r\n            <div className={`${isNavCollapsed ? 'collapse' : ''} navbar-collapse`} id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n\r\n\r\n                   {!currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Login\r\n                        </Link>\r\n\r\n                    </li>}\r\n                    {!currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Signup\r\n                    </Link>\r\n\r\n                    </li>}\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/test\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Take tests\r\n                    </Link>\r\n                    </li>\r\n                   {  currentUser ? <li className=\"nav-item\">\r\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Create tests\r\n                    </Link>\r\n                    </li>:\"\"}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            About\r\n                    </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollpase()} >\r\n                            Logout\r\n                    </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <Link to=\"/\" className=\"nav-link\">\r\n               <img className=\"member-photo\" id='imgMember' src={imgDisplay>\"\" ? imgDisplay : process.env.PUBLIC_URL + \"./images/defaultIcon.png\"} alt=\"member avatar\"/>\r\n            </Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\"\r\nimport { Button, Card, Alert} from \"react-bootstrap\"\r\n\r\nexport default function AlertMenu(props) {\r\n\r\n  return (\r\n    \r\n      <div style={{width:'100vw', height:'100vh', position:\"absolute\"}} >\r\n        <Card style={{position:\"relative\",zIndex:1000,transformOrigin: '50% 50%',transform: 'translate(center, center)',margin:'auto', maxWidth: \"400px\" }}>\r\n          <Card.Body>\r\n          <Alert style={{textAlign:\"center\"}} variant={props.styling.variantHead}>{props.styling.heading}</Alert>\r\n            <h5 className=\"text-center mb-2\">{props.styling.text}</h5>\r\n            {props.styling.inputField && <input id=\"inputField\" style={{width:\"100%\", marginBottom:\"10px\"}} defaultValue={props.inputValue} />}\r\n            <Button variant={props.styling.color1} block onClick={e=>{props.onReturn(props.styling.button1, (props.styling.inputField ?document.querySelector(\"#inputField\").value : null));}}>\r\n                {props.styling.button1}\r\n            </Button>\r\n            <Button variant={props.styling.color2} block onClick={e=>{props.onReturn(props.styling.button2)}}>\r\n                 {props.styling.button2}\r\n            </Button>\r\n\r\n          </Card.Body>\r\n        </Card>\r\n\r\n      </div>\r\n   \r\n  )\r\n}","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nimport CustomSelect from './CustomSelect';\nimport { useAuth } from \"../contexts/AuthContext\"\nfunction GetTests(props) {\n    const db = firebase.firestore();\n    const { currentUser } = useAuth();\n    const [testRecords, setTestsRecords] = useState([]);\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [categories, setCategories] = useState([]);\n    const [testFromDB, setTestFromDB] = useState({})\n    const [checkEditLocalTestVisible, setCheckEditLocalTestVisible] = useState(false);\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('tests').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    props.reloadNeeded(true);\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n        if (decision1 === \"Proceed\") {\n            props.onChange(testFromDB);\n            props.onLocal(false);\n        }\n    }\n    function handleLink(e) {\n        let recId = e.target.getAttribute(\"value\");\n        console.log(recId)\n        setAlertStyle({\n            variantHead: \"success\",\n            heading: \"Direct link to Test\",\n            text: `https://sbolotnikov.github.io/test-editor/#/taketest/${recId}`,\n            color1: \"\",\n            button1: \"\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\n        let objFound = testRecords[elementPos];\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleClick(test) {\n        console.log(test.target.getAttribute(\"value\"))\n        if (props.forPage === 'create') {\n            setAlertStyle({\n                variantHead: \"danger\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n            setRevealAlert(true);\n            setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0])\n        } else { props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0]) }\n    }\n    const fetchData = async () => {\n        let arrTemp = [];\n        const data = await db.collection(\"tests\").get();\n        if (props.forPage === 'create')\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\n        else\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setTestsRecords(arrTemp)\n    };\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setCategories(arrTemp);\n    };\n    function readSingleFile(evt) {\n        var f = evt.target.files[0];\n        if (f) {\n            var r = new FileReader();\n            r.onload = function (e) {\n                setTestFromDB(JSON.parse(e.target.result));\n                if (props.forPage === 'create') {\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                        color1: \"danger\",\n                        button1: \"Proceed\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                } else {\n                    props.onChange(JSON.parse(e.target.result));\n                    props.onLocal(true);\n                }\n                // setLocalTest(true)\n            }\n            r.readAsText(f);\n\n        } else {\n            alert(\"Failed to load file\");\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        fetchData();\n    }, []);\n    useEffect(() => {\n        let recordSet = testRecords;\n        console.log(selectedOption);\n        if (selectedOption) {\n            for (let i = 0; i < selectedOption.length; i++) {\n                let tempArr = [];\n                for (let j = 0; j < recordSet.length; j++) {\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\n                }\n                recordSet = tempArr;\n            }\n        }\n        setTestsRecordsDisplay(recordSet);\n    }, [selectedOption])\n    return (\n        <div style={{ width: '100%', maxWidth:\"600px\", height:\"100%\", maxHeight:\"400px\" }}>\n            {categories &&\n                <CustomSelect isMulti={true} style={{ width: '100%', menuColor: 'red' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose categories\" />\n            }\n            {testRecordsDisplay && testRecordsDisplay.map((test, j) => {\n                return (\n                    <div key={\"divTests\" + j} style={{ display: \"flex\", margin: '5px' }} >\n                        <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: 0, whiteSpace: 'nowrap' }} key={\"linkBtnTests\" + j} value={test.id} onClick={e => handleLink(e)}>Link &#128279;</button>\n                        {(props.forPage === 'create') &&\n                            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: 0, whiteSpace: 'nowrap' }} key={\"eraseBtnTests\" + j} value={test.id} onClick={e => handleDelete(e)}>Del <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(.9vw,10px)', height: 'max(.9vw,10px)' }} /></button>\n                        }\n                        <div key={\"textTests\" + j} style={{ cursor: \"pointer\", whiteSpace: 'nowrap', width: \"auto\", overflow: 'hidden', textOverflow: 'ellipsis' }} value={test.id} onClick={e => handleClick(e)} >{test.main.name} by {test.main.authorName} </div>\n                    </div>\n                )\n            }\n            )}\n            {currentUser && <label className='headerStyle'>\n                <input type=\"checkbox\" id=\"checkEditLocalTest\" onChange={e => setCheckEditLocalTestVisible(document.querySelector(\"#checkEditLocalTest\").checked)} />\n              Load local test from your disk\n              </label>}\n            {currentUser && checkEditLocalTestVisible && <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />}\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n        </div>\n    );\n}\nexport default GetTests;","import React, { useState } from 'react';\nimport TestRun from '../../components/TestRun';\nimport GetTests from '../../components/getTests';\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport \"./style.css\";\n\n\nfunction ToRenderEverything() {\n\n  const [testLoad, setTestLoad] = useState(false);\n  const [localTest, setLocalTest] = useState(false);\n  const { currentUser } = useAuth()\n \n  function getTestfromDB(n) {\n    console.log(n)\n    setTestLoad(n);\n  }\n  return (\n    <div style={{ display: \"flex\",alignItems:\"center\",justifyContent:\"center\", height: \"100vh\" }}>\n        {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onLocal={l => setLocalTest(l)} onChange={n => getTestfromDB(n)} />}\n        {testLoad && <TestRun test={testLoad} local={localTest} />}\n    </div>\n  )\n}\n\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\nimport Cloudinary from './Cloudinary';\nfunction GetText(props) {\n    const [answerText, setAnswerText] = useState(props.answer.text);\n    const [imgLink, setImgLink] = useState(props.answer.img);\n    const [checkBox, setCheckBox] = useState();\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        setImgLink(url);\n        sendBack(answerText, url);\n    }\n    function changeInput(e) {\n        setAnswerText(e.target.value)\n        sendBack(e.target.value, imgLink);\n    }\n    function changeImage(e) {\n        setImgLink(e.target.value);\n        console.log(imgLink)\n        sendBack(answerText, e.target.value);\n    }\n    function sendBack(a, b) {\n        let choice = {\n            text: a,\n            img: b,\n            num: props.num\n        };\n        props.onChange(choice);\n    }\n    useEffect(() => {\n        setAnswerText(props.answer.text);\n        if (props.answer.img.length > 0) {\n            setCheckBox(true);\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\n            setImgLink(props.answer.img);\n        } else {\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\n            setCheckBox(false);\n        }\n    }, [props.answer]);\n    return (\n            <div >\n                <textarea style={{ width: '100%' }} value={answerText} onChange={e => changeInput(e)} />\n                <label style={{ color: 'black', width: '100%' }}>\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\n                check to add image link</label>\n                {checkBox && <div>\n                    <input type=\"text\" style={{ width: '80%', opacity: checkBox }} value={imgLink} onChange={e => changeImage(e)} />\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                </div>}\n            </div>\n    );\n}\nexport default GetText;","import React, { useEffect, useState } from 'react';\nimport GetText from './GetText.js';\n\nfunction GetAnswers(props) {\n    function handleNewText() {\n        let emptyNew = { text: '', img: '', choice: props.correct };\n        props.onNew(emptyNew);\n    }\n    function handlePasteText(){\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\n        if (pasteItem===null) return\n        pasteItem.choice=props.correct;\n        props.onNew(pasteItem);\n    }\n    function handleChangeText(t) {\n        let localArr = props.answers;\n        if ((t.text === '') && (t.img === '')) {\n            localArr.splice(t.num, 1);\n        } else {\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\n            localArr.splice(t.num, 1, answerRenew)\n        }\n        props.onChange(localArr);\n    }\n    function handleDelete(e) {\n        props.onDelete(e.target.value)\n    }\n    function handleCopy(e){\n        props.onCopy(e.target.value)\n    }\n    const [answers, setAnswers] = useState([]);\n    useEffect(() => {\n        setAnswers(props.answers);\n    }, [props.answers]);\n    return (\n        <div className=\"d-flex align-items-start justify-content-center\">\n            <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n                <div style={{ width: '100%' }}>\n                    {answers && answers.map((answerOption, j) => {\n                        return (\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\n                                {/* <Button style={{ float:\"right\" }} variant='danger' key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}>x</Button> */}\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\", margin:0 }}  key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>&#128209;Copy</button>\n                                {/* <Button style={{ float:\"right\" }} variant='info' key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>Copy</Button> */}\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />\n                                \n                            </div>\n                        )\n                    }\n                    )}\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handlePasteText() }}>&#128203;Paste</button>\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handleNewText() }}>New &#10133;</button>\n                    {/* <LayoutBox type={1} vis={1} question={'props.question'} checkedMarks={[1]} answers={[{ 'text': '6.96 miles/sec','img': '',  'choice': true }]} /> */}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\nimport GetAnswers from './GetAnswers.js';\nimport Cloudinary from './Cloudinary';\nfunction GetQuestion(props) {\n    var questionObj = {}\n\n    const [rights, setRights] = useState([]);\n    const [wrongs, setWrongs] = useState([]);\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        props.onChange({ \"mainImg\": url })\n    }\n    // list available layouts\n    var layouts = [\"simple\", \"box\"];\n    useEffect(() => {\n        document.querySelector(\"#question\").value = props.q.question;\n        document.querySelector(\"#mainImg\").value = props.q.info.img;\n        document.querySelector(\"#positionsCount\").value = props.q.info.positions;\n        document.querySelector(\"#correctCount\").value = props.q.info.correct;\n        document.querySelector(\"#layout1\").value = props.q.info.layout;\n        setRights(props.q.rights);\n        setWrongs(props.q.wrongs);\n\n    }, [props.q]);\n    function handleReturnData(t, corr) {\n        if (corr) {\n            questionObj.rights = t;\n            // setRights(localChoices);\n        } else {\n            questionObj.wrongs = t;\n            //  setWrongs(localChoices);\n        }\n        props.onChange(questionObj)\n    }\n    function handleCopyData(n, corr) {\n        (corr) ? questionObj = props.q.rights[n] : questionObj = props.q.wrongs[n];\n        localStorage.setItem('answerCopy', JSON.stringify(questionObj));\n    }\n    function newRecord(e, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.push({ text: e.text, img: e.img, choice: true });\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.push({ text: e.text, img: e.img, choice: false });\n        }\n        props.onChange(questionObj)\n    }\n\n\n    function delRecord(n, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.splice(n, 1);\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.splice(n, 1);\n        }\n        props.onChange(questionObj)\n    }\n\n    return (\n        <Fragment>\n            <h3 className='headerStyle'>Enter your question</h3>\n            <textarea id=\"question\" style={{ width: '100%' }} onChange={e => { props.onChange({ \"question\": e.target.value }) }} />\n            <h4 className='headerStyle'>Add your question main picture link (if you have one)</h4>\n            <input id=\"mainImg\" style={{ width: '100%' }} onChange={e => { props.onChange({ \"mainImg\": e.target.value }) }} />\n            <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n            <label style={{ width: '100%', color: 'black' }}>\n                <select id=\"layout1\" style={{ width: '40%', marginRight: '5px', marginTop: '5px' }} onChange={e => { props.onChange({ \"layout1\": e.target.value }) }} >\n                    {layouts.map((option, i) => {\n                        return (\n                            <option value={option} key={'layout_option' + i}>{option}</option>\n                        )\n                    }\n                    )}\n                </select>\n                        Choose question layout\n                    </label>\n            <label style={{ width: '50%', color: 'black' }}>\n                <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length + wrongs.length} style={{ width: '20%', marginRight: '5px', marginTop: '5px' }} onChange={e => { props.onChange({ \"positionsCount\": e.target.value }) }} />\n                        How many positions would be displayed?(Maximum should be less then answers options)\n                    </label>\n            <label style={{ width: '50%', color: 'black' }}>\n                <input id=\"correctCount\" type=\"number\" min={0} max={rights.length} style={{ width: '20%', marginRight: '5px', marginTop: '5px' }} onChange={e => { props.onChange({ \"correctCount\": e.target.value }) }} />\n                        How many correct options should be selected?(Maximum should be less then correct answers options)\n                    </label>\n            <div className=\"containerGrid\">\n                <section className='panel1' style={{ width: '100%' }}>\n                    <h3 className='headerStyle'>Enter text of the correct answers:</h3>\n                    {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\n                </section>\n                <section className='panel2' style={{ width: '100%' }}>\n                    <h3 className='headerStyle'>Enter text of the wrong answers:</h3>\n                    {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\n                </section>\n            </div>\n        </Fragment >\n    )\n}\nexport default GetQuestion;","import React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nfunction TestCreateNav(props) {\n\n    const [qArr, setqArr] = useState('');\n    const [moveVis, setMoveVis] = useState(false);\n    useEffect(() => {\n        document.getElementById('questionPage').value = 1;\n    }, []);\n    useEffect(() => {\n        let arr = [];\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\n        setqArr(arr);\n    }, [props.qNumber]);\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    function deleteRec() {\n        props.onDel('');\n        let n = document.querySelector(\"#questionPage\");\n        let k = \"\"\n        if (parseInt(n.value) !== props.qNumber) {\n            k = n.value;\n            n.value = k;\n        } else {\n            k = n.value;\n            n.value = (parseInt(k) - 1).toString();\n        }\n    }\n    function visibilityMoveTo() {\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\n        setMoveVis(!moveVis)\n    }\n    return (\n\n        <div className=\"navContainer\" style={{ position: 'relative' }} >\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#f5d142' }}><strong>Question editing panel</strong></h3>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet('1') }}>&#9198;</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <input className=\"testNavLight text-center\" style={{width:'3ch'}} type=\"number\" id=\"questionPage\"  min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\n            <button className=\"testNav\"\n                onClick={e => { deleteRec() }}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/>Delete</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\n            {(props.qNumber > 1) && <button className=\"testNav\"\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\n            }}>\n                {qArr.map((option, i) => {\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\n                }\n                )}\n            </select>}\n        </div>\n\n    );\n}\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nfunction GetGradient(props) {\n    const db = firebase.firestore();\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [gradients, setGradients] = useState([]);\n    const [newGradient, setNewGradient] = useState('');\n    const [newGradientName, setNewGradientName] = useState('');\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\n\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('gradients').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n    }\n    function handleAdd(e) {\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\n            .then(res => {\n                console.log('added');\n                props.reloadNeeded(true);\n                // setGradients(gradients.push({name:newGradientName,value:newGradient}))\n            })\n            .catch(error => {\n                console.log(\"can not delete a record\");\n            })\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\n        setAlertStyle({\n            left: \"0\",\n            top: \"0\",\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n\n        setRevealAlert(true)\n    }\n    function handleClick(grad) {\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\n        props.onChange(gr[0].value);\n    }\n    const fetchGradients = async () => {\n\n        const data = await db.collection(\"gradients\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n        setGradients(arrTemp);\n    };\n    useEffect(() => {\n        fetchGradients();\n    }, []);\n\n    return (\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {gradients && gradients.map((item, j) => {\n                return (\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius:'10px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\n                        <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  key={\"gradient_del_button\"+j} value={item.id} onClick={e => handleDelete(e)}>Del<img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(.9vw,10px)',height:'max(.9vw,10px)'}}/></button>\n                    </div>\n                )\n            }\n            )}\n            <label className='headerStyle'>\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} /> \n                Add new background gradient CSS to our database of pre-set styles\n            </label>\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '100%' }}>\n                <label className='headerStyle'>Enter gradient CSS</label>\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\n                <label className='headerStyle'>Enter gradient name</label>\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\n                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  onClick={e => handleAdd(e)}>Add &#128504;</button>\n            </div>\n        </div>\n    );\n}\nexport default GetGradient;","import React, { useState, useEffect } from 'react';\nimport GetQuestion from '../../components/GetQuestion.js';\nimport TestCreateNav from '../../components/testCreateNav';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport firebase from \"../../firebase\";\nimport \"./style.css\";\nimport GetTests from '../../components/getTests.js';\nimport GetGradient from '../../components/getGradient.js';\nimport AlertMenu from '../../components/alertMenu';\nimport Cloudinary from '../../components/Cloudinary';\nimport QuestionDisplay from '../../components/QuestionDisplay';\nimport CustomSelect from '../../components/CustomSelect';\n\nvar demoArr = [];\nvar emptyQ = {\n    question: '',\n    rights: [{ text: '', img: '', choice: true }],\n    wrongs: [{ text: '', img: '', choice: false }],\n    info: {\n        positions: 2,\n        correct: 1,\n        layout: '',\n        img: ''\n    }\n}\nfunction ToRenderEverything() {\n    var defOptionArray = [];\n    const { currentUser } = useAuth();\n    const [testName, setTestName] = useState('');\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\n    const [visibility, setVisibility] = useState('');\n    const [editability, setEditability] = useState('');\n    const [displayQ, setDisplayQ] = useState(0);\n    const [testBackground, setTestBackground] = useState('');\n    const [testGradient, setTestGradient] = useState('');\n    const [testHH, setTestHH] = useState(0);\n    const [testMM, setTestMM] = useState(0);\n    const [testSS, setTestSS] = useState(0);\n    const [show, setShow] = useState(false);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({})\n    const [testArray, setTestArray] = useState([emptyQ]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\n    const db = firebase.firestore();\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n        });\n        setCategories(arrTemp);\n    };\n    const onReturn = (decision1, inputValue) => {\n        if (decision1 === \"Proceed\") {\n            setRevealAlert(false);\n            reloadNeeded()\n        }\n        if (decision1 === \"Update\") {\n            setRevealAlert(false);\n            let text = {\n                main: {\n                    author: testAuthor.authorId,\n                    authorName: testAuthor.name,\n                    categories: selectedOption,\n                    name: testName,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            db.collection('tests').doc(testAuthor.testId).set(text)\n                .then(result => {\n                    console.log(\"file updated\");\n                    reloadNeeded();\n                })\n                .catch(e => { console.log(\"file fail to updated\"); })\n        }\n        if (decision1 === \"Add\") {\n            console.log(inputValue)\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\n                let newItem = { label: inputValue, value: inputValue }\n                db.collection('categories').add(newItem)\n                    .then(result => {\n                        console.log(\"categories updated\");\n                        setCategories([...categories, newItem]);\n                    })\n                    .catch(e => { console.log(\"categories fail to updated\"); })\n                setRevealAlert(false);\n            } else {\n                setAlertStyle({\n                    left: \"0\",\n                    top: \"0\",\n                    variantHead: \"danger\",\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n                    inputField: 'true',\n                    inputValue: inputValue,\n                    color1: \"danger\",\n                    button1: \"Add\",\n                    color2: \"secondary\",\n                    button2: \"Cancel\"\n                });\n            }\n        }\n        if (decision1 === \"Cancel\") {\n            setRevealAlert(false);\n        }\n    }\n    const reloadNeeded = (a) => {\n        window.location.reload();\n    }\n    const getImgUrl = (url) => {\n        document.querySelector(\"#background\").value = url;\n        setTestBackground(url);\n    }\n    const getGradientCSS = (n) => {\n        document.querySelector(\"#backgroundGradient\").value = n;\n        setTestGradient(n)\n    }\n    function handleUpdateQuestion(q) {\n        if (q > 0) { setDisplayQ(q - 1) }\n        else {\n            setDisplayQ(q);\n        }\n    }\n    function handleReturnQuestion(t) {\n        let arr = [...testArray];\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\n        setTestArray(arr);\n    }\n    function handleCopyQuestion(e) {\n        localStorage.setItem('questionCopy', JSON.stringify(testArray[displayQ]));\n    }\n    function handleInsertQuestion(e) {\n        let arr = [];\n        let questCopy = JSON.parse(localStorage.getItem('questionCopy'));\n        if (questCopy === null) return\n        for (let i = 0; i < testArray.length; i++) {\n            if (i === displayQ + 1) arr.push(questCopy)\n            arr.push(testArray[i])\n        }\n        if (displayQ === testArray.length - 1) arr.push(questCopy)\n        setTestArray(arr)\n        setDisplayQ(displayQ + 1)\n    }\n    function handleAdd(e) {\n        // e.preventDefault()\n        setTestArray(oldArray => [...oldArray, {\n            question: '',\n            rights: [{ text: '', img: '', choice: true }],\n            wrongs: [{ text: '', img: '', choice: false }],\n            info: {\n                positions: 2,\n                correct: 1,\n                layout: '',\n                img: ''\n            }\n        }]);\n        setDisplayQ(testArray.length);\n        console.log(displayQ);\n    }\n    function handleShow() {\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\n        for (let i = 0; i < arr.length; i++) {\n            demoArr.push(arr[i]);\n        }\n        console.log(demoArr);\n        show ? setShow(false) : setShow(true)\n    }\n    function handleDelete() {\n\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\n    }\n    function handleMove(t) {\n        if (t[0] !== t[1]) {\n            let arr = [];\n            let record1 = testArray[t[0]];\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === t[1]) {\n                    if (t[1] > t[0]) {\n                        arr.push(testArray[i]);\n                        arr.push(record1);\n                    } else {\n                        arr.push(record1);\n                        arr.push(testArray[i]);\n                    }\n                }\n                else if (i !== t[0]) arr.push(testArray[i])\n            }\n            setTestArray(arr);\n            setDisplayQ(t[1])\n            console.log(record1, arr)\n        }\n    }\n    function getTestfromDB(n) {\n        console.log(n)\n        let newTest = n;\n        setTestArray(newTest.test);\n        setDisplayQ(0);\n        document.querySelector(\"#questionPage\").value = 1;\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\n        defOptionArray = newTest.main.categories\n        setSelectedOption(defOptionArray);\n        document.querySelector(\"#testName\").value = newTest.main.name;\n        setTestName(newTest.main.name);\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\n        setVisibility(newTest.main.visibility);\n        document.querySelector(\"#editability\").value = newTest.main.editability;\n        setEditability(newTest.main.editability);\n        document.querySelector(\"#background\").value = newTest.main.background;\n        setTestBackground(newTest.main.background);\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n        setTestGradient(newTest.main.gradient);\n        document.querySelector(\"#hh\").value = newTest.main.hours;\n        setTestHH(newTest.main.hours);\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\n        setTestMM(newTest.main.minutes);\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\n        setTestSS(newTest.main.seconds);\n    }\n    function upload(e) {\n        let text = {\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        };\n        localStorage.setItem('testCopy', JSON.stringify(text));\n        db.collection(\"tests\").add(text)\n            .then(result => {\n                console.log(\"file created in DB\");\n                reloadNeeded()\n            })\n            .catch(e => { console.log(\"no connectionto DB\"); })\n    }\n    function download(e) {\n        let text = JSON.stringify({\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        });\n        console.log(text)\n        let filename = \"test.txt\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n    function update(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Warning\",\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\n            color1: \"danger\",\n            button1: \"Update\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function handleNewCategory(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Alert\",\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n            inputField: 'true',\n            inputValue: \"\",\n            color1: \"danger\",\n            button1: \"Add\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function startNewTest(e) {\n        if (testName > \"\") {\n            setRevealAlert(true);\n            setAlertStyle({\n                variantHead: \"warning\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n        }\n    }\n    const saveReload = (a) => {\n        if (a) {\n            let text = {\n                main: {\n                    author: currentUser.uid,\n                    authorName: currentUser.displayName,\n                    categories: selectedOption,\n                    name: testName,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            reloadNeeded();\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        let pasteItem = JSON.parse(localStorage.getItem('testCopy'));\n        if ((pasteItem !== null)) getTestfromDB([pasteItem])\n        localStorage.removeItem('testCopy');\n    }, []);\n    return (\n        <div style={{ maxWidth: \"1440px\", overflow: \"hidden\" }}>\n            <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onLocal={n=>{console.log(\"test loaded\")} } onChange={n => getTestfromDB(n)} />\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <div className='navContainer' style={{ width: '97%', margin: '40px auto', padding: \"10px\" }}>\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#f5d142' }}><strong>Test editing panel</strong></h3>\n\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128190;</button>\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload to web &#128228;</button>\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update on web &#128257;</button>}\n\n            </div>\n            <label className='headerStyle' style={{ width: '100%' }} >Enter your test Name\n                    <input id=\"testName\" style={{ width: '100%' }} onChange={e => setTestName(e.target.value)} />\n            </label>\n            <label className='headerStyle' style={{ width: '43%' }} >Is this test Private or Public?\n                    <select id=\"visibility\" type=\"\" style={{ width: '50%', float: 'right' }} onChange={e => setVisibility(e.target.value)} >\n                    <option value=\"Private\">Private</option>\n                    <option value=\"Public\">Public</option>\n                </select>\n            </label>\n            <label className='headerStyle' style={{ width: '55%' }} >Would you allow others to edit content of test?\n                    <select id=\"editability\" style={{ width: '30%', float: 'right' }} onChange={e => setEditability(e.target.value)}>\n                    <option value=\"Yes\">Yes</option>\n                    <option value=\"No\">No</option>\n                </select>\n            </label>\n            {selectedOption &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\n            }\n            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: 0 }} onClick={e => handleNewCategory(e)}>Add New Category</button>\n            <h4 className='headerStyle' style={{ width: '100%' }} >Enter Time limits (if there are no time limit enter 0 0 0) :\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '9%' }} onChange={e => setTestHH(e.target.value)} /> hh\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '9%' }} onChange={e => setTestMM(e.target.value)} /> mm\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '9%' }} onChange={e => setTestSS(e.target.value)} /> ss\n            </h4>\n            <div className=\"containerGrid\">\n                <section className='panel1' style={{ width: '100%' }}>\n                    <label className='headerStyle'>\n                        <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />\n                 Add/change BACKGROUND to your test\n                </label>\n                    <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '98%' }}>\n\n                        <h4 className='headerStyle' style={{ width: '100%' }} >Enter test background image link or upload your image from computer</h4>\n                        <input id=\"background\" style={{ width: '100%' }} onChange={e => setTestBackground(e.target.value)} />\n                        <Cloudinary style={{ width: \"90%\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                    </div>\n                </section>\n                <section className='panel2' style={{ width: '100%' }}>\n                    <label className='headerStyle'>\n                        <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\n                    Add/change background GRADIENT to your test\n               </label>\n                    <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '98%' }}>\n                        <h4 className='headerStyle' style={{ width: '100%' }} >Enter test background gradient CSS here</h4>\n                        <textarea id=\"backgroundGradient\" style={{ width: '100%' }} onChange={e => setTestGradient(e.target.value)} />\n                        <GetGradient reloadNeeded={saveReload} onChange={n => getGradientCSS(n)} />\n                    </div>\n                </section>\n            </div>\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\n            {show &&\n                <div className=\"modalContainer\" >\n                    <div className=\"closeTag\" onClick={(e) => setShow(false)}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\n                </div>\n            }\n            {testArray[displayQ] &&\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\n            }\n\n        </div >\n    )\n}\nexport default ToRenderEverything;\n","import React from \"react\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// Components\nimport Signup from \"./components/Signup\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport Logout from \"./components/Logout\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport DirectTestPage from \"./components/DirectTestPage\"\nimport Nav from \"./components/Nav\"\n//Pages\nimport testPage from './pages/testPage';\nimport makeTest from './pages/makeTest';\n\nfunction App() {\n\n  return (\n\n    <Router>\n      <AuthProvider>\n          <Nav />\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\n            <Route exact path=\"/test\" component={testPage} />\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\n          </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/Logout.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/alertMenu.js","components/testNav/index.js","components/LayoutBox/index.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/CustomSelect.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","console","log","updateProfile","displayName","photoURL","then","catch","error","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","to","e","a","preventDefault","current","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","Dashboard","toLogin","setToLogin","width","marginLeft","marginRight","src","alt","onClick","Login","display","alignItems","justifyContent","margin","backgroundImage","Logout","logoutHandle","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","Cloudinary","imageSelected","setImageSelected","onChange","event","target","files","formData","FormData","append","Axios","post","response","data","parentElement","previousSibling","getImgUrl","pictureUpload","cursor","textAlign","UpdateProfile","userNameRef","userURLRef","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","document","querySelector","childNodes","AlertMenu","height","position","zIndex","transformOrigin","transform","styling","variantHead","heading","text","inputField","marginBottom","inputValue","color1","block","onReturn","button1","color2","button2","TestNav","timerInterval","stringTime","hours","minutes","seconds","displayTime","setDisplayTime","revealAlert","setRevealAlert","alertStyle","setAlertStyle","secondsLeft","h","m","s","stopTest","clearInterval","classList","add","querySelectorAll","forEach","userItem","onExit","questionNumberSet","n","questionNow","Number","isInteger","parseInt","qNumber","navButton","remove","decision1","top","left","setInterval","background","fontSize","min","max","toString","right","padding","borderWidth","marginTop","borderRadius","LayoutBox","i","length","checked","checkedMarks","indexOf","opacity","vis","color","maxHeight","minWidth","lineHeight","textShadow","question","flexWrap","overflow","answers","map","answerOption","j","choice","checkingMulti","img","backgroundRepeat","backgroundSize","LayoutSimple","window","innerWidth","info","alignSelf","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","gradientValue","gradient","comma","layout","ch","GetResults","db","firestore","testRecords","setTestsRecords","resultsData","collection","where","testId","get","querySnapshot","doc","sort","b","result","time","fetchData","test","ResultsDisplay","testeeName","setTesteeName","testeeId","uid","handleDont","location","reload","timeInSeconds","t","split","alignContent","rate","res","userId","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","visible","setVisible","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","toFixed","answersSet","rights","concat","wrongs","positions","local","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollpased","imgDisplay","setImgDisplay","handleNavCollpase","imgLink","setAttribute","data-toggle","data-target","aria-controls","aria-expanded","aria-label","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","option","isSelected","control","styles","backgroundColor","singleValue","isDisabled","transition","CustomSelect","label","options","isMulti","closeMenuOnSelect","isSearchable","GetTests","testRecordsDisplay","setTestsRecordsDisplay","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","testFromDB","setTestFromDB","checkEditLocalTestVisible","setCheckEditLocalTestVisible","arrTemp","forPage","docs","filter","author","editability","visibility","nameA","toUpperCase","nameB","fetchCategories","recordSet","tempArr","findIndex","whiteSpace","recId","getAttribute","handleLink","elementPos","x","objFound","authorName","handleDelete","textOverflow","item","handleClick","evt","f","r","FileReader","onload","parse","onLocal","readAsText","alert","readSingleFile","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","l","getTestfromDB","GetText","answer","answerText","setAnswerText","setImgLink","checkBox","setCheckBox","sendBack","num","cor","changeInput","changeImage","GetAnswers","setAnswers","float","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","demoArr","emptyQ","defOptionArray","testName","setTestName","authorId","testAuthor","setTestAuthor","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","newTest","removeItem","set","newItem","element","createElement","encodeURIComponent","body","appendChild","click","removeChild","download","upload","size","getGradientCSS","oldArray","record1","handleMove","slice","handleShow","handleUpdateQuestion","questCopy","handleInsertQuestion","pointerEvents","Object","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","exact","path","makeTest","testPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a97b0185.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n      setToRoot(true);\r\n     \r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Sign Up\r\n            </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Already have an account? <Link to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { Card, Button, Alert, Container} from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const [toLogin, setToLogin] = useState(false);\r\n  if (toLogin===true){return <Redirect to=\"/login\" />}\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      setToLogin(true);\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\", width:\"100%\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Profile</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <h6 className=\"text-center mb-4\"> <strong>Display Name:</strong> {currentUser.displayName}</h6>\r\n            <h6 className=\"text-center mb-4\">  <strong>Email:</strong> {currentUser.email} </h6>\r\n            <img style={{width:'70%', marginLeft:\"15%\",marginRight:\"15%\"}} src={currentUser.photoURL>\"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"./images/defaultIcon.png\"} alt=\"profile pic\"/>\r\n            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n              Update Profile\r\n          </Link>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          <Button variant=\"link\" onClick={handleLogout}>\r\n            Log Out\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      // history.push(\"/test-editor/\")\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div style={{display:'flex',alignItems:'center',justifyContent:'center', minHeight: \"100vh\", margin:0, backgroundImage:\r\n    'repeating-linear-gradient(45deg, rgba(0,0,0,0.03) 0px, rgba(0,0,0,0.03) 2px,transparent 2px, transparent 4px),linear-gradient(90deg, rgb(250, 170, 211),rgb(80, 78, 169))' }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Log In</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Log In\r\n            </Button>\r\n            </Form>\r\n            <div className=\"w-100 text-center mt-3\">\r\n              <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            {message && <Alert variant=\"success\">{message}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Reset Password\r\n            </Button>\r\n            </Form>\r\n            <div className=\"w-100 text-center mt-3\">\r\n              <Link to=\"/login\">Login</Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input type='file' onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button\" onClick={(e)=>{pictureUpload(e)}}><h5 style={{cursor: \"pointer\", textAlign:\"center\"}}>Upload Image</h5></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef= useRef()\r\n  const userURLRef= useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser} = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const getImgUrl = (url) => {\r\n    document.querySelector(\"#userURL\").childNodes[1].value=url;\r\n}\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value!== currentUser.displayName)||(userURLRef.current.value!== currentUser.photoURL)){\r\n      promises.push(updateUser(userNameRef.current.value, userURLRef.current.value))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        // history.push(\"/test-editor/\")\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUDNAME);\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUD_PRESET);\r\n  },[])\r\n\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n          <Form.Group id=\"userName\">\r\n                <Form.Label>User's Name</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\" \r\n                  ref={userNameRef}\r\n                  defaultValue={currentUser.displayName}\r\n                  placeholder=\"Leave blank to keep the same\"  />\r\n              </Form.Group>\r\n              \r\n                               \r\n                            \r\n              <Form.Group id=\"userURL\">\r\n                <Form.Label>User's picture link</Form.Label>\r\n                <Form.Control \r\n                type=\"text\" \r\n                ref={userURLRef}\r\n                defaultValue={currentUser.photoURL}\r\n                placeholder=\"Leave blank to keep the same\"  />\r\n                 <Cloudinary style={{width: \"200px\", objectFit: \"cover\", margin: \"10px\"}} getImgUrl={getImgUrl} />\r\n              </Form.Group>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","import React from \"react\"\r\nimport { Button, Card, Alert} from \"react-bootstrap\"\r\n\r\nexport default function AlertMenu(props) {\r\n\r\n  return (\r\n    \r\n      <div style={{width:'100vw', height:'100vh', position:\"absolute\"}} >\r\n        <Card style={{position:\"relative\",zIndex:1000,transformOrigin: '50% 50%',transform: 'translate(center, center)',margin:'auto', maxWidth: \"400px\" }}>\r\n          <Card.Body>\r\n          <Alert style={{textAlign:\"center\"}} variant={props.styling.variantHead}>{props.styling.heading}</Alert>\r\n            <h5 className=\"text-center mb-2\">{props.styling.text}</h5>\r\n            {props.styling.inputField && <input id=\"inputField\" style={{width:\"100%\", marginBottom:\"10px\"}} defaultValue={props.inputValue} />}\r\n            <Button variant={props.styling.color1} block onClick={e=>{props.onReturn(props.styling.button1, (props.styling.inputField ?document.querySelector(\"#inputField\").value : null));}}>\r\n                {props.styling.button1}\r\n            </Button>\r\n            <Button variant={props.styling.color2} block onClick={e=>{props.onReturn(props.styling.button2)}}>\r\n                 {props.styling.button2}\r\n            </Button>\r\n\r\n          </Card.Body>\r\n        </Card>\r\n\r\n      </div>\r\n   \r\n  )\r\n}","import React, { Fragment, useState } from 'react';\nimport AlertMenu from '../alertMenu';\nfunction TestNav(props) {\n    var timerInterval\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Finish\") { \n           stopTest();\n        }\n    }\n    function timerDraw(event) {\n        let seconds = props.seconds;\n        let minutes = props.minutes;\n        let hours = props.hours;\n        questionNumberSet('0');\n        event.preventDefault();\n        if ((seconds !== 0) || (minutes !== 0) || (hours !== 0)) {\n            timerInterval = setInterval(function () {\n                secondsLeft--;\n                if (seconds === 0) {\n                    seconds = 59;\n                }\n                else seconds--;\n                if (seconds === 59) {\n                    if (minutes === 0) {\n                        minutes = 59;\n                        hours--;\n                    } else minutes--;\n                }\n                setDisplayTime(stringTime(hours, minutes, seconds));\n                if ((secondsLeft === 0)) {\n                    clearInterval(timerInterval);\n                    document.querySelector(\".testNav\").classList.add('invisible');\n                    props.onExit(\"00:00:00\");\n                }\n\n            }, 1000);\n        }\n    };\n    function stringTime(h, m, s) {\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\n    }\n    function stopTest() {\n        clearInterval(timerInterval);\n        console.log('end')\n        document.querySelector(\".testNav\").classList.add('invisible');\n        let navButton = document.querySelectorAll(\".testNav\");\n        navButton.forEach(function (userItem) {\n            userItem.classList.add('invisible');\n        });\n        props.onExit(displayTime);\n    }\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else {\n                    questionNow.value = 1;\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Would you like to finish the test?`,\n                        color1: \"danger\",\n                        button1: \"Finish\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                }\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                navButton = document.querySelectorAll(\".testNavLight\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    return (\n        <Fragment>\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <button className=\"testNav\" id=\"startNav\" style={{ position: 'absolute', top: '44vh', left: \"43vw\", zIndex: '200' }}\n                onClick={timerDraw}>Start</button>\n            <button className=\"testNav invisible\" style={{ position: \"absolute\", top: '48vh', left: 0, background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <label className=\"testNav invisible\" style={{ margin:'1.25vh 1vw', fontSize: 'calc(10px + 1vw)' }} >\n                <input className=\"testNavLight text-center invisible\" style={{ width: '3ch', fontSize: 'calc(10px + 1vw)' }} type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n                of {props.qNumber}</label>\n            <button className=\"testNav invisible \" style={{ position: \"absolute\", top: '48vh', right: 0, background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n\n            <input className=\"testNav text-right invisible\" type=\"text\" value={displayTime} style={{ position: \"absolute\", background: \"transparent\", top: 0, left: '38vw', padding: 0, borderWidth: 0, width: '8ch' }} />\n            <button className=\"testNav invisible\" id=\"finishBtn\"  style={{ position: \"absolute\", top: 0, right: 0,marginTop:'1.25vh', backgroundImage:`url(${process.env.PUBLIC_URL + \"/icons/finish.svg\"})`,width: \"9vh\", height: \"3vh\", borderWidth: '0px',borderRadius:'5px', zIndex: 1500 }}\n                onClick={stopTest}></button>\n\n        </Fragment>\n    );\n}\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst LayoutBox = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i < document.querySelectorAll(\".checkOut\").length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n\n    });\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n            <div id='questionContainerBox' style={{ opacity: props.vis }}>\n                <section className=\"questionSection\">\n                    <Textfit max={256}\n                        min={24}\n                        style={{\n                            color:'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin:'auto',\n                            textAlign:\"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n              \n                </section>\n                <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '100%', overflow:'visible' }}>\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{ width: '44%',maxHeight: '200px',margin: '1px', maxWidth:'200px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Box\" + j}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n            </div>\n        </Fragment>\n    );\n}\nexport default LayoutBox;","import React, { useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nfunction LayoutSimple(props) {\n\n    useEffect(() => {\n        for (let i = 0; i < document.querySelectorAll(\".checkOut\").length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n        console.log(props.answers)\n    }, []);\n    function checkingMulti(e) {\n        if (props.info.correct === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <div id='questionContainerSimple' style={{ opacity: props.vis }}>\n            <section className=\"questionSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\n                <div style={{width:'100%',display: 'flex',justifyContent:'center', alignItems: 'center', height: window.innerWidth < 700 ? '30%' : '70%' }}>\n                    <img src={props.info.img} style={{ height:'100%', alignSelf:'center'}} alt={props.info.img} />\n                </div>\n                <div style={{width:'100%', height: window.innerWidth < 700 ? '70%' : '30%' }}>\n                    <Textfit max={256}\n                        min={24}\n                        style={{\n                            color: 'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin: 'auto',\n                            textAlign: \"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n                </div>\n            </section>\n            <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\n                {props.answers.map((answerOption, j) => {\n                    return (\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256}\n                                    min={24}\n                                    style={{\n                                        minHeight: \"90%\",\n                                        maxHeight: \"90%\",\n                                        minWidth: \"90%\",\n                                        maxWidth: \"90%\",\n                                        lineHeight: 1,\n                                        textAlign: \"center\",\n                                        textShadow: '1px 1px 2px black'\n                                    }}>{answerOption.text}</Textfit>\n                            </div>\n                        </label>\n                    )\n                })}\n            </section>\n        </div>\n    );\n}\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\nimport LayoutBox from '../../components/LayoutBox';\nimport LayoutSimple from '../../components/LayoutSimple';\nconst QuestionDisplay = props => {\n    const [backgroundVal,setBackgroundVal]= useState('')\n    useEffect(() => {\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\n        setBackgroundVal(gradientValue+comma+backgroundValue)\n        console.log(props.question)\n    }, []);\n    return (\n            <div style={{height:'100vh',width:'100%',backgroundImage:backgroundVal, backgroundRepeat: \"no-repeat\", backgroundSize: 'cover'}}>\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}    \n            </div>\n    );\n}\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nfunction GetResults(props) {\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    useEffect(() => {\n        let resultsData = []\n        const fetchData = async () => {\n\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    resultsData.push(doc.data());\n                });\n                resultsData.sort(function (a, b) {\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\n                });\n                setTestsRecords(resultsData);\n            });\n\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\n        };\n        fetchData();\n        console.log(testRecords);\n\n    }, [])\n\n    return (\n        <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n            <table style={{ margin:'auto' }} >\n                <tr>\n                    <th>Name</th>\n                    <th>Result</th>\n                    <th>Time Left</th>\n                </tr>\n                <tbody>\n                {testRecords && testRecords.map((test, j) => {\n                    return (\n                        <tr key={j}>\n                            <td key={\"name\"+j}>{test.displayName}</td>\n                            <td key={\"result\"+j}>{test.result}</td>\n                            <td key={\"time\"+j}>{test.time}</td>\n                        </tr>\n\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default GetResults;","import React, { useState, useRef } from 'react';\nimport firebase from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport GetResults from \"../getResults\";\n// import { Redirect, Link } from \"react-router-dom\"\nconst ResultsDisplay = props => {\n    const { currentUser } = useAuth()\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\n    // const [toTest, setToTest] = useState([false]);\n\n\n    // useEffect(() => {\n    // if (toTest[0]===true){\n    //     return <Redirect to=\"/update-profile\" />;}\n    // },[toTest]);\n    function handleSave() {\n        const db = firebase.firestore();\n        db.collection(\"results\").add({\n            testId: props.testId,\n            displayName: testeeName,\n            userId: testeeId.current,\n            result: props.rate,\n            time: timeInSeconds(props.time)\n        }).then(result=>{handleDont()})\n        .catch(e=>{console.log('fail to record result')})\n        \n    }\n    function handleDont() {\n        // history.push(\"/test-editor/test\")\n        window.location.reload();\n        console.log(\"redirect to /test\")\n        // setToTest([true]);\n    }\n    function timeInSeconds(t) {\n        let time = t.split(':');\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\n    }\n    return (\n\n        <div style={{ display: 'flex', flexWrap: 'wrap', width: '100%', height: '100vh', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '1px 1px #f5d142',\n         backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' , backgroundSize: '100% 100%' }}>\n           {props.testId.length > 0 &&  <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\n           {props.testId.length > 0 && <GetResults testId={props.testId} />}\n           <button className=\"testNav\" style={{position:\"absolute\", top:0,right:0, background:\"transparent\",borderWidth:'0px', zIndex:1500}}\n                    onClick={e => handleDont(e)}>\n                        <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:\"4vh\",height:\"4vh\"}}/>\n                        </button>  \n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\n             <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\"}}>\n             <table style={{ margin: 'auto' }} >\n                    <tr>\n                        <th>Question</th>\n                        <th>Result</th>\n                    </tr>\n\n                    {props.res.map((res, j) => {\n                        return (\n                            <tr key={\"n\"+j}>\n                                <td key={\"num\"+j} >{j + 1}</td>\n                                <td key={\"correct\"+j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            </div>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\n\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\n            </label>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</button>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</button>}\n            <div style={{display: 'flex', width: '100%',justifyContent: 'center'}}>\n            {props.testId.length <= 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</button>}\n            </div> \n        </div>\n    );\n}\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\nimport TestNav from '../testNav';\nimport QuestionDisplay from '../QuestionDisplay';\nimport ResultsDisplay from '../ResultsDisplay';\nimport \"./style.css\";\n\nfunction TestRun(props) {\n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\n  var testBackground = props.test.main.background;\n  var quizMain = props.test.test;\n  var test = [];\n  var choiceSet = [];\n  const [displayQ, setDisplayQ] = useState(0);\n  const [resultTime, setResultTime] = useState('');\n  const [choices, setChoices] = useState([]);\n  const [results, setResults] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [visible, setVisible] = useState(0);\n  const [testGenerated, setTestGenerated] = useState('');\n  function randomizer(arr) {\n\n    let testArray = [];\n    let answerCount = arr.length;\n    let positionN = 0;\n    for (let i = 0; i < answerCount; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n\n    }\n    return testArray\n  }\n\n  function randomChoice(arr, n) {\n\n    let testArray = [];\n    let positionN = 0;\n    for (let i = 0; i < n; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n    }\n    return testArray\n  }\n  function handleChoices(ch) {\n    let localChoices = choices;\n    localChoices.splice(displayQ, 1, ch)\n    setChoices(localChoices);\n\n  }\n  function handleChangeQuestion(q) {\n    if (q > 0) { setDisplayQ(q - 1) }\n    else {\n      setDisplayQ(q);\n      setVisible(1);\n\n    }\n  }\n  function correctAnswers() {\n    let arr = [];\n    let arrSmall = [];\n    for (let i = 0; i < testGenerated.length; i++) {\n      arrSmall = [];\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\n      }\n      arr.push(arrSmall)\n    }\n    return arr\n  }\n  function handleQuizEnd(t) {\n    let arr = [];\n    let n = 0;\n    console.log(t);\n    let correctArr = correctAnswers();\n    setVisible(0);\n    for (let i = 0; i < correctArr.length; i++) {\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\n      if (arr[i] === true) n += 1\n    }\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\n    setRating(((n / correctArr.length * 100).toFixed(2)));\n    setResults(arr);\n    setResultTime(t);\n    console.log(results)\n  }\n\n  useEffect(() => {\n    console.log(props.test.id)\n    let answersSet = [];\n    for (let i = 0; i < quizMain.length; i++) {\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\n      answersSet = randomizer(answersSet);\n\n      test.push({\n        \"info\": quizMain[i].info,\n        \"question\": quizMain[i].question,\n        \"answers\": answersSet,\n      })\n      choiceSet.splice(0, 0, [])\n\n    }\n    setChoices(choiceSet);\n    setTestGenerated(test);\n    document.querySelector(\"nav.navbar\").style.display = 'none';\n  }, []);\n\n\n\n  return (\n    <>\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testId={props.local?\"\":props.test.id} />}\n      {testGenerated && results.length <= 0 && \n      <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\n      <TestNav qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\n      </div>\n      }\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient}   info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\n    </>\n  )\n}\n\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\nimport firebase from \"../firebase\";\nimport {useParams} from 'react-router-dom'\nimport TestRun from './TestRun'\nexport default function DirectTestPage() {\n  // http://localhost:3000/taketest/DDKOWkpHKTC3l2Aav7bC\n  const [test, setTest]=useState({});\n  const [loading, setLoading]=useState(false)\n  const db = firebase.firestore();\n  let { id } = useParams();\n  useEffect(() => {\n     db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\n      \n      setTest({ ...querySnapshot.data(), id: id } );\n      setLoading(true);\n     })\n     .catch(error=>{\n      console.log(error)\n     })\n        \n    \n\n  }, [])\n  return (\n    <>\n{loading && <TestRun test={test} local={false} />}\n    </>\n  )\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport  \"./Nav.scss\";\r\n\r\n\r\nfunction Nav(props) {\r\n    const [isNavCollapsed, setIsNavCollpased] = useState(true);\r\n    const { currentUser } = useAuth();\r\n    const [imgDisplay, setImgDisplay] = useState('');\r\n    \r\n    function handleNavCollpase() {\r\n        setIsNavCollpased(!isNavCollapsed)\r\n    }\r\n    useEffect(() => {\r\n        let imgLink =  process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"\r\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\r\n        else{\r\n            document.querySelector('#imgMember').setAttribute('src',imgLink)\r\n            setImgDisplay(imgLink)\r\n        }\r\n        \r\n\r\n    }, [currentUser]);\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg\" >\r\n            \r\n            {window.innerWidth<1000 ? <Link to=\"/\"><img className=\"member-photo\" id='imgMember' src={imgDisplay} alt=\"member avatar\"/></Link>\r\n             :<Link to=\"/\"> <img src={ process.env.PUBLIC_URL+\"/icons/logoName.svg\"} alt=\"close\" style={{width:'3.2em',height:'4em'}}/></Link> }\r\n\t\t\t{window.innerWidth<1000 ? <Link to=\"/login\" className=\"navHeader\" style={{marginRight:0}}>Quiz Land</Link> : null}\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \r\n                data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded={!isNavCollapsed ? true : false} aria-label=\"Toggle navigation\"\r\n                onClick={handleNavCollpase}>\r\n                <div style={{ width: '1em', height: '1em' }}>\r\n                   {isNavCollapsed ? \r\n                     <img src={ process.env.PUBLIC_URL+\"/icons/burger.svg\"} alt=\"close\" style={{width:'1em',height:'1em'}}/> :\r\n                    <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'1em',height:'1em'}}/>}\r\n                </div>\r\n            </button>\r\n            <div className={`${isNavCollapsed ? 'collapse' : ''} navbar-collapse`} id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n\r\n\r\n                   {!currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Login\r\n                        </Link>\r\n\r\n                    </li>}\r\n                    {!currentUser && <li className=\"nav-item\">\r\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Signup\r\n                    </Link>\r\n\r\n                    </li>}\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/test\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Take tests\r\n                    </Link>\r\n                    </li>\r\n                   {  currentUser ? <li className=\"nav-item\">\r\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            Create tests\r\n                    </Link>\r\n                    </li>:\"\"}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\r\n                            About\r\n                    </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollpase()} >\r\n                            Logout\r\n                    </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {window.innerWidth<1000 ? null: <Link to=\"/\" className=\"nav-link\">\r\n               <img className=\"member-photo\" id='imgMember' src={imgDisplay} alt=\"member avatar\"/>\r\n            </Link>}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nimport CustomSelect from './CustomSelect';\nimport { useAuth } from \"../contexts/AuthContext\"\nfunction GetTests(props) {\n    const db = firebase.firestore();\n    const { currentUser } = useAuth();\n    const [testRecords, setTestsRecords] = useState([]);\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [categories, setCategories] = useState([]);\n    const [testFromDB, setTestFromDB] = useState({})\n    const [checkEditLocalTestVisible, setCheckEditLocalTestVisible] = useState(false);\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('tests').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    props.reloadNeeded(true);\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n        if (decision1 === \"Proceed\") {\n            props.onChange(testFromDB);\n            props.onLocal(false);\n        }\n    }\n    function handleLink(e) {\n        let recId = e.target.getAttribute(\"value\");\n        console.log(recId)\n        setAlertStyle({\n            variantHead: \"success\",\n            heading: \"Direct link to Test\",\n            text: `https://sbolotnikov.github.io/test-editor/#/taketest/${recId}`,\n            color1: \"\",\n            button1: \"\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\n        let objFound = testRecords[elementPos];\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleClick(test) {\n        console.log(test.target.getAttribute(\"value\"))\n        if (props.forPage === 'create') {\n            setAlertStyle({\n                variantHead: \"danger\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n            setRevealAlert(true);\n            setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0])\n        } else { props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0]) }\n    }\n    const fetchData = async () => {\n        let arrTemp = [];\n        const data = await db.collection(\"tests\").get();\n        if (props.forPage === 'create')\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\n        else\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setTestsRecords(arrTemp)\n    };\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setCategories(arrTemp);\n    };\n    function readSingleFile(evt) {\n        var f = evt.target.files[0];\n        if (f) {\n            var r = new FileReader();\n            r.onload = function (e) {\n                setTestFromDB(JSON.parse(e.target.result));\n                if (props.forPage === 'create') {\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                        color1: \"danger\",\n                        button1: \"Proceed\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                } else {\n                    props.onChange(JSON.parse(e.target.result));\n                    props.onLocal(true);\n                }\n                // setLocalTest(true)\n            }\n            r.readAsText(f);\n\n        } else {\n            alert(\"Failed to load file\");\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        fetchData();\n    }, []);\n    useEffect(() => {\n        let recordSet = testRecords;\n        console.log(selectedOption);\n        if (selectedOption) {\n            for (let i = 0; i < selectedOption.length; i++) {\n                let tempArr = [];\n                for (let j = 0; j < recordSet.length; j++) {\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\n                }\n                recordSet = tempArr;\n            }\n        }\n        setTestsRecordsDisplay(recordSet);\n    }, [selectedOption])\n    return (\n        <div style={{ width: '100%', maxWidth:\"600px\", height:\"100%\", maxHeight:\"400px\" }}>\n            {categories &&\n                <CustomSelect isMulti={true} style={{ width: '100%', menuColor: 'red' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose categories\" />\n            }\n            {testRecordsDisplay && testRecordsDisplay.map((test, j) => {\n                return (\n                    <div key={\"divTests\" + j} style={{ display: \"flex\", margin: '5px' }} >\n                        <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: 0, whiteSpace: 'nowrap' }} key={\"linkBtnTests\" + j} value={test.id} onClick={e => handleLink(e)}>Link &#128279;</button>\n                        {(props.forPage === 'create') &&\n                            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: 0, whiteSpace: 'nowrap' }} key={\"eraseBtnTests\" + j} value={test.id} onClick={e => handleDelete(e)}>Del <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(.9vw,10px)', height: 'max(.9vw,10px)' }} /></button>\n                        }\n                        <div key={\"textTests\" + j} style={{ cursor: \"pointer\", whiteSpace: 'nowrap', width: \"auto\", overflow: 'hidden', textOverflow: 'ellipsis' }} value={test.id} onClick={e => handleClick(e)} >{test.main.name} by {test.main.authorName} </div>\n                    </div>\n                )\n            }\n            )}\n            {currentUser && <label className='headerStyle'>\n                <input type=\"checkbox\" id=\"checkEditLocalTest\" onChange={e => setCheckEditLocalTestVisible(document.querySelector(\"#checkEditLocalTest\").checked)} />\n              Load local test from your disk\n              </label>}\n            {currentUser && checkEditLocalTestVisible && <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />}\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n        </div>\n    );\n}\nexport default GetTests;","import React, { useState } from 'react';\nimport TestRun from '../../components/TestRun';\nimport GetTests from '../../components/getTests';\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport \"./style.css\";\n\n\nfunction ToRenderEverything() {\n\n  const [testLoad, setTestLoad] = useState(false);\n  const [localTest, setLocalTest] = useState(false);\n  const { currentUser } = useAuth()\n \n  function getTestfromDB(n) {\n    console.log(n)\n    setTestLoad(n);\n  }\n  return (\n    <div style={{ display: \"flex\",alignItems:\"center\",justifyContent:\"center\", height: \"100vh\" }}>\n        {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onLocal={l => setLocalTest(l)} onChange={n => getTestfromDB(n)} />}\n        {testLoad && <TestRun test={testLoad} local={localTest} />}\n    </div>\n  )\n}\n\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\nimport Cloudinary from './Cloudinary';\nfunction GetText(props) {\n    const [answerText, setAnswerText] = useState(props.answer.text);\n    const [imgLink, setImgLink] = useState(props.answer.img);\n    const [checkBox, setCheckBox] = useState();\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        setImgLink(url);\n        sendBack(answerText, url);\n    }\n    function changeInput(e) {\n        setAnswerText(e.target.value)\n        sendBack(e.target.value, imgLink);\n    }\n    function changeImage(e) {\n        setImgLink(e.target.value);\n        console.log(imgLink)\n        sendBack(answerText, e.target.value);\n    }\n    function sendBack(a, b) {\n        let choice = {\n            text: a,\n            img: b,\n            num: props.num\n        };\n        props.onChange(choice);\n    }\n    useEffect(() => {\n        setAnswerText(props.answer.text);\n        if (props.answer.img.length > 0) {\n            setCheckBox(true);\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\n            setImgLink(props.answer.img);\n        } else {\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\n            setCheckBox(false);\n        }\n    }, [props.answer]);\n    return (\n            <div >\n                <textarea style={{ width: '100%' }} value={answerText} onChange={e => changeInput(e)} />\n                <label style={{ color: 'black', width: '100%' }}>\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\n                check to add image link</label>\n                {checkBox && <div>\n                    <input type=\"text\" style={{ width: '80%', opacity: checkBox }} value={imgLink} onChange={e => changeImage(e)} />\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                </div>}\n            </div>\n    );\n}\nexport default GetText;","import React, { useEffect, useState } from 'react';\nimport GetText from './GetText.js';\n\nfunction GetAnswers(props) {\n    function handleNewText() {\n        let emptyNew = { text: '', img: '', choice: props.correct };\n        props.onNew(emptyNew);\n    }\n    function handlePasteText(){\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\n        if (pasteItem===null) return\n        pasteItem.choice=props.correct;\n        props.onNew(pasteItem);\n    }\n    function handleChangeText(t) {\n        let localArr = props.answers;\n        if ((t.text === '') && (t.img === '')) {\n            localArr.splice(t.num, 1);\n        } else {\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\n            localArr.splice(t.num, 1, answerRenew)\n        }\n        props.onChange(localArr);\n    }\n    function handleDelete(e) {\n        props.onDelete(e.target.value)\n    }\n    function handleCopy(e){\n        props.onCopy(e.target.value)\n    }\n    const [answers, setAnswers] = useState([]);\n    useEffect(() => {\n        setAnswers(props.answers);\n    }, [props.answers]);\n    return (\n        <div className=\"d-flex align-items-start justify-content-center\">\n            <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n                <div style={{ width: '100%' }}>\n                    {answers && answers.map((answerOption, j) => {\n                        return (\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\n                                {/* <Button style={{ float:\"right\" }} variant='danger' key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}>x</Button> */}\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\", margin:0 }}  key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>&#128209;Copy</button>\n                                {/* <Button style={{ float:\"right\" }} variant='info' key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>Copy</Button> */}\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />\n                                \n                            </div>\n                        )\n                    }\n                    )}\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handlePasteText() }}>&#128203;Paste</button>\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handleNewText() }}>New &#10133;</button>\n                    {/* <LayoutBox type={1} vis={1} question={'props.question'} checkedMarks={[1]} answers={[{ 'text': '6.96 miles/sec','img': '',  'choice': true }]} /> */}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\nimport GetAnswers from './GetAnswers.js';\nimport Cloudinary from './Cloudinary';\nfunction GetQuestion(props) {\n    var questionObj = {}\n\n    const [rights, setRights] = useState([]);\n    const [wrongs, setWrongs] = useState([]);\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        props.onChange({ \"mainImg\": url })\n    }\n    // list available layouts\n    var layouts = [\"simple\", \"box\"];\n    useEffect(() => {\n        document.querySelector(\"#question\").value = props.q.question;\n        document.querySelector(\"#mainImg\").value = props.q.info.img;\n        document.querySelector(\"#positionsCount\").value = props.q.info.positions;\n        document.querySelector(\"#correctCount\").value = props.q.info.correct;\n        document.querySelector(\"#layout1\").value = props.q.info.layout;\n        setRights(props.q.rights);\n        setWrongs(props.q.wrongs);\n\n    }, [props.q]);\n    function handleReturnData(t, corr) {\n        if (corr) {\n            questionObj.rights = t;\n            // setRights(localChoices);\n        } else {\n            questionObj.wrongs = t;\n            //  setWrongs(localChoices);\n        }\n        props.onChange(questionObj)\n    }\n    function handleCopyData(n, corr) {\n        (corr) ? questionObj = props.q.rights[n] : questionObj = props.q.wrongs[n];\n        localStorage.setItem('answerCopy', JSON.stringify(questionObj));\n    }\n    function newRecord(e, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.push({ text: e.text, img: e.img, choice: true });\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.push({ text: e.text, img: e.img, choice: false });\n        }\n        props.onChange(questionObj)\n    }\n\n\n    function delRecord(n, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.splice(n, 1);\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.splice(n, 1);\n        }\n        props.onChange(questionObj)\n    }\n\n    return (\n        <Fragment>\n            <h3 className='headerStyle'>Enter your question</h3>\n            <textarea id=\"question\" style={{ width: '100%' }} onChange={e => { props.onChange({ \"question\": e.target.value }) }} />\n            <h4 className='headerStyle'>Add your question main picture link (if you have one)</h4>\n            <input id=\"mainImg\" style={{ width: '100%' }} onChange={e => { props.onChange({ \"mainImg\": e.target.value }) }} />\n            <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n            <label style={{ width: '100%', color: 'black' }}>\n                <select id=\"layout1\" style={{ width: '40%', marginRight: '5px', marginTop: '5px' }} onChange={e => { props.onChange({ \"layout1\": e.target.value }) }} >\n                    {layouts.map((option, i) => {\n                        return (\n                            <option value={option} key={'layout_option' + i}>{option}</option>\n                        )\n                    }\n                    )}\n                </select>\n                        Choose question layout\n                    </label>\n            <label style={{ width: '50%', color: 'black' }}>\n                <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length + wrongs.length} style={{ width: '20%', marginRight: '5px', marginTop: '5px' }} onChange={e => { props.onChange({ \"positionsCount\": e.target.value }) }} />\n                        How many positions would be displayed?(Maximum should be less then answers options)\n                    </label>\n            <label style={{ width: '50%', color: 'black' }}>\n                <input id=\"correctCount\" type=\"number\" min={0} max={rights.length} style={{ width: '20%', marginRight: '5px', marginTop: '5px' }} onChange={e => { props.onChange({ \"correctCount\": e.target.value }) }} />\n                        How many correct options should be selected?(Maximum should be less then correct answers options)\n                    </label>\n            <div className=\"containerGrid\">\n                <section className='panel1' style={{ width: '100%' }}>\n                    <h3 className='headerStyle'>Enter text of the correct answers:</h3>\n                    {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\n                </section>\n                <section className='panel2' style={{ width: '100%' }}>\n                    <h3 className='headerStyle'>Enter text of the wrong answers:</h3>\n                    {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\n                </section>\n            </div>\n        </Fragment >\n    )\n}\nexport default GetQuestion;","import React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nfunction TestCreateNav(props) {\n\n    const [qArr, setqArr] = useState('');\n    const [moveVis, setMoveVis] = useState(false);\n    useEffect(() => {\n        document.getElementById('questionPage').value = 1;\n    }, []);\n    useEffect(() => {\n        let arr = [];\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\n        setqArr(arr);\n    }, [props.qNumber]);\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    function deleteRec() {\n        props.onDel('');\n        let n = document.querySelector(\"#questionPage\");\n        let k = \"\"\n        if (parseInt(n.value) !== props.qNumber) {\n            k = n.value;\n            n.value = k;\n        } else {\n            k = n.value;\n            n.value = (parseInt(k) - 1).toString();\n        }\n    }\n    function visibilityMoveTo() {\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\n        setMoveVis(!moveVis)\n    }\n    return (\n\n        <div className=\"navContainer\" style={{ position: 'relative' }} >\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#f5d142' }}><strong>Question editing panel</strong></h3>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet('1') }}>&#9198;</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <input className=\"testNavLight text-center\" style={{width:'3ch'}} type=\"number\" id=\"questionPage\"  min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\n            <button className=\"testNav\"\n                onClick={e => { deleteRec() }}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/>Delete</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\n            {(props.qNumber > 1) && <button className=\"testNav\"\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\n            }}>\n                {qArr.map((option, i) => {\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\n                }\n                )}\n            </select>}\n        </div>\n\n    );\n}\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nfunction GetGradient(props) {\n    const db = firebase.firestore();\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [gradients, setGradients] = useState([]);\n    const [newGradient, setNewGradient] = useState('');\n    const [newGradientName, setNewGradientName] = useState('');\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\n\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('gradients').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n    }\n    function handleAdd(e) {\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\n            .then(res => {\n                console.log('added');\n                props.reloadNeeded(true);\n                // setGradients(gradients.push({name:newGradientName,value:newGradient}))\n            })\n            .catch(error => {\n                console.log(\"can not delete a record\");\n            })\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\n        setAlertStyle({\n            left: \"0\",\n            top: \"0\",\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n\n        setRevealAlert(true)\n    }\n    function handleClick(grad) {\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\n        props.onChange(gr[0].value);\n    }\n    const fetchGradients = async () => {\n\n        const data = await db.collection(\"gradients\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n        setGradients(arrTemp);\n    };\n    useEffect(() => {\n        fetchGradients();\n    }, []);\n\n    return (\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {gradients && gradients.map((item, j) => {\n                return (\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius:'10px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\n                        <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  key={\"gradient_del_button\"+j} value={item.id} onClick={e => handleDelete(e)}>Del<img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(.9vw,10px)',height:'max(.9vw,10px)'}}/></button>\n                    </div>\n                )\n            }\n            )}\n            <label className='headerStyle'>\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} /> \n                Add new background gradient CSS to our database of pre-set styles\n            </label>\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '100%' }}>\n                <label className='headerStyle'>Enter gradient CSS</label>\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\n                <label className='headerStyle'>Enter gradient name</label>\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\n                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  onClick={e => handleAdd(e)}>Add &#128504;</button>\n            </div>\n        </div>\n    );\n}\nexport default GetGradient;","import React, { useState, useEffect } from 'react';\nimport GetQuestion from '../../components/GetQuestion.js';\nimport TestCreateNav from '../../components/testCreateNav';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport firebase from \"../../firebase\";\nimport \"./style.css\";\nimport GetTests from '../../components/getTests.js';\nimport GetGradient from '../../components/getGradient.js';\nimport AlertMenu from '../../components/alertMenu';\nimport Cloudinary from '../../components/Cloudinary';\nimport QuestionDisplay from '../../components/QuestionDisplay';\nimport CustomSelect from '../../components/CustomSelect';\n\nvar demoArr = [];\nvar emptyQ = {\n    question: '',\n    rights: [{ text: '', img: '', choice: true }],\n    wrongs: [{ text: '', img: '', choice: false }],\n    info: {\n        positions: 2,\n        correct: 1,\n        layout: '',\n        img: ''\n    }\n}\nfunction ToRenderEverything() {\n    var defOptionArray = [];\n    const { currentUser } = useAuth();\n    const [testName, setTestName] = useState('');\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\n    const [visibility, setVisibility] = useState('');\n    const [editability, setEditability] = useState('');\n    const [displayQ, setDisplayQ] = useState(0);\n    const [testBackground, setTestBackground] = useState('');\n    const [testGradient, setTestGradient] = useState('');\n    const [testHH, setTestHH] = useState(0);\n    const [testMM, setTestMM] = useState(0);\n    const [testSS, setTestSS] = useState(0);\n    const [show, setShow] = useState(false);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({})\n    const [testArray, setTestArray] = useState([emptyQ]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\n    const db = firebase.firestore();\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n        });\n        setCategories(arrTemp);\n    };\n    const onReturn = (decision1, inputValue) => {\n        if (decision1 === \"Proceed\") {\n            setRevealAlert(false);\n            reloadNeeded()\n        }\n        if (decision1 === \"Update\") {\n            setRevealAlert(false);\n            let text = {\n                main: {\n                    author: testAuthor.authorId,\n                    authorName: testAuthor.name,\n                    categories: selectedOption,\n                    name: testName,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            db.collection('tests').doc(testAuthor.testId).set(text)\n                .then(result => {\n                    console.log(\"file updated\");\n                    reloadNeeded();\n                })\n                .catch(e => { console.log(\"file fail to updated\"); })\n        }\n        if (decision1 === \"Add\") {\n            console.log(inputValue)\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\n                let newItem = { label: inputValue, value: inputValue }\n                db.collection('categories').add(newItem)\n                    .then(result => {\n                        console.log(\"categories updated\");\n                        setCategories([...categories, newItem]);\n                    })\n                    .catch(e => { console.log(\"categories fail to updated\"); })\n                setRevealAlert(false);\n            } else {\n                setAlertStyle({\n                    left: \"0\",\n                    top: \"0\",\n                    variantHead: \"danger\",\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n                    inputField: 'true',\n                    inputValue: inputValue,\n                    color1: \"danger\",\n                    button1: \"Add\",\n                    color2: \"secondary\",\n                    button2: \"Cancel\"\n                });\n            }\n        }\n        if (decision1 === \"Cancel\") {\n            setRevealAlert(false);\n        }\n    }\n    const reloadNeeded = (a) => {\n        window.location.reload();\n    }\n    const getImgUrl = (url) => {\n        document.querySelector(\"#background\").value = url;\n        setTestBackground(url);\n    }\n    const getGradientCSS = (n) => {\n        document.querySelector(\"#backgroundGradient\").value = n;\n        setTestGradient(n)\n    }\n    function handleUpdateQuestion(q) {\n        if (q > 0) { setDisplayQ(q - 1) }\n        else {\n            setDisplayQ(q);\n        }\n    }\n    function handleReturnQuestion(t) {\n        let arr = [...testArray];\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\n        setTestArray(arr);\n    }\n    function handleCopyQuestion(e) {\n        localStorage.setItem('questionCopy', JSON.stringify(testArray[displayQ]));\n    }\n    function handleInsertQuestion(e) {\n        let arr = [];\n        let questCopy = JSON.parse(localStorage.getItem('questionCopy'));\n        if (questCopy === null) return\n        for (let i = 0; i < testArray.length; i++) {\n            if (i === displayQ + 1) arr.push(questCopy)\n            arr.push(testArray[i])\n        }\n        if (displayQ === testArray.length - 1) arr.push(questCopy)\n        setTestArray(arr)\n        setDisplayQ(displayQ + 1)\n    }\n    function handleAdd(e) {\n        // e.preventDefault()\n        setTestArray(oldArray => [...oldArray, {\n            question: '',\n            rights: [{ text: '', img: '', choice: true }],\n            wrongs: [{ text: '', img: '', choice: false }],\n            info: {\n                positions: 2,\n                correct: 1,\n                layout: '',\n                img: ''\n            }\n        }]);\n        setDisplayQ(testArray.length);\n        console.log(displayQ);\n    }\n    function handleShow() {\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\n        for (let i = 0; i < arr.length; i++) {\n            demoArr.push(arr[i]);\n        }\n        console.log(demoArr);\n        show ? setShow(false) : setShow(true)\n    }\n    function handleDelete() {\n\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\n    }\n    function handleMove(t) {\n        if (t[0] !== t[1]) {\n            let arr = [];\n            let record1 = testArray[t[0]];\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === t[1]) {\n                    if (t[1] > t[0]) {\n                        arr.push(testArray[i]);\n                        arr.push(record1);\n                    } else {\n                        arr.push(record1);\n                        arr.push(testArray[i]);\n                    }\n                }\n                else if (i !== t[0]) arr.push(testArray[i])\n            }\n            setTestArray(arr);\n            setDisplayQ(t[1])\n            console.log(record1, arr)\n        }\n    }\n    function getTestfromDB(n) {\n        console.log(n)\n        let newTest = n;\n        setTestArray(newTest.test);\n        setDisplayQ(0);\n        document.querySelector(\"#questionPage\").value = 1;\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\n        defOptionArray = newTest.main.categories\n        setSelectedOption(defOptionArray);\n        document.querySelector(\"#testName\").value = newTest.main.name;\n        setTestName(newTest.main.name);\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\n        setVisibility(newTest.main.visibility);\n        document.querySelector(\"#editability\").value = newTest.main.editability;\n        setEditability(newTest.main.editability);\n        document.querySelector(\"#background\").value = newTest.main.background;\n        setTestBackground(newTest.main.background);\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n        setTestGradient(newTest.main.gradient);\n        document.querySelector(\"#hh\").value = newTest.main.hours;\n        setTestHH(newTest.main.hours);\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\n        setTestMM(newTest.main.minutes);\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\n        setTestSS(newTest.main.seconds);\n    }\n    function upload(e) {\n        let text = {\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        };\n        localStorage.setItem('testCopy', JSON.stringify(text));\n        db.collection(\"tests\").add(text)\n            .then(result => {\n                console.log(\"file created in DB\");\n                reloadNeeded()\n            })\n            .catch(e => { console.log(\"no connectionto DB\"); })\n    }\n    function download(e) {\n        let text = JSON.stringify({\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        });\n        console.log(text)\n        let filename = \"test.txt\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n    function update(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Warning\",\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\n            color1: \"danger\",\n            button1: \"Update\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function handleNewCategory(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Alert\",\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n            inputField: 'true',\n            inputValue: \"\",\n            color1: \"danger\",\n            button1: \"Add\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function startNewTest(e) {\n        if (testName > \"\") {\n            setRevealAlert(true);\n            setAlertStyle({\n                variantHead: \"warning\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n        }\n    }\n    const saveReload = (a) => {\n        if (a) {\n            let text = {\n                main: {\n                    author: currentUser.uid,\n                    authorName: currentUser.displayName,\n                    categories: selectedOption,\n                    name: testName,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            reloadNeeded();\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        let pasteItem = JSON.parse(localStorage.getItem('testCopy'));\n        if ((pasteItem !== null)) getTestfromDB([pasteItem])\n        localStorage.removeItem('testCopy');\n    }, []);\n    return (\n        <div style={{ maxWidth: \"1440px\", overflow: \"hidden\" }}>\n            <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onLocal={n=>{console.log(\"test loaded\")} } onChange={n => getTestfromDB(n)} />\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <div className='navContainer' style={{ width: '97%', margin: '40px auto', padding: \"10px\" }}>\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#f5d142' }}><strong>Test editing panel</strong></h3>\n\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128190;</button>\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload to web &#128228;</button>\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update on web &#128257;</button>}\n\n            </div>\n            <label className='headerStyle' style={{ width: '100%' }} >Enter your test Name\n                    <input id=\"testName\" style={{ width: '100%' }} onChange={e => setTestName(e.target.value)} />\n            </label>\n            <label className='headerStyle' style={{ width: '43%' }} >Is this test Private or Public?\n                    <select id=\"visibility\" type=\"\" style={{ width: '50%', float: 'right' }} onChange={e => setVisibility(e.target.value)} >\n                    <option value=\"Private\">Private</option>\n                    <option value=\"Public\">Public</option>\n                </select>\n            </label>\n            <label className='headerStyle' style={{ width: '55%' }} >Would you allow others to edit content of test?\n                    <select id=\"editability\" style={{ width: '30%', float: 'right' }} onChange={e => setEditability(e.target.value)}>\n                    <option value=\"Yes\">Yes</option>\n                    <option value=\"No\">No</option>\n                </select>\n            </label>\n            {selectedOption &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\n            }\n            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: 0 }} onClick={e => handleNewCategory(e)}>Add New Category</button>\n            <h4 className='headerStyle' style={{ width: '100%' }} >Enter Time limits (if there are no time limit enter 0 0 0) :\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '9%' }} onChange={e => setTestHH(e.target.value)} /> hh\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '9%' }} onChange={e => setTestMM(e.target.value)} /> mm\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '9%' }} onChange={e => setTestSS(e.target.value)} /> ss\n            </h4>\n            <div className=\"containerGrid\">\n                <section className='panel1' style={{ width: '100%' }}>\n                    <label className='headerStyle'>\n                        <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />\n                 Add/change BACKGROUND to your test\n                </label>\n                    <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '98%' }}>\n\n                        <h4 className='headerStyle' style={{ width: '100%' }} >Enter test background image link or upload your image from computer</h4>\n                        <input id=\"background\" style={{ width: '100%' }} onChange={e => setTestBackground(e.target.value)} />\n                        <Cloudinary style={{ width: \"90%\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                    </div>\n                </section>\n                <section className='panel2' style={{ width: '100%' }}>\n                    <label className='headerStyle'>\n                        <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\n                    Add/change background GRADIENT to your test\n               </label>\n                    <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '98%' }}>\n                        <h4 className='headerStyle' style={{ width: '100%' }} >Enter test background gradient CSS here</h4>\n                        <textarea id=\"backgroundGradient\" style={{ width: '100%' }} onChange={e => setTestGradient(e.target.value)} />\n                        <GetGradient reloadNeeded={saveReload} onChange={n => getGradientCSS(n)} />\n                    </div>\n                </section>\n            </div>\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\n            {show &&\n                <div className=\"modalContainer\" >\n                    <div className=\"closeTag\" onClick={(e) => setShow(false)}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\n                </div>\n            }\n            {testArray[displayQ] &&\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\n            }\n\n        </div >\n    )\n}\nexport default ToRenderEverything;\n","import React from \"react\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// Components\nimport Signup from \"./components/Signup\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport Logout from \"./components/Logout\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport DirectTestPage from \"./components/DirectTestPage\"\nimport Nav from \"./components/Nav\"\n//Pages\nimport testPage from './pages/testPage';\nimport makeTest from './pages/makeTest';\n\nfunction App() {\n\n  return (\n\n    <Router>\n      <AuthProvider>\n          <Nav />\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\n            <Route exact path=\"/test\" component={testPage} />\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\n          </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
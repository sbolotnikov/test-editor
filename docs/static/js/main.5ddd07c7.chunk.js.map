{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/Logout.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/alertMenu.js","components/testNav/index.js","components/LayoutBox/index.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/ChooseCategory/index.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","components/CustomSelect.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","console","log","updateProfile","displayName","photoURL","then","catch","error","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","to","e","a","preventDefault","current","length","className","style","width","maxWidth","src","alt","onSubmit","id","type","ref","required","disabled","Dashboard","toLogin","setToLogin","marginTop","padding","margin","onClick","Login","Logout","logoutHandle","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","Cloudinary","imageSelected","setImageSelected","display","alignItems","justifyContent","marginLeft","onChange","event","target","files","formData","FormData","append","Axios","post","response","data","parentElement","previousSibling","getImgUrl","pictureUpload","UpdateProfile","userNameRef","userURLRef","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","document","querySelector","childNodes","variant","AlertMenu","button1Color","setbutton1Color","button2Color","setbutton2Color","Object","values","keys","indexOf","styling","color1","color","color2","height","position","variantHead","heading","text","inputField","marginBottom","inputValue","backgroundColor","onReturn","button1","button2","TestNav","timerInterval","stringTime","hours","minutes","seconds","displayTime","setDisplayTime","revealAlert","setRevealAlert","alertStyle","setAlertStyle","secondsLeft","h","m","s","stopTest","clearInterval","classList","add","querySelectorAll","forEach","userItem","onExit","questionNumberSet","n","questionNow","Number","isInteger","parseInt","qNumber","navButton","remove","decision1","top","left","zIndex","setInterval","background","fontSize","min","max","toString","right","backgroundImage","borderWidth","borderRadius","LayoutBox","i","answers","checked","checkedMarks","opacity","vis","mode","minHeight","maxHeight","minWidth","lineHeight","textAlign","textShadow","question","alignContent","flexWrap","overflow","map","answerOption","j","choice","checkingMulti","img","backgroundRepeat","backgroundSize","LayoutSimple","window","innerWidth","info","alignSelf","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","gradientValue","gradient","comma","status","layout","ch","GetResults","db","firestore","testRecords","setTestsRecords","resultsData","collection","where","testId","get","querySnapshot","doc","sort","b","result","time","fetchData","test","ResultsDisplay","testeeName","setTesteeName","testeeId","uid","handleDont","location","assign","timeInSeconds","t","split","rate","res","userId","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","visible","setVisible","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","toFixed","answersSet","rights","concat","wrongs","positions","local","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollpased","imgDisplay","setImgDisplay","handleNavCollpase","imgLink","float","ChooseCategory","backgroundPosition","GetTests","testRecordsDisplay","setTestsRecordsDisplay","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","categoriesLayout","setCategoriesLayout","setChecked","testFromDB","setTestFromDB","checkEditLocalTestVisible","setCheckEditLocalTestVisible","handleClick","getAttribute","forPage","filter","item","arrTemp","docs","author","editability","visibility","nameA","toUpperCase","nameB","fetchCategories","label","option","recordSet","chosenRec","tempArr","findIndex","getChoosenTests","recId","handleLink","elementPos","x","objFound","authorName","handleDelete","cursor","whiteSpace","border","fontStyle","evt","f","r","FileReader","onload","parse","onLocal","readAsText","alert","readSingleFile","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","l","getTestfromDB","GetText","answer","answerText","setAnswerText","setImgLink","checkBox","setCheckBox","sendBack","num","cor","changeInput","changeImage","GetAnswers","setAnswers","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","isSelected","control","styles","singleValue","isDisabled","transition","CustomSelect","options","isMulti","closeMenuOnSelect","isSearchable","demoArr","emptyQ","defOptionArray","testName","setTestName","testDescription","setTestDescription","authorId","testAuthor","setTestAuthor","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","reload","newTest","description","removeItem","set","newItem","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","upload","size","getGradientCSS","oldArray","record1","handleMove","slice","handleShow","handleUpdateQuestion","questCopy","handleInsertQuestion","pointerEvents","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","exact","path","makeTest","testPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5ddd07c7.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    if (passwordRef.current.value.length < 6) {\r\n      return setError(\"Passwords should be at least 6 symbols long\")\r\n    }\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n      setToRoot(true);\r\n\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n\r\n          <h2 className=\"header1\">Sign Up\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n                    <input id=\"password-confirm\" type=\"password\" ref={passwordConfirmRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Already have an account? <Link className=\"links\" to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const [toLogin, setToLogin] = useState(false);\r\n  if (toLogin === true) { return <Redirect to=\"/login\" /> }\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      setToLogin(true);\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop:'6%' }}>\r\n        <div className='registeCard' style={{padding:'.75em'}}>\r\n          <h2 className=\"header1\">Dashboard\r\n          <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <h6 className=\"divStyle\"> <strong>Welcome,</strong> {currentUser.displayName}</h6>\r\n          <h6 className=\"divStyle\">  <strong>Email:</strong> {currentUser.email} </h6>\r\n          <img style={{ width: '60%', margin:'3% 15%' }} src={currentUser.photoURL > \"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"} alt=\"profile pic\" />\r\n          <Link to=\"/update-profile\">\r\n            <button className=\"testNav\" style={{width:'100%', margin:'2% auto'}}>\r\n              Update Profile\r\n              </button>\r\n          </Link>\r\n          <Link to=\"/test\">\r\n            <button className=\"testNav\" style={{width:'100%', margin:'2% auto'}}>\r\n              Take Tests\r\n              </button>\r\n          </Link>\r\n          <Link to=\"/create\">\r\n            <button className=\"testNav\" style={{width:'100%', margin:'2% auto'}}>\r\n              Manage Tests\r\n              </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          <div className='linkText' onClick={handleLogout}>\r\n            Log Out\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      // history.push(\"/test-editor/\")\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Log In\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /> </h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{width:'100%', margin:'4% auto'}} type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{width:'100%', margin:'4% auto'}} type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{width:'100%', margin:'4% auto'}} type=\"submit\">\r\n              Log In\r\n            </button>\r\n          </form>\r\n          <div className=\"divStyle\">\r\n            <Link className=\"links\" to=\"/forgot-password\">Forgot Password?</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link className=\"links\" to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Password Reset\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          {message &&<label className='successStyle'>{message}</label> }\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Reset Password\r\n            </button>\r\n          </form>\r\n          <div className=\"divStyle\">\r\n            <Link to=\"/login\" className=\"links\" >Login</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link to=\"/signup\"className=\"links\" >Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div style={{display:'flex', alignItems:'center', justifyContent:'start', marginLeft:'2%', maxWidth:'600px'}}>\r\n            <input type='file' style={{width:'48%'}} onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button testNav\" onClick={(e)=>{pictureUpload(e)}}>Upload Image</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef= useRef()\r\n  const userURLRef= useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser} = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const getImgUrl = (url) => {\r\n    document.querySelector(\"#userURL\").childNodes[1].value=url;\r\n    userURLRef.current.value=url;\r\n    console.log(userURLRef.current.value)\r\n}\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value!== currentUser.displayName)||(userURLRef.current.value!== currentUser.photoURL)){\r\n      promises.push(updateUser(userNameRef.current.value, userURLRef.current.value))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUDNAME);\r\n    console.log('Value: ' + process.env.REACT_APP_CLOUD_PRESET);\r\n  },[])\r\n\r\n  if (toRoot===true){return <Redirect to=\"/\" />}\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop:'5%'}}>\r\n        <div className='registeCard' >\r\n          <h2 className=\"header1\">Update Profile\r\n          <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n              <label className='headerStyle'  >User's Name (keep it shorter then 20 symbols please)\r\n                <input id=\"userName\" type=\"text\" ref={userNameRef} defaultValue={currentUser.displayName} placeholder=\"Leave blank to keep the same\"  />\r\n              </label>              \r\n              <label className='headerStyle' id=\"userURL\" >User's picture link\r\n                <input  type=\"text\" ref={userURLRef} defaultValue={currentUser.photoURL}  />\r\n                <Cloudinary style={{width: \"200px\", objectFit: \"cover\", margin: \"10px\"}} getImgUrl={getImgUrl} />\r\n              </label>                   \r\n            <label className='headerStyle'  >Email\r\n              <input id=\"email\" type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n              <input id=\"password\" type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n              <input id=\"password-confirm\" type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{width:'100%', margin:'2% auto'}} type=\"submit\">\r\n              Update\r\n            </button>\r\n          </form>\r\n      </div>\r\n      <div className=\"divStyle\">\r\n        <Link to=\"/\" className=\"links\" >Cancel</Link>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React,{ useEffect, useState } from \"react\"\r\nvar variant = {\r\n  'danger': {\r\n    'color': '#721c24',\r\n    'backgroundColor': '#f8d7da',\r\n    'borderColor': '#f5c6cb'\r\n    \r\n  },\r\n  'success': {\r\n    'color': '#155724',\r\n    'backgroundColor': '#d4edda',\r\n    'borderColor': '#c3e6cb'\r\n   },\r\n   'secondary': {\r\n    'color': '#383d41',\r\n    'backgroundColor': '#e2e3e5',\r\n    'borderColor': '#d6d8db'\r\n  },\r\n  'warning': {\r\n    'color': '#856404',\r\n    'backgroundColor': '#fff3cd',\r\n    'borderColor': '#ffeeba'\r\n  },\r\n  'info': {\r\n    'color': '#0c5460',\r\n    'backgroundColor': '#d1ecf1',\r\n    'borderColor': '#bee5eb',\r\n  },\r\n  '': {},\r\n}\r\nexport default function AlertMenu(props) {\r\n  const [button1Color, setbutton1Color]=useState('');\r\n  const [button2Color, setbutton2Color]=useState('');\r\n  useEffect(() => {\r\n    setbutton1Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color1)].color);\r\n    setbutton2Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color2)].color);\r\n}, []);\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh', position: \"absolute\" }} >\r\n      <div className='alertContainer'>\r\n        <label className='alertItemStyle' style={Object.values(variant)[Object.keys(variant).indexOf(props.styling.variantHead)]}>{props.styling.heading}</label>\r\n        <h5 className=\"alertItemStyle\">{props.styling.text}</h5>\r\n        {props.styling.inputField && <input id=\"inputField\" style={{ width: \"100%\", marginBottom: \"10px\" }} defaultValue={props.inputValue} />}\r\n        {(props.styling.color1!==\"\") && <button className='alertItemStyle' style={{backgroundColor:button1Color, color:'white'}} onClick={e => { props.onReturn(props.styling.button1, (props.styling.inputField ? document.querySelector(\"#inputField\").value : null)); }}>\r\n          {props.styling.button1}\r\n        </button>}\r\n        {(props.styling.color2!==\"\") &&<button className=\"alertItemStyle\" style={{backgroundColor:button2Color, color:'white'}} onClick={e => { props.onReturn(props.styling.button2) }}>\r\n          {props.styling.button2}\r\n        </button>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { Fragment, useState } from 'react';\nimport AlertMenu from '../alertMenu';\nfunction TestNav(props) {\n    var timerInterval\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Finish\") { \n           stopTest();\n        }\n    }\n    function timerDraw(event) {\n        let seconds = props.seconds;\n        let minutes = props.minutes;\n        let hours = props.hours;\n        questionNumberSet('0');\n        event.preventDefault();\n        if ((seconds !== 0) || (minutes !== 0) || (hours !== 0)) {\n            timerInterval = setInterval(function () {\n                secondsLeft--;\n                if (seconds === 0) {\n                    seconds = 59;\n                }\n                else seconds--;\n                if (seconds === 59) {\n                    if (minutes === 0) {\n                        minutes = 59;\n                        hours--;\n                    } else minutes--;\n                }\n                setDisplayTime(stringTime(hours, minutes, seconds));\n                if ((secondsLeft === 0)) {\n                    clearInterval(timerInterval);\n                    document.querySelector(\".testNav\").classList.add('invisible');\n                    props.onExit(\"00:00:00\");\n                }\n\n            }, 1000);\n        }\n    };\n    function stringTime(h, m, s) {\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\n    }\n    function stopTest() {\n        clearInterval(timerInterval);\n        console.log('end')\n        document.querySelector(\".testNav\").classList.add('invisible');\n        let navButton = document.querySelectorAll(\".testNav\");\n        navButton.forEach(function (userItem) {\n            userItem.classList.add('invisible');\n        });\n        props.onExit(displayTime);\n    }\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else {\n                    questionNow.value = 1;\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Would you like to finish the test?`,\n                        color1: \"danger\",\n                        button1: \"Finish\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                }\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                navButton = document.querySelectorAll(\".testNavLight\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    return (\n        <Fragment>\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <button className=\"testNav\" id=\"startNav\" style={{ position: 'absolute', top: '44vh', left: \"43vw\", zIndex: '200' }}\n                onClick={timerDraw}>Start</button>\n            <button className=\"testNav invisible\" style={{ position: \"absolute\", top: '48vh', left: 0, background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <label className=\"testNav invisible\" style={{position: \"absolute\",top:'0',left:'0', margin:'1.25vh 1vw', fontSize: 'calc(10px + 1vw)', zIndex: 1500 }} >\n                <input className=\"testNavLight invisible\" style={{ width: '3ch', fontSize: 'calc(10px + 1vw)' }} type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n                of {props.qNumber}</label>\n            <button className=\"testNav invisible \" style={{ position: \"absolute\", top: '48vh', right: 0, background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n\n            <label className=\"testNav invisible\" style={{ position: \"absolute\", background: \"transparent\", top: 0, left: '38vw', width: '8ch', zIndex: 1500 }}>{displayTime}</label> \n            <button className=\"testNav invisible\" id=\"finishBtn\"  style={{ position: \"absolute\", top: 0, right: 0,marginTop:'1.25vh', backgroundImage:`url(${process.env.PUBLIC_URL + \"/icons/finish.svg\"})`,width: \"9vh\", height: \"3vh\", borderWidth: '0px',borderRadius:'5px', zIndex: 1500 }}\n                onClick={stopTest}></button>\n\n        </Fragment>\n    );\n}\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst LayoutBox = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n    },[props.answers]);\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n            <div id='questionContainerBox' style={{ opacity: props.vis}}>\n                <section className=\"questionSection\">\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color:'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin:'auto',\n                            textAlign:\"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n              \n                </section>\n                <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-between',alignContent:'center', flexWrap: 'wrap', width: '99%', overflow:'visible' }}>\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{width:'49%',minHeight:'22%', maxHeight: '200px', maxWidth:'200px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Box\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n            </div>\n        </Fragment>\n    );\n}\nexport default LayoutBox;","import React, { useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nfunction LayoutSimple(props) {\n\n    useEffect(() => {\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n        \n    }, [props.answers]);\n    function checkingMulti(e) {\n        if (props.info.correct === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <div id='questionContainerSimple' style={{ opacity: props.vis}}>\n            <section className=\"questionSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\n                <div style={{width:'100%',display: 'flex',justifyContent:'center', alignItems: 'center', height: window.innerWidth < 700 ? '30%' : '70%' }}>\n                    <img src={props.info.img} style={{ height:'100%', alignSelf:'center'}} alt={props.info.img} />\n                </div>\n                <div style={{width:'100%', height: window.innerWidth < 700 ? '70%' : '30%' }}>\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color: 'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin: 'auto',\n                            textAlign: \"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n                </div>\n            </section>\n            <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'visible' }}>\n                {props.answers.map((answerOption, j) => {\n                    return (\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256} mode='multi'\n                                    min={10}\n                                    style={{\n                                        minHeight: \"95%\",\n                                        maxHeight: \"95%\",\n                                        minWidth: \"95%\",\n                                        maxWidth: \"95%\",\n                                        lineHeight: 1,\n                                        textAlign: \"center\",\n                                        textShadow: '1px 1px 2px black'\n                                    }}>{answerOption.text}</Textfit>\n                            </div>\n                        </label>\n                    )\n                })}\n            </section>\n        </div>\n    );\n}\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\nimport LayoutBox from '../../components/LayoutBox';\nimport LayoutSimple from '../../components/LayoutSimple';\nconst QuestionDisplay = props => {\n    const [backgroundVal,setBackgroundVal]= useState('')\n    useEffect(() => {\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\n        setBackgroundVal(gradientValue+comma+backgroundValue);\n        console.log(props.question)\n    }, []);\n    return (\n            <div id='questionDisplayContainer' className={`${(props.status==='test') ? \"noScroll\" : \"\"}`} style={{backgroundImage:backgroundVal}}>\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}    \n            </div>\n    );\n}\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nfunction GetResults(props) {\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    useEffect(() => {\n        let resultsData = []\n        const fetchData = async () => {\n\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    resultsData.push(doc.data());\n                });\n                resultsData.sort(function (a, b) {\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\n                });\n                setTestsRecords(resultsData);\n            });\n\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\n        };\n        fetchData();\n        console.log(testRecords);\n\n    }, [])\n\n    return (\n        <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n            <table style={{ margin:'auto' }} >\n                <tr>\n                    <th>Name</th>\n                    <th>Result</th>\n                    <th>Time Left</th>\n                </tr>\n                <tbody>\n                {testRecords && testRecords.map((test, j) => {\n                    return (\n                        <tr key={j}>\n                            <td key={\"name\"+j}>{test.displayName}</td>\n                            <td key={\"result\"+j}>{test.result}</td>\n                            <td key={\"time\"+j}>{test.time}</td>\n                        </tr>\n\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default GetResults;","import React, { useState, useRef } from 'react';\nimport firebase from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport GetResults from \"../getResults\";\nconst ResultsDisplay = props => {\n    const { currentUser } = useAuth()\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\n    function handleSave() {\n        const db = firebase.firestore();\n        db.collection(\"results\").add({\n            testId: props.testId,\n            displayName: testeeName,\n            userId: testeeId.current,\n            result: props.rate,\n            time: timeInSeconds(props.time)\n        }).then(result=>{handleDont()})\n        .catch(e=>{console.log('fail to record result')})\n        \n    }\n    function handleDont() {\n        window.location.assign(process.env.PUBLIC_URL + '/#/');\n        console.log(\"redirect to /test\")\n        // setToTest([true]);\n    }\n    function timeInSeconds(t) {\n        let time = t.split(':');\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\n    }\n    return (\n\n        <div style={{ display: 'flex', flexWrap: 'wrap', width: '100%', height: '100vh', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '1px 1px #f5d142',\n         backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' , backgroundSize: '100% 100%' }}>\n           {props.testId.length > 0 &&  <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\n           {props.testId.length > 0 && <GetResults testId={props.testId} />}\n           <button className=\"testNav\" style={{position:\"absolute\", top:0,right:0, background:\"transparent\",borderWidth:'0px', zIndex:1500}}\n                    onClick={e => handleDont(e)}>\n                        <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:\"4vh\",height:\"4vh\"}}/>\n                        </button>  \n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\n             <div style={{ width: '60vw', maxHeight: '30vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\"}}>\n             <table style={{ margin: 'auto' }} >\n                    <tr>\n                        <th>Question</th>\n                        <th>Result</th>\n                    </tr>\n\n                    {props.res.map((res, j) => {\n                        return (\n                            <tr key={\"n\"+j}>\n                                <td key={\"num\"+j} >{j + 1}</td>\n                                <td key={\"correct\"+j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            </div>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\n\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\n            </label>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</button>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</button>}\n            <div style={{display: 'flex', width: '100%',justifyContent: 'center'}}>\n            {props.testId.length <= 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</button>}\n            </div> \n        </div>\n    );\n}\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\nimport TestNav from '../testNav';\nimport QuestionDisplay from '../QuestionDisplay';\nimport ResultsDisplay from '../ResultsDisplay';\nimport \"./style.css\";\n\nfunction TestRun(props) {\n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\n  var testBackground = props.test.main.background;\n  var quizMain = props.test.test;\n  var test = [];\n  var choiceSet = [];\n  const [displayQ, setDisplayQ] = useState(0);\n  const [resultTime, setResultTime] = useState('');\n  const [choices, setChoices] = useState([]);\n  const [results, setResults] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [visible, setVisible] = useState(0);\n  const [testGenerated, setTestGenerated] = useState('');\n  function randomizer(arr) {\n\n    let testArray = [];\n    let answerCount = arr.length;\n    let positionN = 0;\n    for (let i = 0; i < answerCount; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n\n    }\n    return testArray\n  }\n\n  function randomChoice(arr, n) {\n\n    let testArray = [];\n    let positionN = 0;\n    for (let i = 0; i < n; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n    }\n    return testArray\n  }\n  function handleChoices(ch) {\n    let localChoices = choices;\n    localChoices.splice(displayQ, 1, ch);\n    console.log(localChoices);\n    setChoices(localChoices);\n\n  }\n  function handleChangeQuestion(q) {\n    if (q > 0) { setDisplayQ(q - 1) }\n    else {\n      setDisplayQ(q);\n      setVisible(1);\n\n    }\n  }\n  function correctAnswers() {\n    let arr = [];\n    let arrSmall = [];\n    for (let i = 0; i < testGenerated.length; i++) {\n      arrSmall = [];\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\n      }\n      arr.push(arrSmall)\n    }\n    return arr\n  }\n  function handleQuizEnd(t) {\n    let arr = [];\n    let n = 0;\n    console.log(t);\n    let correctArr = correctAnswers();\n    setVisible(0);\n    for (let i = 0; i < correctArr.length; i++) {\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\n      if (arr[i] === true) n += 1\n    }\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\n    setRating(((n / correctArr.length * 100).toFixed(2)));\n    setResults(arr);\n    setResultTime(t);\n    console.log(results)\n  }\n\n  useEffect(() => {\n    console.log(props.test.id)\n    let answersSet = [];\n    for (let i = 0; i < quizMain.length; i++) {\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\n      answersSet = randomizer(answersSet);\n\n      test.push({\n        \"info\": quizMain[i].info,\n        \"question\": quizMain[i].question,\n        \"answers\": answersSet,\n      })\n      choiceSet.splice(0, 0, [])\n\n    }\n    setChoices(choiceSet);\n    setTestGenerated(test);\n    document.querySelector(\"nav.navbar\").style.display = 'none';\n  }, []);\n\n\n\n  return (\n    <>\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testId={props.local?\"\":props.test.id} />}\n      {testGenerated && results.length <= 0 && \n      <div  style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\n      <TestNav  qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\n      </div>\n      }\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient} status={\"test\"}  info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\n    </>\n  )\n}\n\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\nimport firebase from \"../firebase\";\nimport {useParams} from 'react-router-dom'\nimport TestRun from './TestRun'\nexport default function DirectTestPage() {\n  // http://localhost:3000/taketest/DDKOWkpHKTC3l2Aav7bC\n  const [test, setTest]=useState({});\n  const [loading, setLoading]=useState(false)\n  const db = firebase.firestore();\n  let { id } = useParams();\n  useEffect(() => {\n     db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\n      \n      setTest({ ...querySnapshot.data(), id: id } );\n      setLoading(true);\n     })\n     .catch(error=>{\n      console.log(error)\n     })\n        \n    \n\n  }, [])\n  return (\n    <>\n{loading && <TestRun test={test} local={false} />}\n    </>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport  \"./Nav.scss\";\n\n\nfunction Nav(props) {\n    const [isNavCollapsed, setIsNavCollpased] = useState(true);\n    const { currentUser } = useAuth();\n    const [imgDisplay, setImgDisplay] = useState('');\n    \n    function handleNavCollpase() {\n        setIsNavCollpased(!isNavCollapsed)\n    }\n    useEffect(() => {\n        let imgLink =  process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\n        else{\n            setImgDisplay(imgLink)\n        }\n        \n    }, [currentUser]);\n    useEffect(()=>{\n        if(window.innerWidth<1000){\n        if (isNavCollapsed){\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"block\";\n        }\n    }\n\n    },[isNavCollapsed]);\n    useEffect(()=>{\n        if (window.innerWidth>=1000){\n            document.querySelector(\"#navbarNav\").style.display=\"flex\";\n            document.querySelector(\"#navbarNav\").style.justifyContent=\"center\";\n            document.querySelector(\"#navbarNav\").style.width=\"83%\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n       \n\n    },[window.innerWidth]);\n\n    return (\n        <nav className=\"navbar\" >\n            \n            {window.innerWidth<1000 ? <Link to=\"/update-profile\"><img className=\"member-photo\" src={imgDisplay} alt=\"avatar\"/></Link>\n             :<Link to=\"/\" className=\"navHeader\"> <img src={ process.env.PUBLIC_URL+\"/icons/logoName.svg\"} alt=\"close\" style={{width:'1.5em',height:'2em'}}/></Link> }\n\t\t\t{window.innerWidth<1000 ? <Link to=\"/\" className=\"navHeader\"> \n            {/* <img src={ process.env.PUBLIC_URL+\"/icons/QuizLogo.svg\"} alt=\"logo\" style={{width:'4vw',height:'4vw'}}/> */}\n            Quiz Land</Link> : null}\n            {window.innerWidth<1000 ? <span id=\"navbar-toggler\"  onClick={handleNavCollpase}>\n                <div style={{ width: '1em', height: '1em',float:'center' }}>\n                   {isNavCollapsed ? \n                     <img src={ process.env.PUBLIC_URL+\"/icons/burger.svg\"} alt=\"open\" /> :\n                    <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" />}\n                </div>\n            </span>: null}\n            \n                <ul id=\"navbarNav\">\n\n\n                   {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Login\n                        </Link>\n\n                    </li>}\n                    {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Signup\n                    </Link>\n\n                    </li>}\n\n                    <li className=\"nav-item\">\n                        <Link to=\"/test\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Take tests\n                    </Link>\n                    </li>\n                   {  currentUser ? <li className=\"nav-item\">\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            Manage tests\n                    </Link>\n                    </li>:\"\"}\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollpase()}>\n                            About\n                    </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollpase()} >\n                            Logout\n                    </Link>\n                    </li>\n                </ul>\n            \n\n            {window.innerWidth<1000 ? null: <Link to=\"/update-profile\">\n               <img className=\"member-photo\"  src={imgDisplay} alt=\"member avatar\"/>\n            </Link>}\n        </nav>\n    );\n}\n\nexport default Nav;","import React, { Fragment, useEffect } from 'react';\nimport \"./style.scss\";\nconst ChooseCategory = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i <props.answers.length; i++) {\n            document.querySelector(\"#category_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#category_\" + i).checked = true;\n        }\n        console.log(props.answers)\n    },[]);\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#category_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#category_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n                <section className=\"categoriesSection\" >\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelCat\" + j} style={{width:'47%',maxHeight:'180px', maxWidth:'180px', margin:'5px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputCat\" + j} id={\"category_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '25% 25%',backgroundPosition: 'right top' }}>\n                                    <div className=\"tickmark\" key={\"divCat\" + j}> </div>\n                                    <div className=\"name2\" key={\"div2Cat\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n        </Fragment>\n    );\n}\nexport default ChooseCategory;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport ChooseCategory from \"../components/ChooseCategory\";\nimport { Link } from \"react-router-dom\";\nfunction GetTests(props) {\n    const db = firebase.firestore();\n    const { currentUser } = useAuth();\n    const [testRecords, setTestsRecords] = useState([]);\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [categories, setCategories] = useState([]);\n    const [categoriesLayout, setCategoriesLayout] = useState([]);\n    const [checked, setChecked] = useState([]);\n    const [testFromDB, setTestFromDB] = useState({})\n    const [checkEditLocalTestVisible, setCheckEditLocalTestVisible] = useState(false);\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('tests').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    props.reloadNeeded(true);\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n        if (decision1 === \"Proceed\") {\n            props.onChange(testFromDB);\n            props.onLocal(false);\n        }\n    }\n    function handleLink(e) {\n        let recId = e.target.getAttribute(\"value\");\n        console.log(recId)\n        setAlertStyle({\n            variantHead: \"success\",\n            heading: \"Direct link to Test\",\n            text: `https://sbolotnikov.github.io/test-editor/#/taketest/${recId}`,\n            color1: \"\",\n            button1: \"\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\n        let objFound = testRecords[elementPos];\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleClick(test) {\n        console.log(test.target.getAttribute(\"value\"))\n        if (props.forPage === 'create') {\n            setAlertStyle({\n                variantHead: \"danger\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n            setRevealAlert(true);\n            setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0])\n        } else { props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0]) }\n    }\n    const fetchData = async () => {\n        let arrTemp = [];\n        const data = await db.collection(\"tests\").get();\n        if (props.forPage === 'create')\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\n        else\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        console.log(arrTemp)\n        setTestsRecords(arrTemp);\n        setTestsRecordsDisplay(arrTemp);\n    };\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setCategories(arrTemp);\n        arrTemp = arrTemp.map(option => { return ({ 'text': option.value, img: process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\" }) });\n        console.log(arrTemp)\n        setCategoriesLayout(arrTemp);\n    };\n    function getChoosenTests(ch) {\n        setChecked(ch);\n        (ch.length > 0) ? setSelectedOption(categories.filter((n, j) => ch.indexOf(j) > -1)) : setSelectedOption(categories)\n    }\n    function readSingleFile(evt) {\n        var f = evt.target.files[0];\n        if (f) {\n            var r = new FileReader();\n            r.onload = function (e) {\n                setTestFromDB(JSON.parse(e.target.result));\n                if (props.forPage === 'create') {\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                        color1: \"danger\",\n                        button1: \"Proceed\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                } else {\n                    props.onChange(JSON.parse(e.target.result));\n                    props.onLocal(true);\n                }\n                // setLocalTest(true)\n            }\n            r.readAsText(f);\n\n        } else {\n            alert(\"Failed to load file\");\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        fetchData();\n    }, []);\n    useEffect(() => {\n        let recordSet = testRecords;\n        let chosenRec = [];\n        console.log(selectedOption);\n        if (selectedOption) {\n            for (let i = 0; i < selectedOption.length; i++) {\n                let tempArr = [];\n                for (let j = 0; j < recordSet.length; j++) {\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\n                }\n                chosenRec = chosenRec.concat(tempArr);\n            }\n        }\n        setTestsRecordsDisplay(chosenRec);\n    }, [selectedOption])\n    return (\n        <div style={{ width: '100%', maxWidth: \"600px\", height: \"40vh\",\n        background: 'radial-gradient(50% 50% at 50% 50%, #EEA2CD 0%, rgba(238, 162, 205, 0.286458) 91.15%, rgba(238, 162, 205, 0) 100%)', margin: '10% 0%' }}>\n            {categoriesLayout &&\n                <ChooseCategory type={categoriesLayout.length} answers={categoriesLayout} checkedMarks={checked} onChange={(ch) => { getChoosenTests(ch) }} />\n            }\n            {testRecordsDisplay &&<div style={{ width: '97%', height: '45%', overflow: 'auto', margin: '0' }}>\n                 <table style={{width:'100%' }} > \n                    <tr>\n                        <th></th>\n                        <th style={{ backgroundColor: 'white',borderRadius:'5px'}} >DISCOVER TESTS</th>\n\n                    </tr>\n\n                 {testRecordsDisplay.map((test, j) => {\n                    return (\n                        <tr key={\"divTests\" + j} >\n                            <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', margin: '4%' }} key={\"linkBtnTests\" + j} value={test.id} onClick={e => handleLink(e)}>Link&#128279;</button>\n                            {(props.forPage === 'create') &&\n                                <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor:'#721c24', margin:'4%' }} key={\"eraseBtnTests\" + j} value={test.id} onClick={e => handleDelete(e)}>Del<img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(.9vw,10px)', height: 'max(.9vw,10px)' }} /></button>\n                            }  \n                             </td>\n                            <td style={{ backgroundColor: 'white',borderRadius:'5px'}}><div key={\"textTests\" + j} className='testText' style={{cursor: \"pointer\", whiteSpace: 'wrap',textAlign:'center',border:0, width: \"100%\" }} value={test.id} onClick={e => handleClick(e)} >{test.main.name} <span style={{fontStyle: 'oblique', color:'#554FA7'}}>@{test.main.authorName}</span></div></td>\n                            <td><div style={{ width:'4%',height:'4vw' }} key={\"playBtnTests\" + j} value={test.id} onClick={e => handleClick(e)}><img src={ (props.forPage === 'create') ?process.env.PUBLIC_URL +\"/icons/EditIcon.svg\":process.env.PUBLIC_URL +\"/icons/Play.svg\"} alt={(props.forPage === 'create') ?\"edit\":\"play\"} style={{ width: 'max(4vw,25px)', height: 'max(4vw,25px)' }} /></div></td>                 \n                        </tr>\n                    )\n                }\n                )}\n            </table>\n            </div>}\n            {currentUser && <label >\n                <input type=\"checkbox\" id=\"checkEditLocalTest\" style={{ margin: '5% 2%' }} onChange={e => setCheckEditLocalTestVisible(document.querySelector(\"#checkEditLocalTest\").checked)} />\n              Load local test from your disk\n              </label>}\n            {currentUser && checkEditLocalTestVisible && <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />}\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {/* {(props.forPage === 'test') && <Link to=\"/taketest/RtqxyubO57LToxbaOzpj\">\n                <button className=\"btnNav\">\n                    Take Demo Test\n              </button>\n            </Link>} */}\n        </div>\n    );\n}\nexport default GetTests;","import React, { useState } from 'react';\nimport TestRun from '../../components/TestRun';\nimport GetTests from '../../components/getTests';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport \"./style.css\";\n\n\nfunction ToRenderEverything() {\n\n  const [testLoad, setTestLoad] = useState(false);\n  const [localTest, setLocalTest] = useState(false);\n  const { currentUser } = useAuth()\n\n  function getTestfromDB(n) {\n    console.log(n)\n    setTestLoad(n);\n  }\n  return (\n    <div className=\"testContainer\">\n      {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onLocal={l => setLocalTest(l)} onChange={n => getTestfromDB(n)} />}\n      {testLoad && <TestRun test={testLoad} local={localTest} />}\n    </div>\n  )\n}\n\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\nimport Cloudinary from './Cloudinary';\nfunction GetText(props) {\n    const [answerText, setAnswerText] = useState(props.answer.text);\n    const [imgLink, setImgLink] = useState(props.answer.img);\n    const [checkBox, setCheckBox] = useState();\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        setImgLink(url);\n        sendBack(answerText, url);\n    }\n    function changeInput(e) {\n        setAnswerText(e.target.value)\n        sendBack(e.target.value, imgLink);\n    }\n    function changeImage(e) {\n        setImgLink(e.target.value);\n        console.log(imgLink)\n        sendBack(answerText, e.target.value);\n    }\n    function sendBack(a, b) {\n        let choice = {\n            text: a,\n            img: b,\n            num: props.num\n        };\n        props.onChange(choice);\n    }\n    useEffect(() => {\n        setAnswerText(props.answer.text);\n        if (props.answer.img.length > 0) {\n            setCheckBox(true);\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\n            setImgLink(props.answer.img);\n        } else {\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\n            setCheckBox(false);\n        }\n    }, [props.answer]);\n    return (\n            <div >\n                <textarea style={{ width: '100%' }} value={answerText} onChange={e => changeInput(e)} />\n                <label style={{ color: 'black', width: '100%' }}>\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\n                check to add image link</label>\n                {checkBox && <div>\n                    <input type=\"text\" style={{ width: '80%', opacity: checkBox }} value={imgLink} onChange={e => changeImage(e)} />\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                </div>}\n            </div>\n    );\n}\nexport default GetText;","import React, { useEffect, useState } from 'react';\nimport GetText from './GetText.js';\n\nfunction GetAnswers(props) {\n    function handleNewText() {\n        let emptyNew = { text: '', img: '', choice: props.correct };\n        props.onNew(emptyNew);\n    }\n    function handlePasteText(){\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\n        if (pasteItem===null) return\n        pasteItem.choice=props.correct;\n        props.onNew(pasteItem);\n    }\n    function handleChangeText(t) {\n        let localArr = props.answers;\n        if ((t.text === '') && (t.img === '')) {\n            localArr.splice(t.num, 1);\n        } else {\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\n            localArr.splice(t.num, 1, answerRenew)\n        }\n        props.onChange(localArr);\n    }\n    function handleDelete(e) {\n        props.onDelete(e.target.value)\n    }\n    function handleCopy(e){\n        props.onCopy(e.target.value)\n    }\n    const [answers, setAnswers] = useState([]);\n    useEffect(() => {\n        setAnswers(props.answers);\n    }, [props.answers]);\n    return (\n        <div style={{display:\"flex\", alignItems:\"start\", justifyContent:\"start\", marginBottom:'4vh'}}>\n            <div style={{width:'85%' }}>\n                <div>\n                    {answers && answers.map((answerOption, j) => {\n                        return (\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\", margin:0 }}  key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>&#128209;Copy</button>\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />         \n                            </div>\n                        )\n                    }\n                    )}\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handlePasteText() }}>&#128203;Paste</button>\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handleNewText() }}>New &#10133;</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\nimport GetAnswers from './GetAnswers.js';\nimport Cloudinary from './Cloudinary';\nfunction GetQuestion(props) {\n    var questionObj = {}\n\n    const [rights, setRights] = useState([]);\n    const [wrongs, setWrongs] = useState([]);\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        props.onChange({ \"mainImg\": url })\n    }\n    // list available layouts\n    var layouts = [\"simple\", \"box\"];\n    useEffect(() => {\n        document.querySelector(\"#question\").value = props.q.question;\n        document.querySelector(\"#mainImg\").value = props.q.info.img;\n        document.querySelector(\"#positionsCount\").value = props.q.info.positions;\n        document.querySelector(\"#correctCount\").value = props.q.info.correct;\n        document.querySelector(\"#layout1\").value = props.q.info.layout;\n        setRights(props.q.rights);\n        setWrongs(props.q.wrongs);\n\n    }, [props.q]);\n    function handleReturnData(t, corr) {\n        if (corr) {\n            questionObj.rights = t;\n            // setRights(localChoices);\n        } else {\n            questionObj.wrongs = t;\n            //  setWrongs(localChoices);\n        }\n        props.onChange(questionObj)\n    }\n    function handleCopyData(n, corr) {\n        (corr) ? questionObj = props.q.rights[n] : questionObj = props.q.wrongs[n];\n        localStorage.setItem('answerCopy', JSON.stringify(questionObj));\n    }\n    function newRecord(e, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.push({ text: e.text, img: e.img, choice: true });\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.push({ text: e.text, img: e.img, choice: false });\n        }\n        props.onChange(questionObj)\n    }\n\n\n    function delRecord(n, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.splice(n, 1);\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.splice(n, 1);\n        }\n        props.onChange(questionObj)\n    }\n\n    return (\n        <Fragment>\n            <label className='headerStyle'>Enter your question\n            <textarea id=\"question\" onChange={e => { props.onChange({ \"question\": e.target.value }) }} />\n            </label>\n            <br/>\n            <label className='headerStyle'>Add your question main picture link (if you have one)\n            <input id=\"mainImg\" onChange={e => { props.onChange({ \"mainImg\": e.target.value }) }} />\n            </label>\n            <Cloudinary getImgUrl={getImgUrl} />\n            <label className='headerStyle'>Choose question layout\n                <select id=\"layout1\" onChange={e => { props.onChange({ \"layout1\": e.target.value }) }} >\n                    {layouts.map((option, i) => {\n                        return (\n                            <option value={option} key={'layout_option' + i}>{option}</option>\n                        )\n                    }\n                    )}\n                </select>\n             </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label>\n                        <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length + wrongs.length}  onChange={e => { props.onChange({ \"positionsCount\": e.target.value }) }} />            \n                        How many positions would be displayed?(Maximum should be less then answers options)\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label>\n                        <input id=\"correctCount\" type=\"number\" min={0} max={rights.length}  onChange={e => { props.onChange({ \"correctCount\": e.target.value }) }} />           \n                        How many correct options should be selected?(Maximum should be less then correct answers options)\n                    </label>\n                </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel2'>\n                    <label className='headerStyle' style={{color:'green'}} ><strong>Enter text of the correct answers:</strong></label>\n                    {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\n                </section>\n                <section className='panel1'>\n                    <label className='headerStyle' style={{ color:'red'}} ><strong>Enter text of the wrong answers:</strong></label>\n                    {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\n                </section>\n            </div>\n        </Fragment >\n    )\n}\nexport default GetQuestion;","import React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nfunction TestCreateNav(props) {\n\n    const [qArr, setqArr] = useState('');\n    const [moveVis, setMoveVis] = useState(false);\n    useEffect(() => {\n        document.getElementById('questionPage').value = 1;\n    }, []);\n    useEffect(() => {\n        let arr = [];\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\n        setqArr(arr);\n    }, [props.qNumber]);\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    function deleteRec() {\n        props.onDel('');\n        let n = document.querySelector(\"#questionPage\");\n        let k = \"\"\n        if (parseInt(n.value) !== props.qNumber) {\n            k = n.value;\n            n.value = k;\n        } else {\n            k = n.value;\n            n.value = (parseInt(k) - 1).toString();\n        }\n    }\n    function visibilityMoveTo() {\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\n        setMoveVis(!moveVis)\n    }\n    return (\n\n        <div className=\"navContainer\" style={{ position: 'relative' }} >\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Question editing panel</strong></h3>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet('1') }}>&#9198;</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <input className=\"testNavLight text-center\" style={{width:'3ch'}} type=\"number\" id=\"questionPage\"  min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\n            <button className=\"testNav\"\n                onClick={e => { deleteRec() }}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/>Delete</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\n            {(props.qNumber > 1) && <button className=\"testNav\"\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\n            }}>\n                {qArr.map((option, i) => {\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\n                }\n                )}\n            </select>}\n        </div>\n\n    );\n}\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nfunction GetGradient(props) {\n    const db = firebase.firestore();\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [gradients, setGradients] = useState([]);\n    const [newGradient, setNewGradient] = useState('');\n    const [newGradientName, setNewGradientName] = useState('');\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\n\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('gradients').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n    }\n    function handleAdd(e) {\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\n            .then(res => {\n                console.log('added');\n                props.reloadNeeded(true);\n                // setGradients(gradients.push({name:newGradientName,value:newGradient}))\n            })\n            .catch(error => {\n                console.log(\"can not delete a record\");\n            })\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\n        setAlertStyle({\n            left: \"0\",\n            top: \"0\",\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n\n        setRevealAlert(true)\n    }\n    function handleClick(grad) {\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\n        props.onChange(gr[0].value);\n    }\n    const fetchGradients = async () => {\n\n        const data = await db.collection(\"gradients\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n        setGradients(arrTemp);\n    };\n    useEffect(() => {\n        fetchGradients();\n    }, []);\n\n    return (\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {gradients && gradients.map((item, j) => {\n                return (\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius:'10px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\n                        <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  key={\"gradient_del_button\"+j} value={item.id} onClick={e => handleDelete(e)}>Del<img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(.9vw,10px)',height:'max(.9vw,10px)'}}/></button>\n                    </div>\n                )\n            }\n            )}\n            <label>\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} />\n                Add new background gradient CSS to our database of pre-set styles\n            </label>\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '100%' }}>\n                <label className='headerStyle'>Enter gradient CSS</label>\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\n                <label className='headerStyle'>Enter gradient name</label>\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\n                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  onClick={e => handleAdd(e)}>Add &#128504;</button>\n            </div>\n        </div>\n    );\n}\nexport default GetGradient;","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport GetQuestion from '../../components/GetQuestion.js';\nimport TestCreateNav from '../../components/testCreateNav';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport firebase from \"../../firebase\";\nimport \"./style.css\";\nimport GetTests from '../../components/getTests.js';\nimport GetGradient from '../../components/getGradient.js';\nimport AlertMenu from '../../components/alertMenu';\nimport Cloudinary from '../../components/Cloudinary';\nimport QuestionDisplay from '../../components/QuestionDisplay';\nimport CustomSelect from '../../components/CustomSelect';\n\nvar demoArr = [];\nvar emptyQ = {\n    question: '',\n    rights: [{ text: '', img: '', choice: true }],\n    wrongs: [{ text: '', img: '', choice: false }],\n    info: {\n        positions: 2,\n        correct: 1,\n        layout: '',\n        img: ''\n    }\n}\nfunction ToRenderEverything() {\n    var defOptionArray = [];\n    const { currentUser } = useAuth();\n    const [testName, setTestName] = useState('');\n    const [testDescription, setTestDescription] = useState('');\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\n    const [visibility, setVisibility] = useState('');\n    const [editability, setEditability] = useState('');\n    const [displayQ, setDisplayQ] = useState(0);\n    const [testBackground, setTestBackground] = useState('');\n    const [testGradient, setTestGradient] = useState('');\n    const [testHH, setTestHH] = useState(0);\n    const [testMM, setTestMM] = useState(0);\n    const [testSS, setTestSS] = useState(0);\n    const [show, setShow] = useState(false);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({})\n    const [testArray, setTestArray] = useState([emptyQ]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\n    const db = firebase.firestore();\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n        });\n        setCategories(arrTemp);\n    };\n    const onReturn = (decision1, inputValue) => {\n        if (decision1 === \"Proceed\") {\n            setRevealAlert(false);\n            reloadNeeded()\n        }\n        if (decision1 === \"Update\") {\n            setRevealAlert(false);\n            let text = {\n                main: {\n                    author: testAuthor.authorId,\n                    authorName: testAuthor.name,\n                    categories: selectedOption,\n                    name: testName,\n                    description:testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            db.collection('tests').doc(testAuthor.testId).set(text)\n                .then(result => {\n                    console.log(\"file updated\");\n                    reloadNeeded();\n                })\n                .catch(e => { console.log(\"file fail to updated\"); })\n        }\n        if (decision1 === \"Add\") {\n            console.log(inputValue)\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\n                let newItem = { label: inputValue, value: inputValue }\n                db.collection('categories').add(newItem)\n                    .then(result => {\n                        console.log(\"categories updated\");\n                        setCategories([...categories, newItem]);\n                    })\n                    .catch(e => { console.log(\"categories fail to updated\"); })\n                setRevealAlert(false);\n            } else {\n                setAlertStyle({\n                    left: \"0\",\n                    top: \"0\",\n                    variantHead: \"danger\",\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n                    inputField: 'true',\n                    inputValue: inputValue,\n                    color1: \"danger\",\n                    button1: \"Add\",\n                    color2: \"secondary\",\n                    button2: \"Cancel\"\n                });\n            }\n        }\n        if (decision1 === \"Cancel\") {\n            setRevealAlert(false);\n        }\n    }\n    const reloadNeeded = (a) => {\n        window.location.reload();\n    }\n    const getImgUrl = (url) => {\n        document.querySelector(\"#background\").value = url;\n        setTestBackground(url);\n    }\n    const getGradientCSS = (n) => {\n        document.querySelector(\"#backgroundGradient\").value = n;\n        setTestGradient(n)\n    }\n    function handleUpdateQuestion(q) {\n        if (q > 0) { setDisplayQ(q - 1) }\n        else {\n            setDisplayQ(q);\n        }\n    }\n    function handleReturnQuestion(t) {\n        let arr = [...testArray];\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\n        setTestArray(arr);\n    }\n    function handleCopyQuestion(e) {\n        localStorage.setItem('questionCopy', JSON.stringify(testArray[displayQ]));\n    }\n    function handleInsertQuestion(e) {\n        let arr = [];\n        let questCopy = JSON.parse(localStorage.getItem('questionCopy'));\n        if (questCopy === null) return\n        for (let i = 0; i < testArray.length; i++) {\n            if (i === displayQ + 1) arr.push(questCopy)\n            arr.push(testArray[i])\n        }\n        if (displayQ === testArray.length - 1) arr.push(questCopy)\n        setTestArray(arr)\n        setDisplayQ(displayQ + 1)\n    }\n    function handleAdd(e) {\n        // e.preventDefault()\n        setTestArray(oldArray => [...oldArray, {\n            question: '',\n            rights: [{ text: '', img: '', choice: true }],\n            wrongs: [{ text: '', img: '', choice: false }],\n            info: {\n                positions: 2,\n                correct: 1,\n                layout: '',\n                img: ''\n            }\n        }]);\n        setDisplayQ(testArray.length);\n        console.log(displayQ);\n    }\n    function handleShow() {\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\n        for (let i = 0; i < arr.length; i++) {\n            demoArr.push(arr[i]);\n        }\n        console.log(demoArr);\n        show ? setShow(false) : setShow(true)\n    }\n    function handleDelete() {\n\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\n    }\n    function handleMove(t) {\n        if (t[0] !== t[1]) {\n            let arr = [];\n            let record1 = testArray[t[0]];\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === t[1]) {\n                    if (t[1] > t[0]) {\n                        arr.push(testArray[i]);\n                        arr.push(record1);\n                    } else {\n                        arr.push(record1);\n                        arr.push(testArray[i]);\n                    }\n                }\n                else if (i !== t[0]) arr.push(testArray[i])\n            }\n            setTestArray(arr);\n            setDisplayQ(t[1])\n            console.log(record1, arr)\n        }\n    }\n    function getTestfromDB(n) {\n        console.log(n)\n        let newTest = n;\n        setTestArray(newTest.test);\n        setDisplayQ(0);\n        document.querySelector(\"#questionPage\").value = 1;\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\n        defOptionArray = newTest.main.categories\n        setSelectedOption(defOptionArray);\n        document.querySelector(\"#testName\").value = newTest.main.name;\n        setTestName(newTest.main.name);\n        document.querySelector(\"#testDescription\").value = newTest.main.description;\n        setTestDescription(newTest.main.description);\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\n        setVisibility(newTest.main.visibility);\n        document.querySelector(\"#editability\").value = newTest.main.editability;\n        setEditability(newTest.main.editability);\n        document.querySelector(\"#background\").value = newTest.main.background;\n        setTestBackground(newTest.main.background);\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n        setTestGradient(newTest.main.gradient);\n        document.querySelector(\"#hh\").value = newTest.main.hours;\n        setTestHH(newTest.main.hours);\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\n        setTestMM(newTest.main.minutes);\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\n        setTestSS(newTest.main.seconds);\n    }\n    function upload(e) {\n        let text = {\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description:testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        };\n        db.collection(\"tests\").add(text)\n            .then(result => {\n                console.log(\"file created in DB\");\n                reloadNeeded()\n            })\n            .catch(e => { console.log(\"no connectionto DB\"); })\n    }\n    function download(e) {\n        let text = JSON.stringify({\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description:testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        });\n        console.log(text)\n        let filename = \"test.txt\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n    function update(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Warning\",\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\n            color1: \"danger\",\n            button1: \"Update\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function handleNewCategory(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Alert\",\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n            inputField: 'true',\n            inputValue: \"\",\n            color1: \"danger\",\n            button1: \"Add\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function startNewTest(e) {\n        if (testName > \"\") {\n            setRevealAlert(true);\n            setAlertStyle({\n                variantHead: \"info\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n        }\n    }\n    const saveReload = (a) => {\n        if (a) {\n            let text = {\n                main: {\n                    author: currentUser.uid,\n                    authorName: currentUser.displayName,\n                    categories: selectedOption,\n                    name: testName,\n                    description:testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            reloadNeeded();\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        let pasteItem = JSON.parse(localStorage.getItem('testCopy'));\n        if ((pasteItem !== null)) getTestfromDB(pasteItem)\n        localStorage.removeItem('testCopy');\n    }, []);\n    return (\n        <div className=\"makerContainer\">\n            <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onLocal={n => { console.log(\"test loaded\") }} onChange={n => getTestfromDB(n)} />\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <div className='navContainer' >\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Test editing panel</strong></h3>\n\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128187;</button>\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload to web &#128228;</button>\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update on web &#128257;</button>}\n\n            </div>\n            <label className='headerStyle' >Enter test Name (keep it under 30 symbols)\n                    <input id=\"testName\"  onChange={e => setTestName(e.target.value)} />\n            </label>\n            <br/>\n            <label className='headerStyle' >Enter test description\n                    <textarea id=\"testDescription\"  onChange={e => setTestDescription(e.target.value)} />\n            </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                    <select id=\"visibility\" onChange={e => setVisibility(e.target.value)} >\n                            <option value=\"Private\">Private</option>\n                            <option value=\"Public\">Public</option>\n                        </select>\n                        Is this test Private or Public?\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label >\n                    <select id=\"editability\" onChange={e => setEditability(e.target.value)}>\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                        Would you allow others to edit content of test?\n                    </label>\n                </section>\n            </div>\n            {selectedOption &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red',marginLeft:'1.5%' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\n            }\n            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: \"1% 0 0 1.5%\" }} onClick={e => handleNewCategory(e)}>Add New Category</button>\n            <div className=\"panel2 containerGrid\">\n            <section className='headerStyle' >Enter time (if there are no time limit enter 0 0 0):</section>\n            <section className='panel1 headerStyle' style={{  float:'left' }}>\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '5ch' }} onChange={e => setTestHH(e.target.value)} /> hh\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestMM(e.target.value)} /> mm\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestSS(e.target.value)} /> ss\n            </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />           \n                        Add/change BACKGROUND to your test\n                </label>\n                    <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '98%' }}>\n\n                        <label className='headerStyle'>Enter test background image link or upload your image from computer\n                        <input id=\"background\"  onChange={e => setTestBackground(e.target.value)} />\n                        </label>\n                        <Cloudinary getImgUrl={getImgUrl} />\n                    </div>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\n                    Add/change background GRADIENT to your test\n               </label>\n                    <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '98%' }}>\n                        <label className='headerStyle' >Enter test background gradient CSS here\n                        <textarea id=\"backgroundGradient\" onChange={e => setTestGradient(e.target.value)} />\n                        </label>\n                        <GetGradient reloadNeeded={saveReload} onChange={n => getGradientCSS(n)} />\n                    </div>\n                </section>\n            </div>\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\n            {show &&\n                <div className=\"modalContainer\" >\n                    <div className=\"closeTag\" onClick={(e) => setShow(false)}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} status={\"create\"} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\n                </div>\n            }\n            {testArray[displayQ] &&\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\n            }\n\n        </div >\n    )\n}\nexport default ToRenderEverything;\n","import React from \"react\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.scss';\n// Components\nimport Signup from \"./components/Signup\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport Logout from \"./components/Logout\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport DirectTestPage from \"./components/DirectTestPage\"\nimport Nav from \"./components/Nav\"\n//Pages\nimport testPage from './pages/testPage';\nimport makeTest from './pages/makeTest';\n\nfunction App() {\n\n  return (\n    <Router>\n      <AuthProvider>\n          <Nav />\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\n            <Route exact path=\"/test\" component={testPage} />\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\n          </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
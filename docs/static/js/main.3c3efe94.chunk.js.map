{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Footer.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/About.js","components/Logout.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/alertMenu.js","components/testNav/index.js","components/LayoutBox/index.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/SharePost.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/ChooseCategory/index.js","components/TestPopupInfo.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","components/CustomSelect.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","console","log","updateProfile","displayName","photoURL","then","catch","error","Provider","Footer","id","style","position","left","bottom","width","marginLeft","pointerEvents","to","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","e","a","preventDefault","current","length","className","maxWidth","src","alt","onSubmit","margin","type","ref","required","disabled","Dashboard","testsCreated","setTestsCreated","testsResultsOnRec","setTestsResultsOnRec","testsAverageScore","setTestsAverageScore","userRating","setUserRating","db","firestore","window","location","assign","collection","where","uid","get","result","docs","map","doc","data","resArray","averageRes","i","parseFloat","score","toFixed","rate","marginTop","padding","textAlign","textDecoration","border","backgroundColor","borderRadius","whiteSpace","fontStyle","color","onClick","Login","About","Logout","logoutHandle","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","Cloudinary","imageSelected","setImageSelected","display","alignItems","justifyContent","onChange","event","target","files","formData","FormData","append","Axios","post","response","parentElement","previousSibling","getImgUrl","pictureUpload","UpdateProfile","userNameRef","userURLRef","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","document","querySelector","childNodes","variant","AlertMenu","button1Color","setbutton1Color","button2Color","setbutton2Color","AllowScroll","onscroll","Object","values","keys","indexOf","styling","color1","color2","x","scrollX","y","scrollY","scrollTo","StopScroll","height","top","pageYOffset","zIndex","variantHead","heading","text","inputField","marginBottom","inputValue","onReturn","button1","button2","TestNav","timerInterval","stringTime","hours","minutes","seconds","displayTime","setDisplayTime","revealAlert","setRevealAlert","alertStyle","setAlertStyle","secondsLeft","h","m","s","stopTest","clearInterval","classList","add","querySelectorAll","forEach","userItem","onExit","questionNumberSet","n","questionNow","Number","isInteger","parseInt","qNumber","navButton","remove","decision1","setInterval","textShadow","background","fontSize","min","max","toString","right","backgroundImage","borderWidth","LayoutBox","answers","checked","checkedMarks","opacity","vis","mode","minHeight","maxHeight","minWidth","lineHeight","question","alignContent","flexWrap","overflow","answerOption","j","choice","checkingMulti","img","backgroundRepeat","backgroundSize","LayoutSimple","innerWidth","info","alignSelf","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","gradientValue","gradient","comma","status","layout","ch","GetResults","testRecords","setTestsRecords","resultsData","testId","querySnapshot","sort","b","time","fetchData","test","SharePost","socialMediaButton","FacebookShareButton","quote","title","hashtag","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","separator","WhatsappIcon","EmailShareButton","subject","body","media","image","EmailIcon","ResultsDisplay","testeeName","setTesteeName","testeeId","handleDont","reload","timeInSeconds","t","split","res","userId","testName","description","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","visible","setVisible","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","answersSet","rights","concat","wrongs","positions","local","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollapsed","imgDisplay","setImgDisplay","handleNavCollapse","imgLink","float","ChooseCategory","backgroundPosition","TestPopupInfo","author","questionsTotal","onRes","GetTests","testRecordsDisplay","setTestsRecordsDisplay","revealInfo","setRevealInfo","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","categoriesLayout","setCategoriesLayout","setChecked","testFromDB","setTestFromDB","checkEditLocalTestVisible","setCheckEditLocalTestVisible","testInfo","setTestInfo","arrTemp","forPage","filter","editability","visibility","nameA","toUpperCase","nameB","fetchCategories","label","option","recordSet","chosenRec","tempArr","findIndex","c","index","getChoosenTests","flexDirection","recId","getAttribute","elementPos","objFound","authorName","handleDelete","clientY","item","positionY","handleHover","cursor","handleClick","evt","f","r","FileReader","onload","parse","onLocal","readAsText","alert","readSingleFile","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","l","getTestfromDB","GetText","answer","answerText","setAnswerText","setImgLink","checkBox","setCheckBox","sendBack","num","cor","changeInput","changeImage","GetAnswers","setAnswers","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","isSelected","control","styles","singleValue","isDisabled","transition","CustomSelect","options","isMulti","closeMenuOnSelect","isSearchable","demoArr","emptyQ","defOptionArray","setTestName","testDescription","setTestDescription","authorId","testAuthor","setTestAuthor","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","newTest","removeItem","set","newItem","element","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","download","upload","getGradientCSS","oldArray","record1","handleMove","slice","handleShow","handleUpdateQuestion","questCopy","handleInsertQuestion","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","exact","path","testPage","makeTest","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"kUAIMA,G,oBAAMC,IAASC,cAAc,CACjCC,OAAQC,0CACRC,WAAYD,oCACZE,YAAaF,0CACbG,UAAWH,oBACXI,cAAeJ,gCACfK,kBAAmBL,eACnBM,MAAON,+CAGIO,EAAOX,EAAIW,OACTX,I,OCZTY,EAAcC,IAAMC,gBAEnB,SAASC,IACd,OAAOC,qBAAWJ,GAGb,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACHC,qBADG,mBAClCC,EADkC,KACrBC,EADqB,OAEXF,oBAAS,GAFE,mBAElCG,EAFkC,KAEzBC,EAFyB,KAwCzCC,qBAAU,WAMR,OALoBb,EAAKc,oBAAmB,SAAAC,GAC1CL,EAAeK,GACfH,GAAW,QAIZ,IAEH,IAAMI,EAAQ,CACZP,cACAQ,MA5CF,SAAeC,EAAOC,GACpB,OAAOnB,EAAKoB,2BAA2BF,EAAOC,IA4C9CE,OAhDF,SAAgBH,EAAOC,GACrB,OAAOnB,EAAKsB,+BAA+BJ,EAAOC,IAgDlDI,OA1CF,WACE,OAAOvB,EAAKwB,WA0CZC,cAvCF,SAAuBP,GACrB,OAAOlB,EAAK0B,uBAAuBR,IAuCnCS,YApCF,SAAqBT,GACnB,OAAOT,EAAYkB,YAAYT,IAoC/BU,eAjCF,SAAwBT,GACtB,OAAOV,EAAYmB,eAAeT,IAiClCU,WA9BF,SAAoBC,EAAMC,GAGxB,OAFAC,QAAQC,IAAI,mBAAqBH,EAAOC,GACxCC,QAAQC,IAAIxB,GACLA,EAAYyB,cAAc,CAC/BC,YAAaL,EACbM,SAAUL,IACTM,MAAK,eAELC,OAAM,SAAUC,GACjBP,QAAQC,IAAI,gCAwBhB,OACE,cAAChC,EAAYuC,SAAb,CAAsBxB,MAAOA,EAA7B,UACIL,GAAWJ,IC1DJkC,MATf,WACI,OACJ,sBAAKC,GAAG,SAASC,MAAO,CAACC,SAAS,WAAWC,KAAK,EAAGC,OAAO,EAAEC,MAAM,OAAQC,WAAW,OAAQC,cAAc,UAA7G,uBAEY,cAAC,IAAD,CAAMC,GAAG,SAAT,mC,MCHG,SAASC,IACtB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACnBhC,EAAWjB,IAAXiB,OAJuB,EAKLb,mBAAS,IALJ,mBAKxB+B,EALwB,KAKjBiB,EALiB,OAMDhD,oBAAS,GANR,mBAMxBG,EANwB,KAMfC,EANe,OAOHJ,oBAAS,GAPN,mBAOxBiD,EAPwB,KAOhBC,EAPgB,KAQ/B,IAAe,IAAXD,EAAmB,OAAO,cAAC,IAAD,CAAUP,GAAG,MARZ,4CAU/B,WAA4BS,GAA5B,SAAAC,EAAA,yDACED,EAAEE,iBAEEP,EAAYQ,QAAQ9C,QAAUuC,EAAmBO,QAAQ9C,MAH/D,yCAIWwC,EAAS,2BAJpB,YAMMF,EAAYQ,QAAQ9C,MAAM+C,OAAS,GANzC,yCAOWP,EAAS,gDAPpB,OASE,IACEA,EAAS,IACT5C,GAAW,GACXS,EAAO+B,EAASU,QAAQ9C,MAAOsC,EAAYQ,QAAQ9C,OACnD0C,GAAU,GAEV,SACAF,EAAS,+BAGX5C,GAAW,GAnBb,4CAV+B,sBAgC/B,OACE,sBAAKoD,UAAU,gBAAf,UACE,sBAAKrB,MAAO,CAAEI,MAAO,MAAOkB,SAAU,SAAtC,UACE,sBAAKD,UAAU,cAAf,UAEE,qBAAIA,UAAU,UAAd,oBACE,qBAAKE,IAAKzE,kCAAgD0E,IAAI,cAAcH,UAAU,YACvFzB,GAAS,uBAAOyB,UAAU,aAAjB,SAA+BzB,IACzC,uBAAM6B,SAxCiB,4CAwCvB,UACE,wBAAOJ,UAAU,cAAjB,kBACQ,uBAAOtB,GAAG,QAAQC,MAAO,CAAEI,MAAO,OAAQsB,OAAQ,WAAaC,KAAK,QAAQC,IAAKnB,EAAUoB,UAAQ,OAE3G,wBAAOR,UAAU,cAAjB,qBACQ,uBAAOtB,GAAG,WAAWC,MAAO,CAAEI,MAAO,OAAQsB,OAAQ,WAAaC,KAAK,WAAWC,IAAKjB,EAAakB,UAAQ,OAEpH,wBAAOR,UAAU,cAAjB,kCACQ,uBAAOtB,GAAG,mBAAmBC,MAAO,CAAEI,MAAO,OAAQsB,OAAQ,WAAaC,KAAK,WAAWC,IAAKhB,EAAoBiB,UAAQ,OAEnI,wBAAQC,SAAU9D,EAASqD,UAAU,UAAUrB,MAAO,CAAEI,MAAO,OAAQsB,OAAQ,WAAaC,KAAK,SAAjG,2BAMJ,sBAAKN,UAAU,WAAf,sCAC2B,cAAC,IAAD,CAAMA,UAAU,QAAQd,GAAG,SAA3B,0BAG7B,cAAC,EAAD,O,WCgCSwB,MA5Fd,WAAsB,IAAD,EACMlE,mBAAS,IADf,mBACb+B,EADa,KACNiB,EADM,KAEZ/C,EAAeL,IAAfK,YAFY,EAGoBD,mBAAS,GAH7B,mBAGbmE,EAHa,KAGCC,EAHD,OAI8BpE,mBAAS,GAJvC,mBAIbqE,EAJa,KAIMC,EAJN,OAK8BtE,mBAAS,GALvC,mBAKbuE,EALa,KAKMC,EALN,OAMgBxE,mBAAS,kBANzB,mBAMbyE,EANa,KAMDC,EANC,KAOdC,EAAK7F,EAAS8F,YAPA,4CAUpB,sBAAAxB,EAAA,sDACEJ,EAAS,IACT6B,OAAOC,SAASC,OAAO9F,iCAFzB,4CAVoB,sBA+CpB,OAJAoB,qBAAU,WA5BPsE,EAAGK,WAAW,SAASC,MAAM,cAAe,KAAMhF,EAAYiF,KAAKC,MACnEtD,MAAK,SAAAuD,GAAShB,EAAgBgB,EAAOC,KAAKC,KAAI,SAAAC,GAAG,sBAAUA,EAAIC,WAAWjC,WAC1EzB,OAAM,SAAAqB,GAAI3B,QAAQC,IAAI,iCAIvBkD,EAAGK,WAAW,WAAWC,MAAM,SAAU,KAAMhF,EAAYiF,KAAKC,MAChEtD,MAAK,SAAAuD,GACJ,IAAIK,EAASL,EAAOC,KAAKC,KAAI,SAAAC,GAAG,sBAAUA,EAAIC,WAC1CE,EAAW,EACflE,QAAQC,IAAIgE,GACZ,IAAK,IAAIE,EAAE,EAAGA,EAAEF,EAASlC,OAAOoC,IAC9BD,GAAYE,WAAWH,EAASE,GAAGP,QAErC,IAAIS,EAAM,EACNJ,EAASlC,OAAO,IAAGsC,GAAOH,EAAWD,EAASlC,QAAQuC,QAAQ,IACnEtB,EAAqBqB,GACrBvB,EAAqBmB,EAASlC,QAC9B,IAAIwC,EAAK,GACLF,GAAO,MAAKE,EAAK,iBACjBF,GAAO,KAAIE,EAAK,cAChBF,GAAO,KAAIE,EAAK,gBAChBF,GAAO,KAAIE,EAAK,gBAChBF,GAAO,KAAIE,EAAK,kBACpBrB,EAAcqB,MACbjE,OAAM,SAAAqB,GAAI3B,QAAQC,IAAI,iCAMxB,IAEC,sBAAK+B,UAAU,gBAAf,UACE,sBAAKrB,MAAO,CAAEI,MAAO,MAAOkB,SAAU,QAASuC,UAAW,MAA1D,UACE,sBAAKxC,UAAU,cAAcrB,MAAO,CAAE8D,QAAS,SAA/C,UACE,qBAAIzC,UAAU,UAAd,oBACA,qBAAKE,IAAKzE,kCAAgD0E,IAAI,cAAcH,UAAU,YACrFzB,GAAS,uBAAOyB,UAAU,aAAjB,SAA+BzB,IACzC,qBAAKI,MAAO,CAAEI,MAAO,MAAOsB,OAAQ,UAAYH,IAAKzD,EAAY2B,SAAW,GAAK3B,EAAY2B,SAAW3C,qCAAmD0E,IAAI,gBAC/J,qBAAIH,UAAU,WAAWrB,MAAO,CAAE+D,UAAW,SAAU3D,MAAO,OAAQkB,SAAU,OAAQI,OAAQ,QAAhG,cAA2G,uCAAmB5D,EAAY0B,eAC1I,qBAAI6B,UAAU,WAAWrB,MAAO,CAAE+D,UAAW,SAAUC,eAAgB,aAAvE,gBAA2FlG,EAAYS,MAAvG,UAEF,uBAAOyB,MAAO,CAAEI,MAAO,MAAM6D,OAAO,kBAAkBC,gBAAiB,QAASC,aAAc,OAAQzC,OAAO,WAA7G,SAEY,kCAEY,qBAAI1B,MAAO,CAACkE,gBAAiB,SAA7B,UACI,6BAAK,qBAAKlE,MAAO,CAAEoE,WAAY,OAAQL,UAAW,SAAU3D,MAAO,QAA9D,6BACL,mCAAK,sBAAMJ,MAAO,CAAEqE,UAAW,UAAWC,MAAO,WAA5C,SAA0DtC,UAEnE,qBAAIhC,MAAO,CAACkE,gBAAiB,SAA7B,UACI,6BAAI,qBAAKlE,MAAO,CAAEoE,WAAY,OAAQL,UAAW,SAAU3D,MAAO,QAA9D,qCACJ,mCAAK,sBAAMJ,MAAO,CAAEqE,UAAW,UAAWC,MAAO,WAA5C,SAA0DpC,UAEnE,qBAAIlC,MAAO,CAACkE,gBAAiB,SAA7B,UACI,6BAAI,qBAAKlE,MAAO,CAAEoE,WAAY,OAAQL,UAAW,SAAU3D,MAAO,QAA9D,mCACJ,mCAAK,uBAAMJ,MAAO,CAAEqE,UAAW,UAAWC,MAAO,WAA5C,UAA0DlC,EAA1D,aAET,oBAAIpC,MAAO,CAACkE,gBAAiB,eAA7B,SACC,6BAAI,qBAAKlE,MAAO,CAAEoE,WAAY,OAAQL,UAAW,SAAU3D,MAAO,OAAQkE,MAAM,eAA5E,uBAEL,qBAAItE,MAAO,CAACkE,gBAAiB,aAA7B,UACI,6BAAI,qBAAKlE,MAAO,CAAEoE,WAAY,OAAQL,UAAW,SAAU3D,MAAO,QAA9D,0BACJ,mCAAK,sBAAMJ,MAAO,CAAEqE,UAAW,UAAWC,MAAO,WAA5C,SAA0DhC,eAKnF,wBAAQjB,UAAU,UAAUrB,MAAO,CAAEI,MAAO,OAAQsB,OAAQ,WAAa6C,QApFnE,2CAoFN,+BAIV,cAAC,EAAD,QCxFS,SAASC,IACtB,IAAM/D,EAAWC,mBACXC,EAAcD,mBACZpC,EAAUb,IAAVa,MAHsB,EAIJT,mBAAS,IAJL,mBAIvB+B,EAJuB,KAIhBiB,EAJgB,OAKAhD,oBAAS,GALT,mBAKvBG,EALuB,KAKdC,EALc,OAMFJ,oBAAS,GANP,mBAMvBiD,EANuB,KAMfC,EANe,KAO9B,IAAe,IAAXD,EAAmB,OAAO,cAAC,IAAD,CAAUP,GAAG,MAPb,4CAQ9B,WAA4BS,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAIIL,EAAS,IACT5C,GAAW,GALf,SAMUK,EAAMmC,EAASU,QAAQ9C,MAAOsC,EAAYQ,QAAQ9C,OAN5D,OAOI0C,GAAU,GAPd,gDASIF,EAAS,oBATb,QAYE5C,GAAW,GAZb,0DAR8B,sBAuB9B,OACI,sBAAKoD,UAAU,gBAAf,UACE,sBAAKrB,MAAO,CAAEI,MAAO,MAAOkB,SAAU,SAAtC,UACE,sBAAKD,UAAU,cAAf,UACE,qBAAIA,UAAU,UAAd,mBACA,qBAAKE,IAAKzE,kCAAgD0E,IAAI,cAAcH,UAAU,SADtF,OAECzB,GAAS,uBAAOyB,UAAU,aAAjB,SAA+BzB,IACzC,uBAAM6B,SA9Bc,4CA8BpB,UACE,wBAAOJ,UAAU,cAAjB,kBACM,uBAAOtB,GAAG,QAAQC,MAAO,CAAEI,MAAO,OAAQsB,OAAQ,WAAaC,KAAK,QAAQC,IAAKnB,EAAUoB,UAAQ,OAEzG,wBAAOR,UAAU,cAAjB,qBACM,uBAAOtB,GAAG,WAAWC,MAAO,CAAEI,MAAO,OAAQsB,OAAQ,WAAaC,KAAK,WAAWC,IAAKjB,EAAakB,UAAQ,OAElH,wBAAQC,SAAU9D,EAASqD,UAAU,UAAUrB,MAAO,CAAEI,MAAO,OAAQsB,OAAQ,WAAaC,KAAK,SAAjG,uBAIF,qBAAKN,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,QAAQd,GAAG,mBAA3B,mCAGJ,sBAAKc,UAAU,WAAf,8BACmB,cAAC,IAAD,CAAMA,UAAU,QAAQd,GAAG,UAA3B,wBAEnB,sBAAKc,UAAU,WAAf,0BACe,cAAC,IAAD,CAAMA,UAAU,QAAQd,GAAG,iCAA3B,kCAGjB,cAAC,EAAD,OCpDO,SAASkE,IAEtB,OACI,qBAAKpD,UAAU,gBAAf,SACE,qBAAKrB,MAAO,CAAEI,MAAO,MAAOkB,SAAU,SAAtC,SACE,qBAAKD,UAAU,cAAf,SACE,qBAAIA,UAAU,UAAd,kBACA,qBAAKE,IAAKzE,kCAAgD0E,IAAI,cAAcH,UAAU,SADtF,aCcGqD,MArBf,WAAmB,IAEP9F,EAAWnB,IAAXmB,OAFM,4CAGd,sBAAAqC,EAAA,+EAEcrC,IAFd,sDAIQS,QAAQC,IAAI,qBAJpB,yDAHc,sBAgBd,OALApB,qBAAU,YAXI,mCAaVyG,KAED,IAEC,cAAC,IAAD,CAAUpE,GAAG,Y,QCjBN,SAASqE,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAC9DjH,EAAgBL,IAAhBK,YAER,OACE,cAAC,IAAD,2BACMiH,GADN,IAEEC,OAAQ,SAAAC,GACN,OAAOnH,EAAc,cAAC+G,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAU1E,GAAG,eCPtD,SAAS2E,IACtB,IAAMzE,EAAWC,mBACT5B,EAAkBrB,IAAlBqB,cAF+B,EAGbjB,mBAAS,IAHI,mBAGhC+B,EAHgC,KAGzBiB,EAHyB,OAIThD,mBAAS,IAJA,mBAIhCsH,EAJgC,KAIvBC,EAJuB,OAKTvH,oBAAS,GALA,mBAKhCG,EALgC,KAKvBC,EALuB,iDAOvC,WAA4B+C,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAIIkE,EAAW,IACXvE,EAAS,IACT5C,GAAW,GANf,SAOUa,EAAc2B,EAASU,QAAQ9C,OAPzC,OAQI+G,EAAW,6CARf,kDAUIvE,EAAS,4BAVb,QAaE5C,GAAW,GAbb,2DAPuC,sBAuBvC,OACE,qBAAKoD,UAAU,gBAAf,SACE,sBAAKrB,MAAO,CAAEI,MAAO,MAAOkB,SAAU,SAAtC,UACE,sBAAKD,UAAU,cAAf,UACE,qBAAIA,UAAU,UAAd,2BACE,qBAAKE,IAAKzE,kCAAgD0E,IAAI,cAAcH,UAAU,YACvFzB,GAAS,uBAAOyB,UAAU,aAAjB,SAA+BzB,IACxCuF,GAAU,uBAAO9D,UAAU,eAAjB,SAAiC8D,IAC5C,uBAAM1D,SA/ByB,4CA+B/B,UACE,wBAAOJ,UAAU,cAAjB,kBACQ,uBAAOtB,GAAG,QAAQ4B,KAAK,QAAQC,IAAKnB,EAAUoB,UAAQ,OAE9D,wBAAQC,SAAU9D,EAASqD,UAAU,SAASM,KAAK,SAAnD,+BAIF,qBAAKN,UAAU,WAAf,SACE,cAAC,IAAD,CAAMd,GAAG,SAASc,UAAU,QAA5B,wBAGJ,sBAAKA,UAAU,WAAf,8BACmB,cAAC,IAAD,CAAMd,GAAG,UAASc,UAAU,QAA5B,6B,qBCfZgE,MA5Bf,SAAoBJ,GAAQ,IAAD,EACiBpH,mBAAS,IAD1B,mBAChByH,EADgB,KACDC,EADC,KAoBvB,OACI,sBAAKvF,MAAO,CAACwF,QAAQ,OAAQC,WAAW,SAAUC,eAAe,QAASrF,WAAW,KAAMiB,SAAS,SAApG,UACI,uBAAOK,KAAK,OAAO3B,MAAO,CAACI,MAAM,OAAQuF,SAAU,SAACC,GAAD,OAASL,EAAiBK,EAAMC,OAAOC,MAAM,OAChG,qBAAKzE,UAAU,4BAA4BkD,QAAS,SAACvD,IArBzC,SAAC4E,GAClB,IAAMG,EAAU,IAAIC,SACpBD,EAASE,OAAO,OAAQX,GACxBS,EAASE,OAAO,gBAAgBnJ,WAChCoJ,IAAMC,KACF,uDACAJ,GAEHrG,MAAK,SAAA0G,GACLb,EAAiB,IACjBlG,QAAQC,IAAI8G,EAAS/C,KAAKjE,KAC1BC,QAAQC,IAAIsG,EAAMC,OAAOQ,cAAcC,gBAAgBjI,OACvDuH,EAAMC,OAAOQ,cAAcC,gBAAgBjI,MAAM,GACjD4G,EAAMsB,UAAUH,EAAS/C,KAAKjE,QAE7BO,OAAM,SAAAqB,GAAI3B,QAAQC,IAAI,2BAMuCkH,CAAcxF,IAAxE,8BCtBG,SAASyF,IACtB,IAAMhG,EAAWC,mBACXC,EAAcD,mBACdgG,EAAchG,mBACdiG,EAAajG,mBACbE,EAAqBF,mBALW,EAM2BjD,IAAzDK,EAN8B,EAM9BA,YAAamB,EANiB,EAMjBA,eAAgBD,EANC,EAMDA,YAAaE,EANZ,EAMYA,WANZ,EAOZrB,mBAAS,IAPG,mBAO/B+B,EAP+B,KAOxBiB,EAPwB,OAQRhD,oBAAS,GARD,mBAQ/BG,EAR+B,KAQtBC,EARsB,OASVJ,oBAAS,GATC,mBAS/BiD,EAT+B,KASvBC,EATuB,KA8CtC,OAAe,IAAXD,EAA0B,cAAC,IAAD,CAAUP,GAAG,eAEzC,sBAAKc,UAAU,gBAAf,UACE,sBAAKrB,MAAO,CAAEI,MAAO,MAAOkB,SAAU,QAASuC,UAAW,MAA1D,UACE,sBAAKxC,UAAU,cAAf,UACE,qBAAIA,UAAU,UAAd,2BACA,qBAAKE,IAAKzE,kCAAgD0E,IAAI,cAAcH,UAAU,YACrFzB,GAAS,uBAAOyB,UAAU,aAAjB,SAA+BzB,IACzC,uBAAM6B,SAvCd,SAAsBT,GAEpB,GADAA,EAAEE,iBACEP,EAAYQ,QAAQ9C,QAAUuC,EAAmBO,QAAQ9C,MAC3D,OAAOwC,EAAS,0BAGlB,IAAM+F,EAAW,GACjB3I,GAAW,GACX4C,EAAS,IAELJ,EAASU,QAAQ9C,QAAUP,EAAYS,OACzCqI,EAASC,KAAK7H,EAAYyB,EAASU,QAAQ9C,QAEzCsC,EAAYQ,QAAQ9C,OACtBuI,EAASC,KAAK5H,EAAe0B,EAAYQ,QAAQ9C,QAE9CqI,EAAYvF,QAAQ9C,QAAUP,EAAY0B,aAAiBmH,EAAWxF,QAAQ9C,QAAUP,EAAY2B,UACvGmH,EAASC,KAAK3H,EAAWwH,EAAYvF,QAAQ9C,MAAOsI,EAAWxF,QAAQ9C,QAEzEyI,QAAQC,IAAIH,GACTlH,MAAK,WACJqB,GAAU,MAEXpB,OAAM,WACLkB,EAAS,+BAEVmG,SAAQ,WACP/I,GAAW,OAYT,UACE,wBAAOoD,UAAU,cAAjB,iEACI,uBAAOtB,GAAG,WAAW4B,KAAK,OAAOC,IAAK8E,EAAaO,aAAcnJ,EAAY0B,YAAa0H,YAAY,oCAE1G,wBAAO7F,UAAU,cAActB,GAAG,UAAlC,gCACI,uBAAO4B,KAAK,OAAOC,IAAK+E,EAAYM,aAAcnJ,EAAY2B,WAChE,cAAC,EAAD,CAAYO,MAAO,CAAEI,MAAO,QAAS+G,UAAW,QAASzF,OAAQ,QAAU6E,UAlDrE,SAACnH,GACjBgI,SAASC,cAAc,YAAYC,WAAW,GAAGjJ,MAAQe,EACzDuH,EAAWxF,QAAQ9C,MAAQe,EAC3BC,QAAQC,IAAIqH,EAAWxF,QAAQ9C,aAiDvB,wBAAOgD,UAAU,cAAjB,kBACE,uBAAOtB,GAAG,QAAQ4B,KAAK,QAAQC,IAAKnB,EAAUoB,UAAQ,EAACoF,aAAcnJ,EAAYS,WAEnF,wBAAO8C,UAAU,cAAjB,qBACE,uBAAOtB,GAAG,WAAW4B,KAAK,WAAWC,IAAKjB,EAAauG,YAAY,oCAErE,wBAAO7F,UAAU,cAAjB,kCACE,uBAAOtB,GAAG,mBAAmB4B,KAAK,WAAWC,IAAKhB,EAAoBsG,YAAY,oCAEpF,wBAAQpF,SAAU9D,EAASqD,UAAU,UAAUrB,MAAO,CAAEI,MAAO,OAAQsB,OAAQ,WAAaC,KAAK,SAAjG,0BAKJ,qBAAKN,UAAU,WAAf,SACE,cAAC,IAAD,CAAMd,GAAG,aAAac,UAAU,QAAhC,yBAGJ,cAAC,EAAD,OCrFN,IAAIkG,EAAU,CACZ,OAAU,CACR,MAAS,UACT,gBAAmB,UACnB,YAAe,WAGjB,QAAW,CACT,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEhB,UAAa,CACZ,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEjB,QAAW,CACT,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEjB,KAAQ,CACN,MAAS,UACT,gBAAmB,UACnB,YAAe,WAEjB,GAAI,IAES,SAASC,EAAUvC,GAAQ,IAAD,EACDpH,mBAAS,IADR,mBAChC4J,EADgC,KAClBC,EADkB,OAED7J,mBAAS,IAFR,mBAEhC8J,EAFgC,KAElBC,EAFkB,KAUzC,SAASC,IACPnF,OAAOoF,SAAS,aAOhB,OALA5J,qBAAU,WACRwJ,EAAgBK,OAAOC,OAAOT,GAASQ,OAAOE,KAAKV,GAASW,QAAQjD,EAAMkD,QAAQC,SAAS9D,OAC3FsD,EAAgBG,OAAOC,OAAOT,GAASQ,OAAOE,KAAKV,GAASW,QAAQjD,EAAMkD,QAAQE,SAAS/D,OAZ7F,WACE,IAAIgE,EAAE5F,OAAO6F,QACTC,EAAE9F,OAAO+F,QACb/F,OAAOoF,SAAS,WAAWpF,OAAOgG,SAASJ,EAAGE,IAChDnJ,QAAQC,IAAIgJ,EAAGE,GASbG,KACD,IAGC,qBAAK3I,MAAO,CAAEI,MAAO,QAASwI,OAAQ,QAAQ3I,SAAS,WAAW4I,IAAKnG,OAAOoG,YAAY5I,KAAK,EAAGsF,QAAQ,OAAQE,eAAe,SAAUD,WAAW,SAASsD,OAAO,OAAQ7E,gBAAgB,yBAA9L,SACE,sBAAK7C,UAAU,iBAAf,UACE,uBAAOA,UAAU,iBAAiBrB,MAAO+H,OAAOC,OAAOT,GAASQ,OAAOE,KAAKV,GAASW,QAAQjD,EAAMkD,QAAQa,cAA3G,SAA2H/D,EAAMkD,QAAQc,UACzI,oBAAI5H,UAAU,iBAAd,SAAgC4D,EAAMkD,QAAQe,OAC7CjE,EAAMkD,QAAQgB,YAAc,uBAAOpJ,GAAG,aAAaC,MAAO,CAAEI,MAAO,OAAQgJ,aAAc,QAAUnC,aAAchC,EAAMoE,aAC/F,KAAvBpE,EAAMkD,QAAQC,QAAgB,wBAAQ/G,UAAU,iBAAiBrB,MAAO,CAACkE,gBAAgBuD,EAAcnD,MAAM,SAAUC,QAAS,SAAAvD,GAAM6G,IAAe5C,EAAMqE,SAASrE,EAAMkD,QAAQoB,QAAUtE,EAAMkD,QAAQgB,WAAa/B,SAASC,cAAc,eAAehJ,MAAQ,OAAvO,SAC7B4G,EAAMkD,QAAQoB,UAEQ,KAAvBtE,EAAMkD,QAAQE,QAAe,wBAAQhH,UAAU,iBAAiBrB,MAAO,CAACkE,gBAAgByD,EAAcrD,MAAM,SAAUC,QAAS,SAAAvD,GAAM6G,IAAe5C,EAAMqE,SAASrE,EAAMkD,QAAQqB,UAApJ,SAC5BvE,EAAMkD,QAAQqB,eCoEVC,MA7Hf,SAAiBxE,GACb,IAAIyE,EADgB,EAEkB7L,mBAAS8L,EAAW1E,EAAM2E,MAAO3E,EAAM4E,QAAS5E,EAAM6E,UAFxE,mBAEbC,EAFa,KAEAC,EAFA,OAGkBnM,oBAAS,GAH3B,mBAGboM,EAHa,KAGAC,EAHA,OAIgBrM,mBAAS,IAJzB,mBAIbsM,EAJa,KAIDC,EAJC,KAKhBC,EAA4B,KAAdpF,EAAM2E,MAA+B,GAAhB3E,EAAM4E,QAAe5E,EAAM6E,QA4ClE,SAASH,EAAWW,EAAGC,EAAGC,GACtB,MAAM,GAAN,OAAUF,EAAI,GAAK,IAAMA,EAAIA,EAA7B,YAAkCC,EAAI,GAAK,IAAMA,EAAIA,EAArD,YAA0DC,EAAI,GAAK,IAAMA,EAAIA,GAEjF,SAASC,IACLC,cAAchB,GACdhH,OAAOoF,SAAS,aAChBzI,QAAQC,IAAI,OACZ8H,SAASC,cAAc,YAAYsD,UAAUC,IAAI,aACjCxD,SAASyD,iBAAiB,YAChCC,SAAQ,SAAUC,GACxBA,EAASJ,UAAUC,IAAI,gBAE3B3F,EAAM+F,OAAOjB,GAEjB,SAASkB,EAAkBC,GACvB,IAAIC,EAAc/D,SAASC,cAAc,iBACzC,GAAI+D,OAAOC,UAAUH,GAEP,IAANA,IAC0B,KAAtBC,EAAY9M,MAAgB8M,EAAY9M,MAAQ,EAC3CiN,SAASH,EAAY9M,OAAS4G,EAAMsG,QAAWJ,EAAY9M,MAAQiN,SAASH,EAAY9M,OAAS,GAEtG8M,EAAY9M,MAAQ,EACpB+L,EAAc,CACVpB,YAAa,SACbC,QAAS,UACTC,KAAK,qCACLd,OAAQ,SACRmB,QAAS,SACTlB,OAAQ,YACRmB,QAAS,WAEbU,GAAe,MAGZ,IAAPgB,IAC0B,KAAtBC,EAAY9M,MAAgB8M,EAAY9M,MAAQ4G,EAAMsG,QACjDD,SAASH,EAAY9M,OAAS,EAAK8M,EAAY9M,OAAS,EAC5D8M,EAAY9M,MAAQ4G,EAAMsG,cAGnC,GAAU,MAANL,EAAW,CACX,IAAIM,EAAYpE,SAASyD,iBAAiB,YAC1CW,EAAUV,SAAQ,SAAUC,GACxBA,EAASJ,UAAUc,OAAO,iBAE9BD,EAAYpE,SAASyD,iBAAiB,kBAC5BC,SAAQ,SAAUC,GACxBA,EAASJ,UAAUc,OAAO,gBAE9BrE,SAASC,cAAc,aAAasD,UAAUC,IAAI,aAClDO,EAAY9M,MAAQ,OACjB8M,EAAY9M,MAAQ6M,EAExB,MAANA,EAAajG,EAAMU,SAAS,GAAKV,EAAMU,SAAS2F,SAASH,EAAY9M,QAE1E,OACI,eAAC,WAAD,WACK4L,GAAe,cAACzC,EAAD,CAAW8B,SArGlB,SAACoC,GACdxB,GAAe,GACG,WAAdwB,GACDjB,KAkGgDtC,QAASgC,IACxD,wBAAQ9I,UAAU,UAAUtB,GAAG,WAAWC,MAAO,CAAEC,SAAU,WAAY4I,IAAK,OAAQ3I,KAAM,OAAQ6I,OAAQ,OACxGxE,QA1FZ,SAAmBqB,GACf,IAAIkE,EAAU7E,EAAM6E,QAChBD,EAAU5E,EAAM4E,QAChBD,EAAQ3E,EAAM2E,OAVtB,WACI,IAAItB,EAAE5F,OAAO6F,QACTC,EAAE9F,OAAO+F,QACb/F,OAAOoF,SAAS,WAAWpF,OAAOgG,SAASJ,EAAGE,IAChDnJ,QAAQC,IAAIgJ,EAAGE,GAObG,GACAsC,EAAkB,KAClBrF,EAAM1E,iBACW,IAAZ4I,GAA+B,IAAZD,GAA6B,IAAVD,IACvCF,EAAgBiC,aAAY,WACxBtB,IACgB,IAAZP,EACAA,EAAU,GAETA,IACW,KAAZA,IACgB,IAAZD,GACAA,EAAU,GACVD,KACGC,KAEXG,EAAeL,EAAWC,EAAOC,EAASC,IACrB,IAAhBO,IACDK,cAAchB,GACdtC,SAASC,cAAc,YAAYsD,UAAUC,IAAI,aACjD3F,EAAM+F,OAAO,eAGlB,OA8DH,mBAEA,wBAAQ3J,UAAU,oBAAoBrB,MAAO,CAAEC,SAAU,WAAY4I,IAAK,OAAQ3I,KAAM,EAAE0L,WAAW,gBAAiBC,WAAY,cAAe9C,OAAQ,MACrJxE,QAAS,SAAAvD,GAAOiK,GAAmB,IADvC,wBAEA,wBAAO5J,UAAU,oBAAoBrB,MAAO,CAACC,SAAU,WAAW4I,IAAI,IAAI3I,KAAK,IAAKwB,OAAO,aAAcoK,SAAU,mBAAoB/C,OAAQ,MAA/I,UACI,uBAAO1H,UAAU,yBAAyBrB,MAAO,CAAEI,MAAO,MAAO0L,SAAU,oBAAsBnK,KAAK,SAAS5B,GAAG,eAAegM,IAAI,IAAIC,IAAK/G,EAAMsG,QAAQU,WAAY1H,QAAS,SAAAvD,GAAC,OAAIiK,EAAkBjK,EAAE6E,OAAOxH,UADrN,MAEQ4G,EAAMsG,WACd,wBAAQlK,UAAU,qBAAqBrB,MAAO,CAAEC,SAAU,WAAY4I,IAAK,OAAQqD,MAAO,EAAEN,WAAW,gBAAiBC,WAAY,cAAe9C,OAAQ,MACvJxE,QAAS,SAAAvD,GAAOiK,EAAkB,IADtC,wBAGA,uBAAO5J,UAAU,oBAAoBrB,MAAO,CAAEC,SAAU,WAAY4L,WAAY,cAAehD,IAAK,EAAG3I,KAAM,OAAQE,MAAO,MAAO2I,OAAQ,KAAM6C,WAAW,iBAA5J,SAAgL7B,IAChL,wBAAQ1I,UAAU,oBAAoBtB,GAAG,YAAaC,MAAO,CAAEC,SAAU,WAAY4I,IAAK,EAAGqD,MAAO,EAAErI,UAAU,SAAUsI,gBAAgB,OAAD,OAAQrP,gCAAR,KAAwDsD,MAAO,MAAOwI,OAAQ,MAAOwD,YAAa,MAAMjI,aAAa,MAAO4E,OAAQ,MACzQxE,QAASkG,Q,iBCzDV4B,G,MA9DG,SAAApH,GA0Bd,OAvBA/G,qBAAU,WACN,IAAK,IAAIsF,EAAI,EAAGA,EAAIyB,EAAMqH,QAAQlL,OAAQoC,IACtC4D,SAASC,cAAc,WAAa7D,GAAG+I,SAAU,EAC7CtH,EAAMuH,aAAatE,QAAQ1E,IAAM,IAAG4D,SAASC,cAAc,WAAa7D,GAAG+I,SAAU,KAE/F,CAACtH,EAAMqH,UAmBL,cAAC,WAAD,UACI,sBAAKvM,GAAG,uBAAuBC,MAAO,CAAEyM,QAASxH,EAAMyH,KAAvD,UACI,yBAASrL,UAAU,kBAAnB,SACI,cAAC,IAAD,CAAS2K,IAAK,IAAKW,KAAK,QACpBZ,IAAK,GACL/L,MAAO,CACHsE,MAAM,QACNsI,UAAW,MACXC,UAAW,MACXC,SAAU,MACVxL,SAAU,MACVyL,WAAY,EACZrL,OAAO,OACPqC,UAAU,SACV6H,WAAY,qBAXpB,SAYQ3G,EAAM+H,aAGlB,yBAAS3L,UAAU,gBAAgBrB,MAAO,CAAEwF,QAAS,OAAQE,eAAgB,gBAAgBuH,aAAa,SAAUC,SAAU,OAAQ9M,MAAO,MAAO+M,SAAS,WAA7J,SACKlI,EAAMqH,QAAQnJ,KAAI,SAACiK,EAAcC,GAC9B,OACI,wBAAOhM,UAAU,cAAmCrB,MAAO,CAACI,MAAM,MAAMwM,UAAU,MAAOC,UAAW,QAASvL,SAAS,SAAtH,UACI,uBAAOK,KAAK,WAAWN,UAAU,WAAgCtB,GAAI,UAAYsN,EAAGhP,MAAOgP,EAAG1H,SAAU,SAAA3E,GAAC,OAxCrI,SAAuBA,GACnB,GAAmB,IAAfiE,EAAMtD,KAAY,CAClB,IAAK,IAAI6B,EAAI,EAAGA,EAAIyB,EAAMqH,QAAQlL,OAAQoC,IACtC4D,SAASC,cAAc,WAAa7D,GAAG+I,SAAU,EAGrDnF,SAASC,cAAc,IAAMrG,EAAE6E,OAAO9F,IAAIwM,SAAU,EAGxD,IADA,IAAIe,EAAS,GACJ9J,EAAI,EAAGA,EAAIyB,EAAMqH,QAAQlL,OAAQoC,KACiB,IAAnD4D,SAASC,cAAc,WAAa7D,GAAG+I,SACvCe,EAAOzG,KAAKrD,GAGpByB,EAAMU,SAAS2H,GA0BsHC,CAAcvM,KAA1E,WAAaqM,GAC9D,sBAAKhM,UAAU,eAAerB,MAAO,CAAEmM,gBAAgB,OAAD,OAASiB,EAAaI,IAAtB,KAA8BC,iBAAkB,YAAaC,eAAgB,aAAnI,UACI,qBAAKrM,UAAU,WAAf,cAA+B,SAAWgM,GAC1C,qBAAKhM,UAAU,OAA2BrB,MAAO,CAACI,MAAM,QAAxD,SAAkEgN,EAAalE,MAApD,UAAYmE,QAJX,WAAaA,e,MCyB9DM,MAzEf,SAAsB1I,GA0BlB,OAxBA/G,qBAAU,WACN,IAAK,IAAIsF,EAAI,EAAGA,EAAIyB,EAAMqH,QAAQlL,OAAQoC,IACtC4D,SAASC,cAAc,WAAa7D,GAAG+I,SAAU,EAC7CtH,EAAMuH,aAAatE,QAAQ1E,IAAM,IAAG4D,SAASC,cAAc,WAAa7D,GAAG+I,SAAU,KAG9F,CAACtH,EAAMqH,UAmBN,sBAAKvM,GAAG,0BAA0BC,MAAO,CAAEyM,QAASxH,EAAMyH,KAA1D,UACI,0BAASrL,UAAU,kBAAkBrB,MAAO,CAAEwF,QAAS,OAAQE,eAAgB,eAAgBD,WAAY,SAAUyH,SAAU,OAAQ9M,MAAO,MAAO+M,SAAU,UAA/J,UACI,qBAAKnN,MAAO,CAACI,MAAM,OAAOoF,QAAS,OAAOE,eAAe,SAAUD,WAAY,SAAUmD,OAAQlG,OAAOkL,WAAa,IAAM,MAAQ,OAAnI,SACI,qBAAKrM,IAAK0D,EAAM4I,KAAKL,IAAKxN,MAAO,CAAE4I,OAAO,OAAQkF,UAAU,UAAWtM,IAAKyD,EAAM4I,KAAKL,QAE3F,qBAAKxN,MAAO,CAACI,MAAM,OAAQwI,OAAQlG,OAAOkL,WAAa,IAAM,MAAQ,OAArE,SACI,cAAC,IAAD,CAAS5B,IAAK,IAAKW,KAAK,QACpBZ,IAAK,GACL/L,MAAO,CACHsE,MAAO,QACPsI,UAAW,MACXC,UAAW,MACXC,SAAU,MACVxL,SAAU,MACVyL,WAAY,EACZrL,OAAQ,OACRqC,UAAW,SACX6H,WAAY,qBAXpB,SAYQ3G,EAAM+H,gBAGtB,yBAAS3L,UAAU,gBAAgBrB,MAAO,CAAEwF,QAAS,OAAQE,eAAgB,eAAgBD,WAAY,SAAUyH,SAAU,OAAQ9M,MAAO,MAAO+M,SAAU,WAA7J,SACKlI,EAAMqH,QAAQnJ,KAAI,SAACiK,EAAcC,GAC9B,OACI,wBAAOhM,UAAU,gBAAwCrB,MAAO,CAAE4I,OAAO,GAAD,OAAK,GAAK3D,EAAMqH,QAAQlL,OAAxB,MAAxE,UACI,uBAAOO,KAAK,WAAWN,UAAU,WAAmCtB,GAAI,UAAYsN,EAAGhP,MAAOgP,EAAG1H,SAAU,SAAA3E,GAAC,OA3CpI,SAAuBA,GACnB,GAA2B,IAAvBiE,EAAM4I,KAAKE,QAAe,CAC1B,IAAK,IAAIvK,EAAI,EAAGA,EAAIyB,EAAMqH,QAAQlL,OAAQoC,IACtC4D,SAASC,cAAc,WAAa7D,GAAG+I,SAAU,EAGrDnF,SAASC,cAAc,IAAMrG,EAAE6E,OAAO9F,IAAIwM,SAAU,EAGxD,IADA,IAAIe,EAAS,GACJ9J,EAAI,EAAGA,EAAIyB,EAAMqH,QAAQlL,OAAQoC,KACiB,IAAnD4D,SAASC,cAAc,WAAa7D,GAAG+I,SACvCe,EAAOzG,KAAKrD,GAGpByB,EAAMU,SAAS2H,GA6BqHC,CAAcvM,KAA7E,cAAgBqM,GACjE,qBAAKhM,UAAU,eAAf,SACI,cAAC,IAAD,CAASA,UAAU,OAA8B2K,IAAK,IAAKW,KAAK,QAC5DZ,IAAK,GACL/L,MAAO,CACH4M,UAAW,MACXC,UAAW,MACXC,SAAU,MACVxL,SAAU,MACVyL,WAAY,EACZhJ,UAAW,SACX6H,WAAY,qBATpB,SAUQwB,EAAalE,MAVU,aAAemE,IADf,YAAcA,KAFf,cAAgBA,YCjC/DW,EAlBS,SAAA/I,GAAU,IAAD,EACWpH,mBAAS,IADpB,mBACtBoQ,EADsB,KACRC,EADQ,KAS7B,OAPAhQ,qBAAU,WACN,IAAIiQ,EAAkBlJ,EAAM4G,WAAWzK,OAAO,EAAzB,cAAoC6D,EAAM4G,WAA1C,KAAwD,GACzEuC,EAAgBnJ,EAAMoJ,SAASjN,OAAO,EAAvB,WAA+B6D,EAAMoJ,UAAW,GAC/DC,EAASrJ,EAAM4G,WAAWzK,OAAO,GAAO6D,EAAMoJ,SAASjN,OAAO,EAAI,IAAI,GAC1E8M,EAAiBE,EAAcE,EAAMH,GACrC9O,QAAQC,IAAI2F,EAAM+H,YACnB,IAEK,sBAAKjN,GAAG,2BAA2BsB,UAAS,UAAqB,SAAf4D,EAAMsJ,OAAmB,WAAa,IAAMvO,MAAO,CAACmM,gBAAgB8B,GAAtH,UAC2B,QAAtBhJ,EAAM4I,KAAKW,OAAmB,cAAC,EAAD,CAAW7M,KAAMsD,EAAM4I,KAAKE,QAASrB,IAAKzH,EAAMyH,IAAKM,SAAU/H,EAAM+H,SAAUV,QAASrH,EAAMqH,QAASE,aAAcvH,EAAMuH,aAAc7G,SAAU,SAAC8I,GAASxJ,EAAMU,SAAS8I,MACrM,qBAAKzO,MAAO,CAAEwF,QAAS,UACN,WAAtBP,EAAM4I,KAAKW,OAAsB,cAAC,EAAD,CAAcX,KAAM5I,EAAM4I,KAAMnB,IAAKzH,EAAMyH,IAAKM,SAAU/H,EAAM+H,SAAUV,QAASrH,EAAMqH,QAASE,aAAcvH,EAAMuH,aAAc7G,SAAU,SAAC8I,GAASxJ,EAAMU,SAAS8I,MACnM,qBAAKzO,MAAO,CAAEwF,QAAS,cCkC9BkJ,MAjDf,SAAoBzJ,GAChB,IAAMzC,EAAK7F,EAAS8F,YADG,EAEgB5E,mBAAS,IAFzB,mBAEhB8Q,EAFgB,KAEHC,EAFG,KAyBvB,OAtBA1Q,qBAAU,WACN,IAAI2Q,EAAc,IACH,uCAAG,sBAAA5N,EAAA,sDAEduB,EAAGK,WAAW,WAAWC,MAAM,SAAU,KAAMmC,EAAM6J,QAAQ9L,MAAMtD,MAAK,SAACqP,GACrEA,EAAcjE,SAAQ,SAAC1H,GAEnByL,EAAYhI,KAAKzD,EAAIC,WAEzBwL,EAAYG,MAAK,SAAU/N,EAAGgO,GAC1B,OAAIA,EAAEhM,SAAWhC,EAAEgC,OAAiBgM,EAAEC,KAAOjO,EAAEiO,KAAqBD,EAAEhM,OAAShC,EAAEgC,UAErF2L,EAAgBC,MAVN,2CAAH,qDAefM,GACA9P,QAAQC,IAAIqP,KAEb,IAGC,qBAAK3O,MAAO,CAAEI,MAAO,OAAQyM,UAAW,OAAQM,SAAU,OAAQpJ,UAAW,SAAU2B,eAAgB,SAASvB,aAAa,OAAQgI,gBAAiB,ueAAtJ,SACI,wBAAOnM,MAAO,CAAE0B,OAAO,QAAvB,UACI,+BACI,sCACA,wCACA,8CAEJ,gCACCiN,GAAeA,EAAYxL,KAAI,SAACiM,EAAM/B,GACnC,OACI,+BACI,6BAAoB+B,EAAK5P,aAAhB,OAAO6N,GAChB,6BAAsB+B,EAAKnM,QAAlB,SAASoK,GAClB,6BAAoB+B,EAAKF,MAAhB,OAAO7B,KAHXA,c,gFCUlBgC,MA7Cf,SAAmBpK,GACf,IAAIqK,EAAoB,CACpB,gBAAiB,CACb1G,OAAQ,kBACRxI,MAAO,oBAGf,OACI,gCACI,cAACmP,EAAA,EAAD,CACInQ,IAAK6F,EAAM7F,IACXoQ,MAAOvK,EAAMwK,MAAM,KAAKxK,EAAMuK,MAC9BE,QAASzK,EAAMyK,QACfrO,UAAWiO,EAJf,SAMI,cAACK,EAAA,EAAD,CAAcC,KAAM,GAAIC,OAAO,MAEnC,cAACC,EAAA,EAAD,CACI1Q,IAAK6F,EAAM7F,IACXqQ,MAAOxK,EAAMwK,MAAM,KAAKxK,EAAMuK,MAC9BE,QAASzK,EAAMyK,QACfrO,UAAWiO,EAJf,SAMI,cAACS,EAAA,EAAD,CAAaH,KAAM,GAAIC,OAAO,MAElC,cAACG,EAAA,EAAD,CACI5Q,IAAK6F,EAAM7F,IACXqQ,MAAOxK,EAAMwK,MAAM,KAAKxK,EAAMuK,MAC9BS,UAAU,MACV5O,UAAWiO,EAJf,SAMI,cAACY,EAAA,EAAD,CAAcN,KAAM,GAAIC,OAAO,MAGnC,cAACM,EAAA,EAAD,CACI/Q,IAAK6F,EAAM7F,IACXgR,QAASnL,EAAMwK,MACfY,KAAMpL,EAAMuK,MAAM,KAClBc,MAAOrL,EAAMsL,MACblP,UAAWiO,EALf,SAMI,cAACkB,EAAA,EAAD,CAAWZ,KAAM,GAAIC,OAAO,UCmC7BY,EAzEQ,SAAAxL,GAAU,IACrBnH,EAAgBL,IAAhBK,YADoB,EAEQD,mBAASC,EAAcA,EAAY0B,YAAc,IAFzD,mBAErBkR,EAFqB,KAETC,EAFS,KAGtBC,EAAWlQ,iBAAO5C,EAAcA,EAAYiF,IAAM,IAaxD,SAAS8N,IACLnO,OAAOC,SAASmO,SAChBzR,QAAQC,IAAI,iBAGhB,SAASyR,EAAcC,GACnB,IAAI9B,EAAO8B,EAAEC,MAAM,KACnB,OAA2B,KAApB3F,SAAS4D,EAAK,IAAiC,GAApB5D,SAAS4D,EAAK,IAAW5D,SAAS4D,EAAK,IAE7E,OAEI,sBAAKlP,MAAO,CACRwF,QAAS,OAAQ0H,SAAU,OAAQ9M,MAAO,OAAOyD,UAAU,MAAOoJ,aAAc,SAAUvH,eAAgB,SAAUpB,MAAO,QAASsH,WAAY,kBAChJO,gBAAiB,seAAueuB,eAAgB,aAF5gB,UAIKzI,EAAM6J,OAAO1N,OAAS,GAAK,oBAAIpB,MAAO,CAAEI,MAAO,OAAQ2D,UAAW,UAAvC,yBAC3BkB,EAAM6J,OAAO1N,OAAS,GAAK,cAAC,EAAD,CAAY0N,OAAQ7J,EAAM6J,SACtD,qBAAI9O,MAAO,CAAEI,MAAO,OAAQ2D,UAAW,UAAvC,sBAA6DkB,EAAMrB,KAAnE,KAA2EmN,EAAc9L,EAAMiK,MAA/F,cACA,qBAAKlP,MAAO,CAAEI,MAAO,OAAQyM,UAAW,OAAQM,SAAU,OAAQpJ,UAAW,SAAU2B,eAAgB,SAAUvB,aAAc,QAA/H,SACI,wBAAOnE,MAAO,CAAE0B,OAAQ,QAAxB,UACI,+BACI,0CACA,2CAGHuD,EAAMiM,IAAI/N,KAAI,SAAC+N,EAAK7D,GACjB,OACI,+BACI,6BAAsBA,EAAI,GAAjB,MAAQA,GACjB,6BAAyB6D,EAAM,0CAAuB,2CAA7C,UAAY7D,KAFhB,IAAMA,WAS9BpI,EAAM6J,OAAO1N,OAAS,GAAK,oBAAIpB,MAAO,CAAEI,MAAO,OAAQ2D,UAAW,UAAvC,6CAE3B6M,EAASzP,QAAQC,QAAU,GAAK,wBAAOC,UAAU,cAAcrB,MAAO,CAAEI,MAAO,OAAQ2D,UAAW,UAAlE,iEACzB,uBAAOhE,GAAG,WAAWC,MAAO,CAAEK,WAAY,QAAUsF,SAAU,SAAA3E,GAAC,OAAI2P,EAAc3P,EAAE6E,OAAOxH,aAEjG4G,EAAM6J,OAAO1N,OAAS,GAAK,wBAAQC,UAAU,UAAUrB,MAAO,CAAE0B,OAAQ,OAAS6C,QAAS,SAAAvD,GApDpFrE,EAAS8F,YACjBI,WAAW,WAAW+H,IAAI,CACzBkE,OAAQ7J,EAAM6J,OACdtP,YAAakR,EACbS,OAAQP,EAASzP,QACjB8B,OAAQgC,EAAMrB,KACdsL,KAAM6B,EAAc9L,EAAMiK,QAC3BxP,MAAK,SAAAuD,GAAY4N,OACflR,OAAM,SAAAqB,GAAO3B,QAAQC,IAAI,6BA4CE,6BAC3B2F,EAAM6J,OAAO1N,OAAS,GAAK,wBAAQC,UAAU,UAAUrB,MAAO,CAAE0B,OAAQ,OAAS6C,QAAS,SAAAvD,GAAC,OAAI6P,KAApE,4BAC5B,qBAAK7Q,MAAO,CAAEwF,QAAS,OAAQpF,MAAO,OAAQsF,eAAgB,UAA9D,SACKT,EAAM6J,OAAO1N,QAAU,GAAK,wBAAQC,UAAU,UAAUrB,MAAO,CAAE0B,OAAQ,OAAS6C,QAAS,SAAAvD,GAAC,OAAI6P,KAApE,0BAEhC5L,EAAM6J,OAAO1N,OAAS,GAAK,qCACxB,oBAAIpB,MAAO,CAAEI,MAAO,OAAQ2D,UAAW,UAAvC,0CACA,cAAC,EAAD,CAAW0L,MAAK,8BAAyBxK,EAAMmM,SAA/B,sBAA6DhS,IAAK,wDAA0D6F,EAAM6J,OAAQU,MAAK,gBAAWvK,EAAMrB,KAAjB,0BAAuCmN,EAAc9L,EAAMiK,MAA3D,kFAC3JQ,QAAS,aAAca,MAAOzT,kCAAgDuU,YAAa,qE,MCsDhGC,OAtHf,SAAiBrM,GACf,IAAIsM,EAAe,CAACjG,SAASrG,EAAMmK,KAAKoC,KAAK5H,OAAQ0B,SAASrG,EAAMmK,KAAKoC,KAAK3H,SAAUyB,SAASrG,EAAMmK,KAAKoC,KAAK1H,UAC7G2H,EAAiBxM,EAAMmK,KAAKoC,KAAK3F,WACjC6F,EAAWzM,EAAMmK,KAAKA,KACtBA,EAAO,GACPuC,EAAY,GALM,EAMU9T,mBAAS,GANnB,mBAMf+T,EANe,KAMLC,EANK,OAOchU,mBAAS,IAPvB,mBAOfiU,EAPe,KAOHC,EAPG,OAQQlU,mBAAS,IARjB,mBAQfmU,EARe,KAQNC,EARM,OASQpU,mBAAS,IATjB,mBASfqU,EATe,KASNC,EATM,OAUMtU,mBAAS,GAVf,mBAUfuU,EAVe,KAUPC,EAVO,OAWQxU,mBAAS,GAXjB,mBAWfyU,EAXe,KAWNC,EAXM,OAYoB1U,mBAAS,IAZ7B,mBAYf2U,EAZe,KAYAC,EAZA,KAatB,SAASC,EAAWC,GAKlB,IAHA,IAAIC,EAAY,GACZC,EAAcF,EAAIvR,OAClB0R,EAAY,EACPtP,EAAI,EAAGA,EAAIqP,EAAarP,IAC/BsP,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAAIvR,QAC3CwR,EAAU/L,KAAK8L,EAAIG,IACnBH,EAAIO,OAAOJ,EAAW,GAGxB,OAAOF,EAGT,SAASO,EAAaR,EAAKzH,GAIzB,IAFA,IAAI0H,EAAY,GACZE,EAAY,EACPtP,EAAI,EAAGA,EAAI0H,EAAG1H,IACrBsP,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAAIvR,QAC3CwR,EAAU/L,KAAK8L,EAAIG,IACnBH,EAAIO,OAAOJ,EAAW,GAExB,OAAOF,EA6BT,SAASQ,EAAcpC,GACrB,IAAI2B,EAAM,GACNzH,EAAI,EACR7L,QAAQC,IAAI0R,GACZ,IAAIqC,EAhBN,WAGE,IAFA,IAAIV,EAAM,GACNW,EAAW,GACN9P,EAAI,EAAGA,EAAIgP,EAAcpR,OAAQoC,IAAK,CAC7C8P,EAAW,GACX,IAAK,IAAIjG,EAAI,EAAGA,EAAImF,EAAchP,GAAG8I,QAAQlL,OAAQiM,KACR,IAAvCmF,EAAchP,GAAG8I,QAAQe,GAAGC,QAAiBgG,EAASzM,KAAKwG,GAEjEsF,EAAI9L,KAAKyM,GAEX,OAAOX,EAMUY,GACjBhB,EAAW,GACX,IAAK,IAAI/O,EAAI,EAAGA,EAAI6P,EAAWjS,OAAQoC,IACrCgQ,KAAKC,UAAUJ,EAAW7P,MAAQgQ,KAAKC,UAAUzB,EAAQxO,IAAMmP,EAAI9L,MAAK,GAAQ8L,EAAI9L,MAAK,IAC1E,IAAX8L,EAAInP,KAAa0H,GAAK,GAE5B7L,QAAQC,KAAM4L,EAAImI,EAAWjS,OAAS,KAAKuC,QAAQ,GAAIsI,YACvDoG,GAAYnH,EAAImI,EAAWjS,OAAS,KAAKuC,QAAQ,IACjDwO,EAAWQ,GACXZ,EAAcf,GACd3R,QAAQC,IAAI4S,GA0Bd,OAvBAhU,qBAAU,WACRmB,QAAQC,IAAI2F,EAAMmK,KAAKrP,IAEvB,IADA,IAAI2T,EAAa,GACRlQ,EAAI,EAAGA,EAAIkO,EAAStQ,OAAQoC,IAEnCkQ,EAAahB,EADbgB,EAAaP,EAAazB,EAASlO,GAAGmQ,OAAQjC,EAASlO,GAAGqK,KAAKE,SAAS6F,OAAOT,EAAazB,EAASlO,GAAGqQ,OAAQnC,EAASlO,GAAGqK,KAAKiG,UAAYpC,EAASlO,GAAGqK,KAAKE,WAG9JqB,EAAKvI,KAAK,CACR,KAAQ6K,EAASlO,GAAGqK,KACpB,SAAY6D,EAASlO,GAAGwJ,SACxB,QAAW0G,IAEb/B,EAAUuB,OAAO,EAAG,EAAG,IAGzBjB,EAAWN,GACXc,EAAiBrD,KAChB,IACJlR,qBAAU,WACRgU,EAAQ9Q,OAAS,EAAKgG,SAASC,cAAc,cAAcrH,MAAMwF,QAAU,OAAQ4B,SAASC,cAAc,cAAcrH,MAAMwF,QAAU,SACxI,CAAC0M,IAIA,qCACGA,EAAQ9Q,OAAS,GAAK,cAAC,EAAD,CAAgB8P,IAAKgB,EAAStO,KAAMwO,EAAQlD,KAAM4C,EAAYjG,WAAY4F,EAAgBL,SAAUnM,EAAMmK,KAAKoC,KAAKrS,KAAM2P,OAAQ7J,EAAM8O,MAAM,GAAG9O,EAAMmK,KAAKrP,KAClLyS,GAAiBN,EAAQ9Q,QAAU,GACpC,qBAAMpB,MAAO,CAAEC,SAAU,WAAY4I,IAAK,EAAG3I,KAAM,EAAGE,MAAO,OAAQwI,OAAQ,OAA7E,SACA,cAAC,EAAD,CAAU2C,QAASiH,EAAcpR,OAAQwI,MAAO2H,EAAa,GAAI1H,QAAS0H,EAAa,GAAIzH,QAASyH,EAAa,GAAIvG,OAAQ,SAACgG,GAAQoC,EAAcpC,IAAMrL,SAAU,SAACqO,IAjEzK,SAA8BA,GACxBA,EAAI,EAAKnC,EAAYmC,EAAI,IAE3BnC,EAAYmC,GACZzB,EAAW,IA6DkK0B,CAAqBD,QAGjMxB,GAAiBN,EAAQ9Q,QAAU,GAAK,cAAC,EAAD,CAAiByK,WAAY4F,EAAgBpD,SAAUpJ,EAAMmK,KAAKoC,KAAKnD,SAAUE,OAAQ,OAASV,KAAM2E,EAAcZ,GAAU/D,KAAMnB,IAAK4F,EAAStF,SAAUwF,EAAcZ,GAAU5E,SAAUV,QAASkG,EAAcZ,GAAUtF,QAASE,aAAcwF,EAAQJ,GAAWjM,SAAU,SAAC8I,IA3EnU,SAAuBA,GACrB,IAAIyF,EAAelC,EACnBkC,EAAahB,OAAOtB,EAAU,EAAGnD,GACjCpP,QAAQC,IAAI4U,GACZjC,EAAWiC,GAuE+TC,CAAc1F,UCnH7U,SAAS2F,KAAiB,MAEfvW,mBAAS,IAFM,mBAEhCuR,EAFgC,KAE1BiF,EAF0B,OAGTxW,oBAAS,GAHA,mBAGhCG,EAHgC,KAGvBC,EAHuB,KAIjCuE,EAAK7F,EAAS8F,YACd1C,EAAOuU,cAAPvU,GAcN,OAbA7B,qBAAU,WACRsE,EAAGK,WAAW,SAASO,IAAIrD,GAAIiD,MAAMtD,MAAK,SAACqP,GAEzCsF,EAAQ,2BAAKtF,EAAc1L,QAApB,IAA4BtD,GAAIA,KACvC9B,GAAW,MAEV0B,OAAM,SAAAC,GACLP,QAAQC,IAAIM,QAKf,IAED,mCACG5B,GAAW,cAAC,GAAD,CAASoR,KAAMA,EAAM2E,OAAO,M,OCkF/BQ,OArGf,SAAatP,GAAQ,IAAD,EAC4BpH,oBAAS,GADrC,mBACT2W,EADS,KACOC,EADP,KAER3W,EAAgBL,IAAhBK,YAFQ,EAGoBD,mBAAS,IAH7B,mBAGT6W,EAHS,KAGGC,EAHH,KAKhB,SAASC,IACLH,GAAmBD,GAkCvB,OAhCAtW,qBAAU,WACN,IAAI2W,EAAW/X,qCACXgB,GAAcA,EAAY2B,SAAS,GAAKkV,EAAc7W,EAAY2B,UAElEkV,EAAcE,KAGnB,CAAC/W,IACJI,qBAAU,WACHwE,OAAOkL,WAAW,MAEjBxG,SAASC,cAAc,cAAcrH,MAAMwF,QAD3CgP,EACmD,OAGA,WAIzD,CAACA,IACHtW,qBAAU,WACFwE,OAAOkL,YAAY,KACnBxG,SAASC,cAAc,cAAcrH,MAAMwF,QAAQ,OACnD4B,SAASC,cAAc,cAAcrH,MAAM0F,eAAe,SAC1D0B,SAASC,cAAc,cAAcrH,MAAMI,MAAM,OAGjDgH,SAASC,cAAc,cAAcrH,MAAMwF,QAAQ,SAIzD,CAAC9C,OAAOkL,aAGN,sBAAKvM,UAAU,SAAf,UAEKqB,OAAOkL,WAAW,IAAO,cAAC,IAAD,CAAMrN,GAAG,aAAT,SAAsB,qBAAKc,UAAU,eAAeE,IAAKmT,EAAYlT,IAAI,aACjG,eAAC,IAAD,CAAMjB,GAAG,IAAIc,UAAU,YAAvB,cAAoC,qBAAKE,IAAMzE,kCAA8C0E,IAAI,QAAQxB,MAAO,CAACI,MAAM,QAAQwI,OAAO,cAChJlG,OAAOkL,WAAW,IAAO,cAAC,IAAD,CAAMrN,GAAG,IAAIc,UAAU,YAAvB,uBACE,KAClBqB,OAAOkL,WAAW,IAAO,sBAAM7N,GAAG,iBAAkBwE,QAASqQ,EAApC,SACtB,qBAAK5U,MAAO,CAAEI,MAAO,MAAOwI,OAAQ,MAAMkM,MAAM,UAAhD,SACIN,EACC,qBAAKjT,IAAMzE,gCAA4C0E,IAAI,SAC5D,qBAAKD,IAAMzE,+BAA2C0E,IAAI,cAEzD,KAEL,qBAAIzB,GAAG,YAAP,WAGKjC,GAAe,oBAAIuD,UAAU,WAAd,SACZ,cAAC,IAAD,CAAMd,GAAG,SAASc,UAAU,WAAWkD,QAAS,SAAAqB,GAAK,OAAIgP,KAAzD,sBAKF9W,GAAe,oBAAIuD,UAAU,WAAd,SACb,cAAC,IAAD,CAAMd,GAAG,UAAUc,UAAU,WAAWkD,QAAS,SAAAqB,GAAK,OAAIgP,KAA1D,sBAMJ,oBAAIvT,UAAU,WAAd,SACI,cAAC,IAAD,CAAMd,GAAG,IAAIc,UAAU,WAAWkD,QAAS,SAAAqB,GAAK,OAAIgP,KAApD,0BAIF9W,GAAe,oBAAIuD,UAAU,WAAd,SACb,cAAC,IAAD,CAAMd,GAAG,UAAUc,UAAU,WAAWkD,QAAS,SAAAqB,GAAK,OAAIgP,KAA1D,4BAIJ,oBAAIvT,UAAU,WAAd,SACI,cAAC,IAAD,CAAMd,GAAG,SAASc,UAAU,WAAWkD,QAAS,SAAAqB,GAAK,OAAIgP,KAAzD,qBAID9W,GAAe,oBAAIuD,UAAU,WAAd,SACd,cAAC,IAAD,CAAMd,GAAG,UAAUc,UAAU,WAAWkD,QAAS,SAAAqB,GAAK,OAAKgP,KAA3D,yBAOXlS,OAAOkL,WAAW,IAAO,KAAM,cAAC,IAAD,CAAMrN,GAAG,aAAT,SAC7B,qBAAKc,UAAU,eAAgBE,IAAKmT,EAAYlT,IAAI,wBCtDpDuT,I,OA7CQ,SAAA9P,GA2BnB,OAxBA/G,qBAAU,WACN,IAAK,IAAIsF,EAAI,EAAGA,EAAGyB,EAAMqH,QAAQlL,OAAQoC,IACrC4D,SAASC,cAAc,aAAe7D,GAAG+I,SAAU,EAC/CtH,EAAMuH,aAAatE,QAAQ1E,IAAM,IAAG4D,SAASC,cAAc,aAAe7D,GAAG+I,SAAU,GAE/FlN,QAAQC,IAAI2F,EAAMqH,WACpB,IAmBE,cAAC,WAAD,UACQ,yBAASjL,UAAU,oBAAnB,SACK4D,EAAMqH,QAAQnJ,KAAI,SAACiK,EAAcC,GAC9B,OACI,wBAAOhM,UAAU,cAAmCrB,MAAO,CAACI,MAAM,MAAMyM,UAAU,QAASvL,SAAS,QAASI,OAAO,OAApH,UACI,uBAAOC,KAAK,WAAWN,UAAU,WAAgCtB,GAAI,YAAcsN,EAAGhP,MAAOgP,EAAG1H,SAAU,SAAA3E,GAAC,OAvBvI,SAAuBA,GACnB,GAAmB,IAAfiE,EAAMtD,KAAY,CAClB,IAAK,IAAI6B,EAAI,EAAGA,EAAIyB,EAAMqH,QAAQlL,OAAQoC,IACtC4D,SAASC,cAAc,aAAe7D,GAAG+I,SAAU,EAGvDnF,SAASC,cAAc,IAAMrG,EAAE6E,OAAO9F,IAAIwM,SAAU,EAGxD,IADA,IAAIe,EAAS,GACJ9J,EAAI,EAAGA,EAAIyB,EAAMqH,QAAQlL,OAAQoC,KACmB,IAArD4D,SAASC,cAAc,aAAe7D,GAAG+I,SACzCe,EAAOzG,KAAKrD,GAGpByB,EAAMU,SAAS2H,GASwHC,CAAcvM,KAA5E,WAAaqM,GAC9D,sBAAKhM,UAAU,eAAerB,MAAO,CAAEmM,gBAAgB,OAAD,OAASiB,EAAaI,IAAtB,KAA8BC,iBAAkB,YAAaC,eAAgB,UAAUsH,mBAAoB,aAAjK,UACI,qBAAK3T,UAAU,WAAf,cAA+B,SAAWgM,GAC1C,qBAAKhM,UAAU,QAA4BrB,MAAO,CAACI,MAAM,QAAzD,SAAmEgN,EAAalE,MAApD,UAAYmE,QAJZ,WAAaA,YCjC9D,SAAS4H,GAAchQ,GAClC,OAEI,aADA,CACA,OAAKjF,MAAO,CAAEI,MAAO,QAASwI,OAAQ,QAAQ3I,SAAS,WAAW4I,IAAKnG,OAAOoG,YAAa5I,KAAK,EAAGsF,QAAQ,OAAQE,eAAe,SAAUD,WAAW,UAAvJ,SACI,sBAAKpE,UAAU,iBAAf,UACI,oBAAIA,UAAU,iBAAd,SAA+B,iCAAS4D,EAAMmK,KAAKjQ,SACnD,oBAAGkC,UAAU,iBAAb,UAA8B,6CAA9B,IAAwD4D,EAAMmK,KAAK8F,UACnE,oBAAG7T,UAAU,iBAAb,UAA8B,kDAA9B,IAA6D4D,EAAMmK,KAAKiC,eACxE,oBAAGhQ,UAAU,iBAAb,UAA8B,sDAA9B,IAAiE4D,EAAMmK,KAAK+F,kBAC5E,wBAAQ9T,UAAU,iBAAiBrB,MAAO,CAAEkE,gBAAiB,UAAWI,MAAO,WAAaC,QAAS,SAAAvD,GACjG3B,QAAQC,IAAI,SAAU2F,EAAMmQ,MAAM,KADtC,wBCoODC,OAvOf,SAAkBpQ,GACd,IAAMzC,EAAK7F,EAAS8F,YACZ3E,EAAgBL,IAAhBK,YAFa,EAGkBD,mBAAS,IAH3B,mBAGd8Q,EAHc,KAGDC,EAHC,OAIgC/Q,mBAAS,IAJzC,mBAIdyX,EAJc,KAIMC,EAJN,OAKiB1X,oBAAS,GAL1B,mBAKdoM,EALc,KAKDC,EALC,OAMerM,oBAAS,GANxB,mBAMd2X,EANc,KAMFC,EANE,OAOe5X,mBAAS,IAPxB,mBAOdsM,EAPc,KAOFC,EAPE,OAQiBvM,oBAAS,GAR1B,mBAQd6X,EARc,KAQDC,EARC,OASuB9X,mBAAS,MAThC,mBASd+X,EATc,KASEC,EATF,OAUehY,mBAAS,IAVxB,mBAUdiY,EAVc,KAUFC,EAVE,OAW2BlY,mBAAS,IAXpC,mBAWdmY,EAXc,KAWIC,EAXJ,OAYSpY,mBAAS,IAZlB,mBAYd0O,EAZc,KAYL2J,EAZK,OAaerY,mBAAS,IAbxB,oBAadsY,GAbc,MAaFC,GAbE,SAc6CvY,oBAAS,GAdtD,qBAcdwY,GAdc,MAcaC,GAdb,SAeWzY,mBAAS,IAfpB,qBAed0Y,GAfc,MAeJC,GAfI,MA8EfrH,GAAS,uCAAG,8BAAAlO,EAAA,6DACVwV,EAAU,GADA,SAEKjU,EAAGK,WAAW,SAASG,MAF5B,OAERK,EAFQ,QAIVoT,EADkB,WAAlBxR,EAAMyR,QACIrT,EAAKH,KAAKC,KAAI,SAAAC,GAAG,kCAAUA,EAAIC,QAAd,IAAsBtD,GAAIqD,EAAIrD,QAAO4W,QAAO,SAAAvT,GAAG,OAAKA,EAAIoO,KAAK0D,SAAWjQ,EAAM7G,MAAmC,QAAzBgF,EAAIoO,KAAKoF,eAElHvT,EAAKH,KAAKC,KAAI,SAAAC,GAAG,kCAAUA,EAAIC,QAAd,IAAsBtD,GAAIqD,EAAIrD,QAAO4W,QAAO,SAAAvT,GAAG,OAAKA,EAAIoO,KAAK0D,SAAWjQ,EAAM7G,MAAkC,WAAxBgF,EAAIoO,KAAKqF,eACxH7H,MAAK,SAAU/N,EAAGgO,GACtB,IAAI6H,EAAQ7V,EAAEuQ,KAAKrS,KAAK4X,cACpBC,EAAQ/H,EAAEuC,KAAKrS,KAAK4X,cACxB,OAAID,EAAQE,GACA,EAERF,EAAQE,EACD,EAIJ,KAGX3X,QAAQC,IAAImX,GACZ7H,EAAgB6H,GAChBlB,EAAuBkB,GAvBT,2CAAH,qDAyBTQ,GAAe,uCAAG,8BAAAhW,EAAA,sEAEDuB,EAAGK,WAAW,cAAcG,MAF3B,OAEdK,EAFc,QAGhBoT,EAAUpT,EAAKH,KAAKC,KAAI,SAAAC,GAAG,sBAAUA,EAAIC,YACrC2L,MAAK,SAAU/N,EAAGgO,GACtB,IAAI6H,EAAQ7V,EAAEiW,MAAMH,cAChBC,EAAQ/H,EAAEiI,MAAMH,cACpB,OAAID,EAAQE,GACA,EAERF,EAAQE,EACD,EAIJ,KAGXjB,EAAcU,GACdA,EAAUA,EAAQtT,KAAI,SAAAgU,GAAY,MAAQ,CAAE,KAAQA,EAAO9Y,MAAOmP,IAAK1Q,sCACvEuC,QAAQC,IAAImX,GACZR,EAAoBQ,GArBA,2CAAH,qDA+ErB,OAvBAvY,qBAAU,WACN+Y,KACA9H,OACD,IACHjR,qBAAU,WACN,IAAIkZ,EAAYzI,EACZ0I,EAAY,GAEhB,GADAhY,QAAQC,IAAIsW,GACRA,EACA,IADiB,IAAD,WACPpS,GAEL,IADA,IAAI8T,EAAU,GACLjK,EAAI,EAAGA,EAAI+J,EAAUhW,OAAQiM,IAC9B+J,EAAU/J,GAAGmE,KAAKsE,WAAWyB,WAAU,SAAUrM,GAAK,OAAOA,EAAE7M,QAAUuX,EAAepS,GAAGnF,UAAa,GAAGiZ,EAAQzQ,KAAKuQ,EAAU/J,IAE1IgK,EAAYA,EAAUzD,OAAO0D,IALxB9T,EAAI,EAAGA,EAAIoS,EAAexU,OAAQoC,IAAM,EAAxCA,GASb6T,EAAYA,EAAUV,QAAO,SAACa,EAAGC,GAC7B,OAAOJ,EAAUlU,KAAI,SAAAmF,GAAC,OAAIA,EAAEvI,MAAImI,QAAQsP,EAAEzX,MAAQ0X,KAEtDlC,EAAuB8B,KACxB,CAACzB,IAEA,sBAAK5V,MAAO,CAAEI,MAAO,OAAQkB,SAAU,QAASsH,OAAQ,OAAQlH,OAAQ,eAAxE,UACK8T,GAAc,cAACP,GAAD,CAAe7F,KAAMmH,GAAUnB,MAAO,SAAApU,GACjDyU,GAAc,GAAQpW,QAAQC,IAAI,YAGlB,SAAlB2F,EAAMyR,SAAwB5Y,GAAgB,wBAAQuD,UAAU,UAAUrB,MAAO,CAAEI,MAAO,OAAQsB,OAAO,GAAI6C,QAAS,SAAAvD,GAAK0B,OAAOC,SAASC,OAAO9F,0BAApG,6BAGhD,oBAAGuE,UAAU,UAAUrB,MAAO,CAACkE,gBAAgB,cAAeH,UAAU,UAAxE,6BAAuH,SAAlBkB,EAAMyR,QAAqB,OAAO,YACtIV,GACG,cAAC,GAAD,CAAgBrU,KAAMqU,EAAiB5U,OAAQkL,QAAS0J,EAAkBxJ,aAAcD,EAAS5G,SAAU,SAAC8I,IAnExH,SAAyBA,GACrByH,EAAWzH,GACVA,EAAGrN,OAAS,EAAKyU,EAAkBC,EAAWa,QAAO,SAACzL,EAAGmC,GAAJ,OAAUoB,EAAGvG,QAAQmF,IAAM,MAAMwI,EAAkBC,GAiEoB4B,CAAgBjJ,MAEzI,mBAAGpN,UAAU,UAAUrB,MAAO,CAACkE,gBAAgB,cAAeH,UAAU,UAAxE,4BACCuR,GAAsB,qBAAKtV,MAAO,CAAE4I,OAAQ,MAAOuE,SAAU,OAAQzL,OAAQ,KAAvD,SAEnB,uBAAO1B,MAAO,CAAEI,MAAO,QAAvB,SAEI,gCACKkV,EAAmBnS,KAAI,SAACiM,EAAM/B,GAC3B,OACI,+BAE4B,WAAlBpI,EAAMyR,SACL,6BAAI,yBAAQrV,UAAU,UAAUrB,MAAO,CAAE8L,SAAU,kBAAmBhI,QAAS,KAAMI,gBAAiB,UAAWxC,OAAQ,KAAM8D,QAAS,OAAQmS,cAAe,SAAUlS,WAAY,UAAsCpH,MAAO+Q,EAAKrP,GAAIwE,QAAS,SAAAvD,GAAC,OA7K5R,SAAsBA,GAClB,IAAI4W,EAAQ5W,EAAE6E,OAAOgS,aAAa,SAClClC,EAAeiC,GACf,IAAIE,EAAanJ,EAAYxL,KAAI,SAAUmF,GAAK,OAAOA,EAAEvI,MAAOmI,QAAQ0P,GACpEG,EAAWpJ,EAAYmJ,GAC3B1N,EAAc,CACVpB,YAAa,SACbC,QAAS,UACTC,KAAK,mCAAD,OAAqC6O,EAASvG,KAAKrS,KAAnD,sBAAqE4Y,EAASvG,KAAKwG,YACvF5P,OAAQ,SACRmB,QAAS,SACTlB,OAAQ,YACRmB,QAAS,WAEbU,GAAe,GA+J6Q+N,CAAajX,IAAlQ,iBAA0Q,qBAAKO,IAAKzE,+BAA6C0E,IAAI,QAAQxB,MAAO,CAAEI,MAAO,iBAAkBwI,OAAQ,sBAArL,gBAAkByE,KAE/N,oBAAIrN,MAAO,CAAEkE,gBAAiB,QAASC,aAAc,OAArD,SAA8D,sBAA2B9C,UAAU,WAAWhD,MAAO+Q,EAAKrP,GAAIwE,QAAS,SAAAvD,GAAC,OA/JxK,SAAqBgQ,GACjB3R,QAAQC,IAAI0R,EAAEkH,SACd,IAAI9I,EAAOT,EAAYgI,QAAO,SAAAwB,GAAI,OAAIA,EAAKpY,KAAOiR,EAAEnL,OAAOgS,aAAa,YAAU,GAClFrB,GAAY,CACRtB,OAAQ9F,EAAKoC,KAAKwG,WAClB3G,YAAajC,EAAKoC,KAAKH,YACvBlS,KAAMiQ,EAAKoC,KAAKrS,KAChBgW,eAAgB/F,EAAKA,KAAKhO,OAC1BgX,UAAWpH,EAAEkH,QAAU,IAE3BzC,GAAc,GAqJ0J4C,CAAYrX,IAAIhB,MAAO,CAAEsY,OAAQ,UAAWlU,WAAY,OAAQL,UAAW,SAAUE,OAAQ,EAAG7D,MAAO,QAArL,UAAgMgP,EAAKoC,KAAKrS,KAA1M,IAAgN,uBAAMd,MAAO+Q,EAAKrP,GAAIC,MAAO,CAAEqE,UAAW,UAAWC,MAAO,WAA5D,cAA2E8K,EAAKoC,KAAKwG,gBAA3R,YAAc3K,KACtF,6BAAI,wBAAQhM,UAAU,UAAUrB,MAAO,CAAE8L,SAAU,kBAAmBhI,QAAS,KAAMI,gBAAiB,QAASI,MAAO,WAAqCjG,MAAO+Q,EAAKrP,GAAIwE,QAAS,SAAAvD,GAAC,OAnJrN,SAAqBoO,GACjB/P,QAAQC,IAAI8P,EAAKvJ,OAAOgS,aAAa,UACf,WAAlB5S,EAAMyR,SACNtM,EAAc,CACVpB,YAAa,SACbC,QAAS,UACTC,KAAK,yEACLd,OAAQ,SACRmB,QAAS,UACTlB,OAAQ,YACRmB,QAAS,WAEbU,GAAe,GACfkM,GAAczH,EAAYgI,QAAO,SAAAwB,GAAI,OAAIA,EAAKpY,KAAOqP,EAAKvJ,OAAOgS,aAAa,YAAU,KACnF5S,EAAMU,SAASgJ,EAAYgI,QAAO,SAAAwB,GAAI,OAAIA,EAAKpY,KAAOqP,EAAKvJ,OAAOgS,aAAa,YAAU,IAqImHU,CAAYvX,IAAjM,SAAqM,qBAAKO,IAAwB,WAAlB0D,EAAMyR,QAAwB5Z,kCAAiDA,8BAA4CuB,MAAO+Q,EAAKrP,GAAIyB,IAAwB,WAAlByD,EAAMyR,QAAwB,OAAS,OAAQ1W,MAAO,CAAEI,MAAO,kBAAmBwI,OAAQ,sBAAxT,eAAiByE,OANnJ,WAAaA,YAezCvP,GAAe,kCACZ,uBAAO6D,KAAK,WAAW5B,GAAG,qBAAqBC,MAAO,CAAE0B,OAAQ,cAAgBiE,SAAU,SAAA3E,GAAC,OAAIsV,GAA6BlP,SAASC,cAAc,uBAAuBkF,YAD9J,iCAId8J,IAA6B,uBAAO1U,KAAK,OAAO5B,GAAG,YAAY4F,SAAU,SAAA3E,GAAC,OA5FpF,SAAwBwX,GACpB,IAAIC,EAAID,EAAI3S,OAAOC,MAAM,GACzB,GAAI2S,EAAG,CACH,IAAIC,EAAI,IAAIC,WACZD,EAAEE,OAAS,SAAU5X,GACjBoV,GAAc5C,KAAKqF,MAAM7X,EAAE6E,OAAO5C,SACZ,WAAlBgC,EAAMyR,SACNtM,EAAc,CACVpB,YAAa,SACbC,QAAS,UACTC,KAAK,yEACLd,OAAQ,SACRmB,QAAS,UACTlB,OAAQ,YACRmB,QAAS,WAEbU,GAAe,KAEfjF,EAAMU,SAAS6N,KAAKqF,MAAM7X,EAAE6E,OAAO5C,SACnCgC,EAAM6T,SAAQ,KAItBJ,EAAEK,WAAWN,QAGbO,MAAM,uBAkE0EC,CAAejY,SAE9FiJ,GAAe,cAACzC,EAAD,CAAW8B,SAhNlB,SAACoC,GACdxB,GAAe,GACG,WAAdwB,GACAlJ,EAAGK,WAAW,SAASO,IAAIsS,GAAawD,SACnCxZ,MAAK,SAAAwR,GACF7R,QAAQC,IAAI,WACZ2F,EAAMkU,cAAa,MAEtBxZ,OAAM,SAAAC,GACHP,QAAQC,IAAI,8BAGN,YAAdoM,IACAzG,EAAMU,SAASwQ,IACflR,EAAM6T,SAAQ,KAkMiC3Q,QAASgC,IACpC,SAAlBlF,EAAMyR,SAAuB,sBAAKrV,UAAU,WAAf,0BAClB,cAAC,IAAD,CAAMA,UAAU,QAAQd,GAAG,iCAA3B,mC,OC5MV6Y,OArBf,WAA+B,IAAD,EAEIvb,oBAAS,GAFb,mBAErBwb,EAFqB,KAEXC,EAFW,OAGMzb,oBAAS,GAHf,mBAGrB0b,EAHqB,KAGVC,EAHU,KAIpB1b,EAAgBL,IAAhBK,YAMR,OACE,mCACA,sBAAKuD,UAAU,gBAAf,WACIgY,GAAY,cAAC,GAAD,CAAUjb,KAAMN,EAAcA,EAAYiF,IAAM,GAAI2T,QAAS,OAAQoC,QAAS,SAAAW,GAAC,OAAID,EAAaC,IAAI9T,SAAU,SAAAuF,GAAC,OAPjI,SAAuBA,GACrB7L,QAAQC,IAAI4L,GACZoO,EAAYpO,GAKuHwO,CAAcxO,MAC9ImO,GAAY,cAAC,GAAD,CAASjK,KAAMiK,EAAUtF,MAAOwF,KAC3CF,GAAY,cAAC,EAAD,U,SC6BLM,OAlDf,SAAiB1U,GAAQ,IAAD,EACgBpH,mBAASoH,EAAM2U,OAAO1Q,MADtC,mBACb2Q,EADa,KACDC,EADC,OAEUjc,mBAASoH,EAAM2U,OAAOpM,KAFhC,mBAEbqH,EAFa,KAEJkF,EAFI,OAGYlc,qBAHZ,mBAGbmc,EAHa,KAGHC,EAHG,KAkBpB,SAASC,EAASjZ,EAAGgO,GACjB,IAAI3B,EAAS,CACTpE,KAAMjI,EACNuM,IAAKyB,EACLkL,IAAKlV,EAAMkV,KAEflV,EAAMU,SAAS2H,GAanB,OAXApP,qBAAU,WACN4b,EAAc7U,EAAM2U,OAAO1Q,MACvBjE,EAAM2U,OAAOpM,IAAIpM,OAAS,GAC1B6Y,GAAY,GACZ7S,SAASC,cAAc,UAAUpC,EAAMkV,IAAIlV,EAAMmV,KAAK7N,SAAQ,EAC9DwN,EAAW9U,EAAM2U,OAAOpM,OAExBpG,SAASC,cAAc,UAAUpC,EAAMkV,IAAIlV,EAAMmV,KAAK7N,SAAQ,EAC9D0N,GAAY,MAEjB,CAAChV,EAAM2U,SAEF,gCACI,0BAAU5Z,MAAO,CAAEI,MAAO,QAAU/B,MAAOwb,EAAYlU,SAAU,SAAA3E,GAAC,OA9B9E,SAAqBA,GACjB8Y,EAAc9Y,EAAE6E,OAAOxH,OACvB6b,EAASlZ,EAAE6E,OAAOxH,MAAOwW,GA4BqDwF,CAAYrZ,MAClF,wBAAOhB,MAAO,CAAEsE,MAAO,QAASlE,MAAO,QAAvC,UACI,uBAAOuB,KAAK,WAAW5B,GAAI,SAAWkF,EAAMkV,IAAIlV,EAAMmV,IAAKzU,SAAU,SAAA3E,GAAC,OAAIiZ,EAAY7S,SAASC,cAAc,UAAUpC,EAAMkV,IAAIlV,EAAMmV,KAAK7N,YADhJ,6BAGCyN,GAAY,gCACT,uBAAOrY,KAAK,OAAO3B,MAAO,CAAEI,MAAO,MAAOqM,QAASuN,GAAY3b,MAAOwW,EAASlP,SAAU,SAAA3E,GAAC,OA/B1G,SAAqBA,GACjB+Y,EAAW/Y,EAAE6E,OAAOxH,OACpBgB,QAAQC,IAAIuV,GACZqF,EAASL,EAAY7Y,EAAE6E,OAAOxH,OA4B4Eic,CAAYtZ,MAC1G,cAAC,EAAD,CAAYhB,MAAO,CAAEI,MAAO,QAAS+G,UAAW,QAASzF,OAAQ,QAAU6E,UAzCzE,SAACnH,GACfgI,SAASC,cAAc,YAAYhJ,MAAQe,EAC3C2a,EAAW3a,GACX8a,EAASL,EAAYza,aC8Cdmb,OApDf,SAAoBtV,GAAO,MA2BOpH,mBAAS,IA3BhB,mBA2BhByO,EA3BgB,KA2BPkO,EA3BO,KA+BvB,OAHAtc,qBAAU,WACNsc,EAAWvV,EAAMqH,WAClB,CAACrH,EAAMqH,UAEN,qBAAKtM,MAAO,CAACwF,QAAQ,OAAQC,WAAW,QAASC,eAAe,QAAS0D,aAAa,OAAtF,SACI,qBAAKpJ,MAAO,CAACI,MAAM,OAAnB,SACI,gCACKkM,GAAWA,EAAQnJ,KAAI,SAACiK,EAAcC,GACnC,OACI,sBAA6CrN,MAAO,CAAEC,SAAU,WAAYyB,OAAQ,OAApF,UACI,wBAAQL,UAAU,UAAUrB,MAAO,CAAC8L,SAAS,kBAAmBgJ,MAAM,QAAQpT,OAAO,GAAiErD,MAAOgP,EAAG9I,QAAS,SAAAvD,GAAC,OAjBtM,SAAsBA,GAClBiE,EAAMwV,SAASzZ,EAAE6E,OAAOxH,OAgB8K4Z,CAAajX,IAA3L,SAA+L,qBAAKO,IAAMzE,+BAA2C0E,IAAI,QAAQxB,MAAO,CAACI,MAAM,kBAAkBwI,OAAO,sBAAzM3D,EAAM8I,QAAQ,kBAAkB,kBAAoBV,GACnJ,wBAAQhM,UAAU,UAAUrB,MAAO,CAAC8L,SAAS,kBAAmBgJ,MAAM,QAASpT,OAAO,GAAgErD,MAAOgP,EAAG9I,QAAS,SAAAvD,GAAC,OAftM,SAAoBA,GAChBiE,EAAMyV,OAAO1Z,EAAE6E,OAAOxH,OAcgLsc,CAAW3Z,IAAzL,6BAAiGiE,EAAM8I,QAAQ,iBAAiB,iBAAmBV,GACnJ,cAAC,GAAD,CAA2D+M,IAAKnV,EAAM8I,QAAQ,QAAQ,QAASoM,IAAK9M,EAAGuM,OAAQxM,EAAcqN,SAAU,SAAAzZ,GAAC,OAAIA,EAAE6E,OAAOxH,OAAOuc,MAAO,SAAA5Z,GAAC,OAAIA,EAAE6E,OAAOxH,OAAOsH,SAAU,SAACqL,GAAD,OA7B9N,SAA0BA,GACtB,IAAI6J,EAAW5V,EAAMqH,QACrB,GAAgB,KAAX0E,EAAE9H,MAA2B,KAAV8H,EAAExD,IACtBqN,EAAS3H,OAAOlC,EAAEmJ,IAAK,OACpB,CACH,IAAIW,EAAc,CAAE5R,KAAM8H,EAAE9H,KAAMsE,IAAKwD,EAAExD,IAAKF,OAAQrI,EAAM8I,SAC5D8M,EAAS3H,OAAOlC,EAAEmJ,IAAK,EAAGW,GAE9B7V,EAAMU,SAASkV,GAqBkNE,CAAiB/J,KAA5M/L,EAAM8I,QAAQ,aAAaV,EAAE,aAAaA,KAHlDpI,EAAM8I,QAAQ,QAAQV,EAAE,QAAQA,MAQlD,wBAAQhM,UAAU,UAAUrB,MAAO,CAAC8L,SAAS,kBAAmBpK,OAAO,GAAK6C,QAAS,SAAAvD,IAxCrG,WACI,IAAIga,EAAUxH,KAAKqF,MAAMoC,aAAaC,QAAQ,eAC9B,OAAZF,IACJA,EAAU1N,OAAOrI,EAAM8I,QACvB9I,EAAM2V,MAAMI,IAoC4FG,IAA5F,+BACA,wBAAQ9Z,UAAU,UAAUrB,MAAO,CAAC8L,SAAS,kBAAmBpK,OAAO,GAAK6C,QAAS,SAAAvD,IA7CrG,WACI,IAAIoa,EAAW,CAAElS,KAAM,GAAIsE,IAAK,GAAIF,OAAQrI,EAAM8I,SAClD9I,EAAM2V,MAAMQ,GA2C4FC,IAA5F,gCC2DLC,OAzGf,SAAqBrW,GACjB,IAAIsW,EAAc,GADM,EAGI1d,mBAAS,IAHb,mBAGjB8V,EAHiB,KAGT6H,EAHS,OAII3d,mBAAS,IAJb,mBAIjBgW,EAJiB,KAIT4H,EAJS,KAqBxB,SAASC,EAAiB1K,EAAG2K,GACrBA,EACAJ,EAAY5H,OAAS3C,EAGrBuK,EAAY1H,OAAS7C,EAGzB/L,EAAMU,SAAS4V,GAEnB,SAASK,EAAe1Q,EAAGyQ,GACdJ,EAARI,EAAsB1W,EAAM+O,EAAEL,OAAOzI,GAAmBjG,EAAM+O,EAAEH,OAAO3I,GACxE+P,aAAaY,QAAQ,aAAcrI,KAAKC,UAAU8H,IAEtD,SAASO,EAAU9a,EAAG2a,GACdA,GACAJ,EAActW,EAAM+O,EAAEL,QACV9M,KAAK,CAAEqC,KAAMlI,EAAEkI,KAAMsE,IAAKxM,EAAEwM,IAAKF,QAAQ,KAErDiO,EAActW,EAAM+O,EAAEH,QACVhN,KAAK,CAAEqC,KAAMlI,EAAEkI,KAAMsE,IAAKxM,EAAEwM,IAAKF,QAAQ,IAEzDrI,EAAMU,SAAS4V,GAInB,SAASQ,EAAU7Q,EAAGyQ,GACdA,GACAJ,EAActW,EAAM+O,EAAEL,QACVT,OAAOhI,EAAG,IAEtBqQ,EAActW,EAAM+O,EAAEH,QACVX,OAAOhI,EAAG,GAE1BjG,EAAMU,SAAS4V,GAGnB,OA/CArd,qBAAU,WACNkJ,SAASC,cAAc,aAAahJ,MAAQ4G,EAAM+O,EAAEhH,SACpD5F,SAASC,cAAc,YAAYhJ,MAAQ4G,EAAM+O,EAAEnG,KAAKL,IACxDpG,SAASC,cAAc,mBAAmBhJ,MAAQ4G,EAAM+O,EAAEnG,KAAKiG,UAC/D1M,SAASC,cAAc,iBAAiBhJ,MAAQ4G,EAAM+O,EAAEnG,KAAKE,QAC7D3G,SAASC,cAAc,YAAYhJ,MAAQ4G,EAAM+O,EAAEnG,KAAKW,OACxDgN,EAAUvW,EAAM+O,EAAEL,QAClB8H,EAAUxW,EAAM+O,EAAEH,UAEnB,CAAC5O,EAAM+O,IAuCN,eAAC,WAAD,WACI,wBAAO3S,UAAU,cAAjB,gCACA,0BAAUtB,GAAG,WAAW4F,SAAU,SAAA3E,GAAOiE,EAAMU,SAAS,CAAE,SAAY3E,EAAE6E,OAAOxH,cAE/E,uBACA,wBAAOgD,UAAU,cAAjB,kEACA,uBAAOtB,GAAG,UAAU4F,SAAU,SAAA3E,GAAOiE,EAAMU,SAAS,CAAE,QAAW3E,EAAE6E,OAAOxH,cAE1E,cAAC,EAAD,CAAYkI,UA9DF,SAACnH,GACfgI,SAASC,cAAc,YAAYhJ,MAAQe,EAC3C6F,EAAMU,SAAS,CAAE,QAAWvG,OA6DxB,wBAAOiC,UAAU,cAAjB,mCACI,wBAAQtB,GAAG,UAAU4F,SAAU,SAAA3E,GAAOiE,EAAMU,SAAS,CAAE,QAAW3E,EAAE6E,OAAOxH,SAA3E,SA3DE,CAAC,SAAU,OA4DA8E,KAAI,SAACgU,EAAQ3T,GAClB,OACI,wBAAQnF,MAAO8Y,EAAf,SAAkDA,GAAtB,gBAAkB3T,WAM9D,sBAAKnC,UAAU,gBAAf,UACI,yBAASA,UAAU,SAAnB,SACI,kCACI,uBAAOtB,GAAG,iBAAiB4B,KAAK,SAASoK,IAAK,EAAGC,IAAK2H,EAAOvS,OAASyS,EAAOzS,OAASuE,SAAU,SAAA3E,GAAOiE,EAAMU,SAAS,CAAE,eAAkB3E,EAAE6E,OAAOxH,WADvJ,2FAKJ,yBAASgD,UAAU,SAAnB,SACI,kCACI,uBAAOtB,GAAG,eAAe4B,KAAK,SAASoK,IAAK,EAAGC,IAAK2H,EAAOvS,OAASuE,SAAU,SAAA3E,GAAOiE,EAAMU,SAAS,CAAE,aAAgB3E,EAAE6E,OAAOxH,WADnI,4GAMR,sBAAKgD,UAAU,gBAAf,UACI,0BAASA,UAAU,SAAnB,UACI,uBAAOA,UAAU,cAAcrB,MAAO,CAACsE,MAAM,SAA7C,SAAwD,0EACvDqP,GAAU,cAAC,GAAD,CAAYrH,QAASqH,EAAQ5F,SAAS,EAAM0M,SAAU,SAACvP,GAAD,OAAO6Q,EAAU7Q,EAAG,IAAI0P,MAAO,SAAC5Z,GAAD,OAAO8a,EAAU9a,EAAG,IAAI2E,SAAU,SAACqL,GAAD,OAAO0K,EAAiB1K,EAAG,IAAI0J,OAAQ,SAAC1J,GAAD,OAAO4K,EAAe5K,EAAG,SAEtM,0BAAS3P,UAAU,SAAnB,UACI,uBAAOA,UAAU,cAAcrB,MAAO,CAAEsE,MAAM,OAA9C,SAAuD,wEACtDuP,GAAU,cAAC,GAAD,CAAYvH,QAASuH,EAAQ9F,SAAS,EAAO0M,SAAU,SAACvP,GAAD,OAAO6Q,EAAU7Q,EAAG,IAAI0P,MAAO,SAAC5Z,GAAD,OAAO8a,EAAU9a,EAAG,IAAI2E,SAAU,SAACqL,GAAD,OAAO0K,EAAiB1K,EAAG,IAAI0J,OAAQ,SAAC1J,GAAD,OAAO4K,EAAe5K,EAAG,gB,OCRxMgL,OA5Ff,SAAuB/W,GAAQ,IAAD,EAEFpH,mBAAS,IAFP,mBAEnBoe,EAFmB,KAEbC,EAFa,OAGIre,oBAAS,GAHb,mBAGnBse,EAHmB,KAGVC,EAHU,KAY1B,SAASnR,EAAkBC,GACvB,IAAIC,EAAc/D,SAASC,cAAc,iBACrC+D,OAAOC,UAAUH,IAEP,IAANA,IAC0B,KAAtBC,EAAY9M,MAAgB8M,EAAY9M,MAAQ,EAC3CiN,SAASH,EAAY9M,OAAS4G,EAAMsG,QAAWJ,EAAY9M,MAAQiN,SAASH,EAAY9M,OAAS,EACrG8M,EAAY9M,MAAQ,IAElB,IAAP6M,IAC0B,KAAtBC,EAAY9M,MAAgB8M,EAAY9M,MAAQ4G,EAAMsG,QACjDD,SAASH,EAAY9M,OAAS,EAAK8M,EAAY9M,OAAS,EAC5D8M,EAAY9M,MAAQ4G,EAAMsG,UAGzB,MAANL,GACgB9D,SAASyD,iBAAiB,YAChCC,SAAQ,SAAUC,GACxBA,EAASJ,UAAUc,OAAO,gBAE9BrE,SAASC,cAAc,aAAasD,UAAUC,IAAI,aAClDO,EAAY9M,MAAQ,GACjB8M,EAAY9M,MAAQ6M,EAExB,MAANA,EAAajG,EAAMU,SAAS,GAAKV,EAAMU,SAAS2F,SAASH,EAAY9M,QAkB1E,OAlDAH,qBAAU,WACNkJ,SAASiV,eAAe,gBAAgBhe,MAAQ,IACjD,IACHH,qBAAU,WAEN,IADA,IAAIyU,EAAM,GACDnP,EAAI,EAAGA,EAAIyB,EAAMsG,QAAS/H,IAAOmP,EAAI9L,KAAKrD,EAAI,GACvD0Y,EAAQvJ,KACT,CAAC1N,EAAMsG,UA6CN,sBAAKlK,UAAU,eAAerB,MAAO,CAAE6D,UAAW,MAAlD,UACI,oBAAI7D,MAAO,CAAEI,MAAO,OAAQ2D,UAAW,SAAU+H,SAAU,MAAOxH,MAAO,WAAzE,SAAsF,8DACtF,wBAAQjD,UAAU,UACdkD,QAAS,SAAAvD,GAAOiK,EAAkB,MADtC,oBAEA,wBAAQ5J,UAAU,UACdkD,QAAS,SAAAvD,GAAOiK,GAAmB,IADvC,wBAEA,uBAAO5J,UAAU,2BAA2BrB,MAAO,CAACI,MAAM,OAAQuB,KAAK,SAAS5B,GAAG,eAAgBgM,IAAI,IAAIC,IAAK/G,EAAMsG,QAAQU,WAAY1H,QAAS,SAAAvD,GAAC,OAAIiK,EAAkBjK,EAAE6E,OAAOxH,UACnL,wBAAQgD,UAAU,UACdkD,QAAS,SAAAvD,GAAOiK,EAAkB,IADtC,wBAEA,wBAAQ5J,UAAU,UACdkD,QAAS,SAAAvD,GAAOiK,EAAkBhG,EAAMsG,QAAQU,aADpD,oBAEA,wBAAQ5K,UAAU,UACdkD,QAAS,SAAAvD,GAAOiE,EAAM2V,MAAM,IAAKxT,SAASC,cAAc,iBAAiBhJ,OAAS4G,EAAMsG,QAAU,GAAGU,YADzG,uBAEA,yBAAQ5K,UAAU,UACdkD,QAAS,SAAAvD,IAhCrB,WACIiE,EAAMqX,MAAM,IACZ,IAAIpR,EAAI9D,SAASC,cAAc,iBAC3BkV,EAAI,GACJjR,SAASJ,EAAE7M,SAAW4G,EAAMsG,SAC5BgR,EAAIrR,EAAE7M,MACN6M,EAAE7M,MAAQke,IAEVA,EAAIrR,EAAE7M,MACN6M,EAAE7M,OAASiN,SAASiR,GAAK,GAAGtQ,YAuBRuQ,IADpB,UACmC,qBAAKjb,IAAMzE,+BAA2C0E,IAAI,QAAQxB,MAAO,CAACI,MAAM,kBAAkBwI,OAAO,qBAD5I,YAEA,wBAAQvH,UAAU,UACdkD,QAAS,SAAAvD,GAAOA,EAAEE,iBAAkB+D,EAAMyV,OAAO,KADrD,8BAEA,wBAAQrZ,UAAU,UACdkD,QAAS,SAAAvD,GAAOA,EAAEE,iBAAkB+D,EAAMwX,QAAQ,IAAKrV,SAASC,cAAc,iBAAiBhJ,OAASiN,SAASlE,SAASC,cAAc,iBAAiBhJ,OAAS,GAAG4N,YADzK,+BAEA,wBAAQ5K,UAAU,UACdkD,QAAS,SAAAvD,GAAOiE,EAAMyX,OAAO,KADjC,iCAEEzX,EAAMsG,QAAU,GAAM,wBAAQlK,UAAU,UACtCkD,QAAS,SAAAvD,GA3BjBmb,EAAU/U,SAASC,cAAc,eAAesD,UAAUc,OAAO,aAAerE,SAASC,cAAc,eAAesD,UAAUC,IAAI,aACpIwR,GAAYD,IAyBgB,iCAEtBlX,EAAMsG,QAAU,GAAM0Q,GAAQ,wBAAQlc,GAAG,aAAasB,UAAU,qCAAqCsE,SAAU,SAAA3E,GAC7GiE,EAAM0X,OAAO,CAACrR,SAASlE,SAASC,cAAc,iBAAiBhJ,OAAS,EAAGiN,SAAStK,EAAE6E,OAAOxH,SAC7F+I,SAASC,cAAc,iBAAiBhJ,OAASiN,SAAStK,EAAE6E,OAAOxH,OAAS,GAAG4N,YAFnD,SAI3BgQ,EAAK9Y,KAAI,SAACgU,EAAQ3T,GACf,OAAQ,wBAAgBnF,MAAOmF,EAAvB,SAA2ByY,EAAKzY,IAAnBA,Y,OCU1BoZ,OA7Ff,SAAqB3X,GACjB,IAAMzC,EAAK7F,EAAS8F,YADI,EAEc5E,oBAAS,GAFvB,mBAEjBoM,EAFiB,KAEJC,EAFI,OAGYrM,mBAAS,IAHrB,mBAGjBsM,EAHiB,KAGLC,EAHK,OAIcvM,oBAAS,GAJvB,mBAIjB6X,EAJiB,KAIJC,EAJI,OAKU9X,mBAAS,IALnB,mBAKjBgf,EALiB,KAKNC,EALM,OAMcjf,mBAAS,IANvB,mBAMjBkf,EANiB,KAMJC,EANI,OAOsBnf,mBAAS,IAP/B,mBAOjBof,EAPiB,KAOAC,EAPA,OAQkCrf,oBAAS,GAR3C,mBAQjBsf,EARiB,KAQMC,EARN,KAwDlBC,EAAc,uCAAG,8BAAApc,EAAA,sEAEAuB,EAAGK,WAAW,aAAaG,MAF3B,OAEbK,EAFa,OAGfoT,EAAUpT,EAAKH,KAAKC,KAAI,SAAAC,GAAG,kCAAUA,EAAIC,QAAd,IAAsBtD,GAAIqD,EAAIrD,QAC7D+c,EAAarG,GAJM,2CAAH,qDAUpB,OAJAvY,qBAAU,WACNmf,MACD,IAGC,sBAAKrd,MAAO,CAAEI,MAAO,OAAQkd,YAAY,QAAzC,gDAAsF,mBAAGjc,UAAU,MAAMkc,KAAK,iCAAiC1X,OAAO,SAAS2X,IAAI,sBAA7E,4BACjFvT,GAAe,cAACzC,EAAD,CAAW8B,SA1DlB,SAACoC,GACdxB,GAAe,GACG,WAAdwB,GACAlJ,EAAGK,WAAW,aAAaO,IAAIsS,GAAawD,SACvCxZ,MAAK,SAAAwR,GACF7R,QAAQC,IAAI,WACZwd,EAAaD,EAAUlG,QAAO,SAAAwB,GAAI,OAAIA,EAAKpY,KAAO2V,SAErD/V,OAAM,SAAAC,GACHP,QAAQC,IAAI,+BAiD2B6I,QAASgC,IACvD0S,GAAaA,EAAU1Z,KAAI,SAACgV,EAAM9K,GAC/B,OACI,sBAAKrN,MAAO,CAAEwF,QAAS,OAAQ9D,OAAQ,OAAvC,UACI,sBAA8B1B,MAAO,CAAEsY,OAAQ,UAAWlY,MAAO,MAAOwI,OAAQ,OAAQzE,aAAa,OAAQyH,WAAY,qBAAsBO,gBAAiBgM,EAAK9Z,MAAOqP,eAAgB,SAC3LrP,MAAO8Z,EAAKpY,GAAIwE,QAAS,SAAAvD,GAAC,OArB/C,SAAqByc,GACjB,IAAIC,EAAKb,EAAUlG,QAAO,SAAAwB,GAAI,OAAIA,EAAKpY,KAAO0d,EAAK5X,OAAOgS,aAAa,YACvE5S,EAAMU,SAAS+X,EAAG,GAAGrf,OAmB0Bka,CAAYvX,IAD3C,UACiDmX,EAAKhZ,KADtD,MAAU,gBAAgBkO,GAE1B,yBAAQhM,UAAU,UAAUrB,MAAO,CAAC8L,SAAS,kBAAmBpK,OAAO,EAAG0C,WAAY,UAA2C/F,MAAO8Z,EAAKpY,GAAIwE,QAAS,SAAAvD,GAAC,OAxC/K,SAAsBA,GAClB,IAAI4W,EAAQ5W,EAAE6E,OAAOgS,aAAa,SAClClC,EAAeiC,GACf,IAAIE,EAAa+E,EAAU1Z,KAAI,SAAUmF,GAAK,OAAOA,EAAEvI,MAAOmI,QAAQ0P,GACtExN,EAAc,CACVlK,KAAM,IACN2I,IAAK,IACLG,YAAa,SACbC,QAAS,UACTC,KAAK,gCAAD,OAAkC2T,EAAU/E,GAAY3Y,KAAxD,KACJiJ,OAAQ,SACRmB,QAAS,SACTlB,OAAQ,YACRmB,QAAS,WAGbU,GAAe,GAwBgK+N,CAAajX,IAA5K,gBAAmL,qBAAKO,IAAMzE,+BAA2C0E,IAAI,QAAQxB,MAAO,CAACI,MAAM,iBAAiBwI,OAAO,sBAAnL,sBAAsByE,KAH7E,YAAYA,MAQzE,kCACI,uBAAO1L,KAAK,WAAW5B,GAAG,sBAAsB4F,SAAU,SAAA3E,GAAC,OAAIoc,EAAyBhW,SAASC,cAAc,wBAAwBkF,YAD3I,uEAIA,sBAAKvM,MAAO,CAAEwF,QAAS2X,EAAwB,QAAU,OAAQ/c,MAAO,QAAxE,UACI,uBAAOiB,UAAU,cAAjB,gCACA,0BAAUtB,GAAG,wBAAwBC,MAAO,CAAEI,MAAO,QAAUuF,SAAU,SAAA3E,GAAC,OAAIgc,EAAehc,EAAE6E,OAAOxH,UACtG,uBAAOgD,UAAU,cAAjB,iCACA,uBAAOtB,GAAG,wBAAwBC,MAAO,CAAEI,MAAO,QAAUuF,SAAU,SAAA3E,GAAC,OAAIkc,EAAmBlc,EAAE6E,OAAOxH,UACvG,wBAAQgD,UAAU,UAAUrB,MAAO,CAAC8L,SAAS,kBAAmBpK,OAAO,EAAG0C,WAAY,UAAaG,QAAS,SAAAvD,GAhEpHwB,EAAGK,WAAW,aAAa+H,IAAI,CAAEzL,KAAM8d,EAAiB5e,MAAO0e,IAC1Drd,MAAK,SAAAwR,GACF7R,QAAQC,IAAI,SACZ2F,EAAMkU,cAAa,MAGtBxZ,OAAM,SAAAC,GACHP,QAAQC,IAAI,+BAyDZ,qC,SCvFVqe,GAAe,CACjBC,KAAM,SAACC,EAAUC,GAAX,mBAAC,eACAD,GADD,IAEFzd,MAAO0d,EAAMC,YAAY3d,MACzB4d,aAAc,kBACd1Z,MAAOwZ,EAAMC,YAAYE,UACzBna,QAAS,MAEbqT,OAAQ,SAAC0G,EAAUC,GAAX,mBAAC,eACFD,GADC,IAEJG,aAAc,kBACd1Z,MAAOwZ,EAAMI,WAAa,MAAQ,OAClCpa,QAAS,MAEbqa,QAAQ,SAAAC,GAAM,kCAAUA,GAAV,IAAkBla,gBAAiB,WAEjDma,YAAa,SAACR,EAAUC,GACpB,IAAMrR,EAAUqR,EAAMQ,WAAa,GAAM,EAGzC,OAAO,2BAAKT,GAAZ,IAAsBpR,UAAS8R,WAFZ,oBAcZC,OAPf,YAAoE,IAA7Cxe,EAA4C,EAA5CA,MAAMkX,EAAsC,EAAtCA,MAAMuH,EAAgC,EAAhCA,QAAQ9Y,EAAwB,EAAxBA,SAAStH,EAAe,EAAfA,MAAMqgB,EAAS,EAATA,QACtD,OAAO,sBAAK1e,MAAOA,EAAZ,UACFkX,EACD,cAAC,KAAD,CAAQkH,OAAQT,GAAce,QAASA,EAASC,mBAAmB,EAAMC,cAAY,EAAEH,QAASA,EAAS9Y,SAAUA,EAAUtH,MAAOA,QClBxIwgB,GAAU,GACVC,GAAS,CACT9R,SAAU,GACV2G,OAAQ,CAAC,CAAEzK,KAAM,GAAIsE,IAAK,GAAIF,QAAQ,IACtCuG,OAAQ,CAAC,CAAE3K,KAAM,GAAIsE,IAAK,GAAIF,QAAQ,IACtCO,KAAM,CACFiG,UAAW,EACX/F,QAAS,EACTS,OAAQ,GACRhB,IAAK,KA+bE4L,OA5bf,WACI,IAAI2F,EAAiB,GACbjhB,EAAgBL,IAAhBK,YAFkB,EAGMD,mBAAS,IAHf,mBAGnBuT,EAHmB,KAGT4N,EAHS,OAIoBnhB,mBAAS,IAJ7B,mBAInBohB,EAJmB,KAIFC,EAJE,OAKUrhB,mBAAS,CAAEshB,SAAU,GAAIhgB,KAAM,GAAI2P,OAAQ,KALrD,mBAKnBsQ,EALmB,KAKPC,EALO,OAMUxhB,mBAAS,IANnB,mBAMnBgZ,EANmB,KAMPyI,EANO,OAOYzhB,mBAAS,IAPrB,mBAOnB+Y,EAPmB,KAON2I,EAPM,OAQM1hB,mBAAS,GARf,mBAQnB+T,EARmB,KAQTC,EARS,OASkBhU,mBAAS,IAT3B,mBASnB4T,EATmB,KASH+N,EATG,OAUc3hB,mBAAS,IAVvB,mBAUnB4hB,EAVmB,KAULC,EAVK,OAWE7hB,mBAAS,GAXX,mBAWnB8hB,EAXmB,KAWXC,EAXW,OAYE/hB,mBAAS,GAZX,mBAYnBgiB,EAZmB,KAYXC,EAZW,QAaEjiB,mBAAS,GAbX,qBAanBkiB,GAbmB,MAaXC,GAbW,SAcFniB,oBAAS,GAdP,qBAcnBoiB,GAdmB,MAcbC,GAda,SAeYriB,oBAAS,GAfrB,qBAenBoM,GAfmB,MAeNC,GAfM,SAgBUrM,mBAAS,IAhBnB,qBAgBnBsM,GAhBmB,MAgBPC,GAhBO,SAiBQvM,mBAAS,CAACihB,KAjBlB,qBAiBnBlM,GAjBmB,MAiBRuN,GAjBQ,SAkBkBtiB,mBAAS,IAlB3B,qBAkBnB+X,GAlBmB,MAkBHC,GAlBG,SAmBUhY,mBAAS,IAnBnB,qBAmBnBiY,GAnBmB,MAmBPC,GAnBO,SAoBkClY,oBAAS,GApB3C,qBAoBnBuiB,GApBmB,MAoBKC,GApBL,SAqB8BxiB,oBAAS,GArBvC,qBAqBnByiB,GArBmB,MAqBGC,GArBH,MAsBpB/d,GAAK7F,EAAS8F,YACdwU,GAAe,uCAAG,8BAAAhW,EAAA,sEAEDuB,GAAGK,WAAW,cAAcG,MAF3B,OAEdK,EAFc,QAGhBoT,EAAUpT,EAAKH,KAAKC,KAAI,SAAAC,GAAG,sBAAUA,EAAIC,YACrC2L,MAAK,SAAU/N,EAAGgO,GACtB,IAAI6H,EAAQ7V,EAAEiW,MAAMH,cAChBC,EAAQ/H,EAAEiI,MAAMH,cACpB,OAAID,EAAQE,GACA,EAERF,EAAQE,EACD,EAIJ,KAEXjB,GAAcU,GAjBM,2CAAH,qDAkFf0C,GAAe,SAAClY,GAClByB,OAAOC,SAASmO,UA6FpB,SAAS4I,GAAcxO,GACnB7L,QAAQC,IAAI4L,GACZ,IAAIsV,EAAUtV,EACdiV,GAAaK,EAAQpR,MACrByC,EAAY,GACZzK,SAASC,cAAc,iBAAiBhJ,MAAQ,EAChDghB,EAAc,CAAEF,SAAUqB,EAAQhP,KAAK0D,OAAQ/V,KAAMqhB,EAAQhP,KAAKwG,WAAYlJ,OAAQ0R,EAAQzgB,KAC9Fgf,EAAiByB,EAAQhP,KAAKsE,WAC9BD,GAAkBkJ,GAClB3X,SAASC,cAAc,aAAahJ,MAAQmiB,EAAQhP,KAAKrS,KACzD6f,EAAYwB,EAAQhP,KAAKrS,MACzBiI,SAASC,cAAc,oBAAoBhJ,MAAQmiB,EAAQhP,KAAKH,YAChE6N,EAAmBsB,EAAQhP,KAAKH,aAChCjK,SAASC,cAAc,eAAehJ,MAAQmiB,EAAQhP,KAAKqF,WAC3DyI,EAAckB,EAAQhP,KAAKqF,YAC3BzP,SAASC,cAAc,gBAAgBhJ,MAAQmiB,EAAQhP,KAAKoF,YAC5D2I,EAAeiB,EAAQhP,KAAKoF,aAC5BxP,SAASC,cAAc,eAAehJ,MAAQmiB,EAAQhP,KAAK3F,WAC3D2T,EAAkBgB,EAAQhP,KAAK3F,YAC/BzE,SAASC,cAAc,uBAAuBhJ,MAAQmiB,EAAQhP,KAAKnD,SACnEqR,EAAgBc,EAAQhP,KAAKnD,UAC7BjH,SAASC,cAAc,OAAOhJ,MAAQmiB,EAAQhP,KAAK5H,MACnDgW,EAAUY,EAAQhP,KAAK5H,OACvBxC,SAASC,cAAc,OAAOhJ,MAAQmiB,EAAQhP,KAAK3H,QACnDiW,EAAUU,EAAQhP,KAAK3H,SACvBzC,SAASC,cAAc,OAAOhJ,MAAQmiB,EAAQhP,KAAK1H,QACnDkW,GAAUQ,EAAQhP,KAAK1H,SA4H3B,OANA5L,qBAAU,WACN+Y,KACA,IAAI+D,EAAYxH,KAAKqF,MAAMoC,aAAaC,QAAQ,aAC7B,OAAdF,GAAqBtB,GAAcsB,GACxCC,aAAawF,WAAW,cACzB,IAEC,sBAAKpf,UAAU,iBAAf,UAEI,cAAC,GAAD,CAAUjD,KAAMN,EAAYiF,IAAK2T,QAAS,SAAUyC,aAAcA,GAAcL,QAAS,SAAA5N,GAAO7L,QAAQC,IAAI,gBAAkBqG,SAAU,SAAAuF,GAAC,OAAIwO,GAAcxO,MAC1JjB,IAAe,cAACzC,EAAD,CAAW8B,SAvTlB,SAACoC,EAAWrC,GAKzB,GAJkB,YAAdqC,IACAxB,IAAe,GACfiP,MAEc,WAAdzN,EAAwB,CACxBxB,IAAe,GACf,IAAIhB,EAAO,CACPsI,KAAM,CACF0D,OAAQkK,EAAWD,SACnBnH,WAAYoH,EAAWjgB,KACvB2W,WAAYF,GACZzW,KAAMiS,EACNC,YAAa4N,EACbpI,WAAYA,EACZD,YAAaA,EACb/K,WAAY4F,EACZpD,SAAUoR,EACV7V,MAAO+V,EACP9V,QAASgW,EACT/V,QAASiW,IAEb3Q,KAAMwD,IAEVqI,aAAaY,QAAQ,WAAYrI,KAAKC,UAAUvK,IAChD1G,GAAGK,WAAW,SAASO,IAAIgc,EAAWtQ,QAAQ4R,IAAIxX,GAC7CxJ,MAAK,SAAAuD,GACF5D,QAAQC,IAAI,gBACZ6Z,QAEHxZ,OAAM,SAAAqB,GAAO3B,QAAQC,IAAI,2BAElC,GAAkB,QAAdoM,EAEA,GADArM,QAAQC,IAAI+J,IACmE,IAA1EyM,GAAW3S,KAAI,SAAUmF,GAAK,OAAOA,EAAEjK,SAAU6J,QAAQmB,IAAwBA,EAAWjI,OAAS,EAAI,CAC1G,IAAIuf,EAAU,CAAEzJ,MAAO7N,EAAYhL,MAAOgL,GAC1C7G,GAAGK,WAAW,cAAc+H,IAAI+V,GAC3BjhB,MAAK,SAAAuD,GACF5D,QAAQC,IAAI,sBACZyW,GAAc,GAAD,oBAAKD,IAAL,CAAiB6K,QAEjChhB,OAAM,SAAAqB,GAAO3B,QAAQC,IAAI,iCAC9B4K,IAAe,QAEfE,GAAc,CACVlK,KAAM,IACN2I,IAAK,IACLG,YAAa,SACbC,QAAUI,EAAWjI,OAAS,EAAK,gBAAkB,qBACrD8H,KAAK,+EACLC,WAAY,OACZE,WAAYA,EACZjB,OAAQ,SACRmB,QAAS,MACTlB,OAAQ,YACRmB,QAAS,WAIH,WAAdkC,GACAxB,IAAe,IA2PgC/B,QAASgC,KACxD,sBAAK9I,UAAU,eAAf,UACI,oBAAIrB,MAAO,CAAEI,MAAO,OAAQ2D,UAAW,SAAU+H,SAAU,MAAOxH,MAAO,WAAzE,SAAsF,0DAEtF,wBAAQjD,UAAU,UAAUkD,QAAS,SAAAvD,GAlDzCoQ,EAAW,KACXlH,IAAe,GACfE,GAAc,CACVpB,YAAa,OACbC,QAAS,UACTC,KAAK,+DAAD,OAAiEkI,EAAjE,eAAiFgO,EAAWjgB,KAAO,GAAMigB,EAAWjgB,KAAO,MAA3H,2BACJiJ,OAAQ,SACRmB,QAAS,UACTlB,OAAQ,YACRmB,QAAS,aAyCT,wBACA,wBAAQnI,UAAU,UAAUkD,QAAS,SAAAvD,GAAC,OA1GlD,SAAkBA,GACd,IAAIkI,EAAOsK,KAAKC,UAAU,CACtBjC,KAAM,CACF0D,OAAQpX,EAAYiF,IACpBiV,WAAYla,EAAY0B,YACxBsW,WAAYF,GACZzW,KAAMiS,EACNC,YAAa4N,EACbpI,WAAYA,EACZD,YAAaA,EACb/K,WAAY4F,EACZpD,SAAUoR,EACV7V,MAAO+V,EACP9V,QAASgW,EACT/V,QAASiW,IAEb3Q,KAAMwD,KAEVvT,QAAQC,IAAI4J,GACZ,IACI0X,EAAUxZ,SAASyZ,cAAc,KACrCD,EAAQE,aAAa,OAAQ,iCAAmCC,mBAAmB7X,IACnF0X,EAAQE,aAAa,WAHN,YAIfF,EAAQ5gB,MAAMwF,QAAU,OACxB4B,SAASiJ,KAAK2Q,YAAYJ,GAC1BA,EAAQK,QACR7Z,SAASiJ,KAAK6Q,YAAYN,GAgFwBO,IAA1C,mCACA,wBAAQ9f,UAAU,UAAUkD,QAAS,SAAAvD,GAAC,OApIlD,SAAgBA,GACZ,IAAIkI,EAAO,CACPsI,KAAM,CACF0D,OAAQpX,EAAYiF,IACpBiV,WAAYla,EAAY0B,YACxBsW,WAAYF,GACZzW,KAAMiS,EACNC,YAAa4N,EACbpI,WAAYA,EACZD,YAAaA,EACb/K,WAAY4F,EACZpD,SAAUoR,EACV7V,MAAO+V,EACP9V,QAASgW,EACT/V,QAASiW,IAEb3Q,KAAMwD,IAEVpQ,GAAGK,WAAW,SAAS+H,IAAI1B,GACtBxJ,MAAK,SAAAuD,GACF5D,QAAQC,IAAI,sBACZ6Z,QAEHxZ,OAAM,SAAAqB,GAAO3B,QAAQC,IAAI,yBA6GoB8hB,IAA1C,wCACChC,EAAWtQ,OAAS,IAAM,wBAAQzN,UAAU,UAAUkD,QAAS,SAAAvD,GAAC,OA/EzEkJ,IAAe,QACfE,GAAc,CACVpB,YAAa,UACbC,QAAS,UACTC,KAAK,2CAAD,OAA6CkI,EAA7C,eAA6DgO,EAAWjgB,KAAO,GAAMigB,EAAWjgB,KAAO,MAAvG,aACJiJ,OAAQ,SACRmB,QAAS,SACTlB,OAAQ,YACRmB,QAAS,YAuEsB,2CAG/B,wBAAOnI,UAAU,cAAjB,uDACQ,uBAAOtB,GAAG,WAAW4F,SAAU,SAAA3E,GAAC,OAAIge,EAAYhe,EAAE6E,OAAOxH,aAEjE,uBACA,wBAAOgD,UAAU,cAAjB,mCACQ,0BAAUtB,GAAG,kBAAkB4F,SAAU,SAAA3E,GAAC,OAAIke,EAAmBle,EAAE6E,OAAOxH,aAElF,sBAAKgD,UAAU,gBAAf,UACI,yBAASA,UAAU,SAAnB,SACI,kCACI,yBAAQtB,GAAG,aAAa4F,SAAU,SAAA3E,GAAC,OAAIse,EAActe,EAAE6E,OAAOxH,QAA9D,UACI,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,uBAHR,uCAQJ,yBAASgD,UAAU,SAAnB,SACI,kCACI,yBAAQtB,GAAG,cAAc4F,SAAU,SAAA3E,GAAC,OAAIue,EAAeve,EAAE6E,OAAOxH,QAAhE,UACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,KAAd,mBAHR,0DASPuX,IACG,cAAC,GAAD,CAAc8I,SAAS,EAAM1e,MAAO,CAAEI,MAAO,QAAS6d,UAAW,MAAO5d,WAAY,QAAUhC,MAAOuX,GAAgBjQ,SAAUkQ,GAAmB4I,QAAS3I,GAAYoB,MAAM,6BAEjL,wBAAQ7V,UAAU,UAAUrB,MAAO,CAAE8L,SAAU,kBAAmBpK,OAAQ,eAAiB6C,QAAS,SAAAvD,GAAC,OApGzGkJ,IAAe,QACfE,GAAc,CACVpB,YAAa,UACbC,QAAS,QACTC,KAAK,+EACLC,WAAY,OACZE,WAAY,GACZjB,OAAQ,SACRmB,QAAS,MACTlB,OAAQ,YACRmB,QAAS,YA0FT,8BACA,sBAAKnI,UAAU,uBAAf,UACI,yBAASA,UAAU,cAAnB,kEACA,0BAASA,UAAU,qBAAqBrB,MAAO,CAAE8U,MAAO,QAAxD,UACI,uBAAO/U,GAAG,KAAK4B,KAAK,SAASoK,IAAK,EAAGC,IAAK,GAAI4D,KAAM,EAAG5P,MAAO,CAAEI,MAAO,OAASuF,SAAU,SAAA3E,GAAC,OAAI4e,EAAU5e,EAAE6E,OAAOxH,UADtH,MAEI,uBAAO0B,GAAG,KAAK4B,KAAK,SAASoK,IAAK,EAAGC,IAAK,GAAI4D,KAAM,EAAG5P,MAAO,CAAEI,MAAO,OAASuF,SAAU,SAAA3E,GAAC,OAAI8e,EAAU9e,EAAE6E,OAAOxH,UAFtH,MAGI,uBAAO0B,GAAG,KAAK4B,KAAK,SAASoK,IAAK,EAAGC,IAAK,GAAI4D,KAAM,EAAG5P,MAAO,CAAEI,MAAO,OAASuF,SAAU,SAAA3E,GAAC,OAAIgf,GAAUhf,EAAE6E,OAAOxH,UAHtH,YAMJ,sBAAKgD,UAAU,gBAAf,UACI,0BAASA,UAAU,SAAnB,UACI,kCACI,uBAAOM,KAAK,WAAW5B,GAAG,yBAAyB4F,SAAU,SAAA3E,GAAC,OAAIuf,GAAwBnZ,SAASC,cAAc,2BAA2BkF,YADhJ,wCAIA,sBAAKvM,MAAO,CAAEwF,QAAS8a,GAAuB,QAAU,OAAQlgB,MAAO,OAAvE,UAEI,wBAAOiB,UAAU,cAAjB,gFACA,uBAAOtB,GAAG,aAAa4F,SAAU,SAAA3E,GAAC,OAAIwe,EAAkBxe,EAAE6E,OAAOxH,aAEjE,cAAC,EAAD,CAAYkI,UAjTd,SAACnH,GACfgI,SAASC,cAAc,eAAehJ,MAAQe,EAC9CogB,EAAkBpgB,YAkTV,0BAASiC,UAAU,SAAnB,UACI,kCACI,uBAAOM,KAAK,WAAW5B,GAAG,uBAAuB4F,SAAU,SAAA3E,GAAC,OAAIqf,GAA0BjZ,SAASC,cAAc,yBAAyBkF,YAD9I,iDAIA,sBAAKvM,MAAO,CAAEwF,QAAS4a,GAAyB,QAAU,OAAQhgB,MAAO,OAAzE,UACI,wBAAOiB,UAAU,cAAjB,oDACA,0BAAUtB,GAAG,qBAAqB4F,SAAU,SAAA3E,GAAC,OAAI0e,EAAgB1e,EAAE6E,OAAOxH,aAE1E,cAAC,GAAD,CAAa8a,aAzGd,SAAClY,GAChB,GAAIA,EAAG,CACH,IAAIiI,EAAO,CACPsI,KAAM,CACF0D,OAAQpX,EAAYiF,IACpBiV,WAAYla,EAAY0B,YACxBsW,WAAYF,GACZzW,KAAMiS,EACNC,YAAa4N,EACbpI,WAAYA,EACZD,YAAaA,EACb/K,WAAY4F,EACZpD,SAAUoR,EACV7V,MAAO+V,EACP9V,QAASgW,EACT/V,QAASiW,IAEb3Q,KAAMwD,IAEVqI,aAAaY,QAAQ,WAAYrI,KAAKC,UAAUvK,IAChDiQ,OAqFmDxT,SAAU,SAAAuF,GAAC,OAzT/C,SAACA,GACpB9D,SAASC,cAAc,uBAAuBhJ,MAAQ6M,EACtDwU,EAAgBxU,GAuTsDmW,CAAenW,eAIjF,cAAC,GAAD,CAAeK,QAASqH,GAAUxR,OAASwR,GAAUxR,OAAS,EAAGwZ,MAAO,SAAC5Z,GAAD,OAvR5Emf,IAAa,SAAAmB,GAAQ,6BAAQA,GAAR,CAAkB,CACnCtU,SAAU,GACV2G,OAAQ,CAAC,CAAEzK,KAAM,GAAIsE,IAAK,GAAIF,QAAQ,IACtCuG,OAAQ,CAAC,CAAE3K,KAAM,GAAIsE,IAAK,GAAIF,QAAQ,IACtCO,KAAM,CACFiG,UAAW,EACX/F,QAAS,EACTS,OAAQ,GACRhB,IAAK,UAGbqE,EAAYe,GAAUxR,aACtB/B,QAAQC,IAAIsS,IA2QqF0K,MAAO,SAACtL,GAAD,OA9PpGY,IAAagB,GAAUxR,OAAS,GAAGyQ,EAAYD,EAAW,QAC9DuO,GAAavN,GAAU+D,QAAO,SAAAwB,GAAI,OAAIvF,GAAU1K,QAAQiQ,KAAUvG,OA6P8D+K,OAAQ,SAAC3L,GAAD,OA3P5I,SAAoBA,GAChB,GAAIA,EAAE,KAAOA,EAAE,GAAI,CAGf,IAFA,IAAI2B,EAAM,GACN4O,EAAU3O,GAAU5B,EAAE,IACjBxN,EAAI,EAAGA,EAAIoP,GAAUxR,OAAQoC,IAC9BA,IAAMwN,EAAE,GACJA,EAAE,GAAKA,EAAE,IACT2B,EAAI9L,KAAK+L,GAAUpP,IACnBmP,EAAI9L,KAAK0a,KAET5O,EAAI9L,KAAK0a,GACT5O,EAAI9L,KAAK+L,GAAUpP,KAGlBA,IAAMwN,EAAE,IAAI2B,EAAI9L,KAAK+L,GAAUpP,IAE5C2c,GAAaxN,GACbd,EAAYb,EAAE,IACd3R,QAAQC,IAAIiiB,EAAS5O,IAyOsH6O,CAAWxQ,IAClJ0L,OAAQ,SAAC1b,GAAD,OA1QpB,WACI,IAAI2R,EAAMC,GAAUhB,GAAU+B,OAAO8N,MAAM,EAAG7O,GAAUhB,GAAU/D,KAAKE,SACvE8Q,GAAUjM,GAAUhB,GAAUiC,OAAO4N,MAAM,EAAG7O,GAAUhB,GAAU/D,KAAKiG,UAAYlB,GAAUhB,GAAU/D,KAAKE,SAC5G,IAAK,IAAIvK,EAAI,EAAGA,EAAImP,EAAIvR,OAAQoC,IAC5Bqb,GAAQhY,KAAK8L,EAAInP,IAErBnE,QAAQC,IAAIuf,IACLqB,IAAPD,IAmQuByB,IAAe/b,SAAU,SAACqO,IA1TrD,SAA8BA,GACbnC,EAATmC,EAAI,EAAiBA,EAAI,EAEbA,GAuTyC2N,CAAqB3N,IAAM0G,OAAQ,SAAC1G,GAxS7FiH,aAAaY,QAAQ,eAAgBrI,KAAKC,UAAUb,GAAUhB,MAwSgE6K,QAAS,SAACzI,IAtS5I,SAA8BhT,GAC1B,IAAI2R,EAAM,GACNiP,EAAYpO,KAAKqF,MAAMoC,aAAaC,QAAQ,iBAChD,GAAkB,OAAd0G,EAAJ,CACA,IAAK,IAAIpe,EAAI,EAAGA,EAAIoP,GAAUxR,OAAQoC,IAC9BA,IAAMoO,EAAW,GAAGe,EAAI9L,KAAK+a,GACjCjP,EAAI9L,KAAK+L,GAAUpP,IAEnBoO,IAAagB,GAAUxR,OAAS,GAAGuR,EAAI9L,KAAK+a,GAChDzB,GAAaxN,GACbd,EAAYD,EAAW,IA4RyHiQ,MAC3I5B,IACG,sBAAK5e,UAAU,iBAAiBrB,MAAO,CAAC6I,IAAKnG,OAAOoG,aAApD,UACI,qBAAKzH,UAAU,WAAWrB,MAAO,CAACC,SAAS,WAAW4I,IAAI,KAAMqD,MAAM,MAAO3H,QAAS,SAACvD,GAAD,OAAOkf,IAAQ,IAArG,SAA6G,qBAAK3e,IAAKzE,+BAA6C0E,IAAI,QAAQxB,MAAO,CAAEI,MAAO,kBAAmBwI,OAAQ,uBAC3N,cAAC,EAAD,CAAiB5I,MAAO,CAAEM,cAAe,QAAUuL,WAAY4F,EAAgBpD,SAAUoR,EAAclR,OAAQ,SAAUV,KAAM,CAAEiG,UAAWlB,GAAUhB,GAAU/D,KAAKiG,UAAW/F,QAAS6E,GAAUhB,GAAU/D,KAAKE,QAASS,OAAQoE,GAAUhB,GAAU/D,KAAKW,OAAQhB,IAAKoF,GAAUhB,GAAU/D,KAAKL,KAAOd,IAAK,EAAGM,SAAU4F,GAAUhB,GAAU5E,SAAUV,QAASuS,GAASrS,aAAc,GAAI7G,SAAU,SAAC8I,UAG/YmE,GAAUhB,IACP,cAAC,GAAD,CAAaoC,EAAGpB,GAAUhB,GAAWjM,SAAU,SAACqL,GAAD,OA5T3D,SAA8BA,GAC1B,IAAI2B,EAAG,aAAOC,IAC2B,aAArC7K,OAAO+Z,oBAAoB9Q,GAAG,KAAmB2B,EAAIf,GAAU5E,SAAWgE,EAAEhE,UACvC,YAArCjF,OAAO+Z,oBAAoB9Q,GAAG,KAAkB2B,EAAIf,GAAU/D,KAAKL,IAAMwD,EAAE+Q,SACtC,YAArCha,OAAO+Z,oBAAoB9Q,GAAG,KAAkB2B,EAAIf,GAAU/D,KAAKW,OAASwC,EAAEgR,SACzC,mBAArCja,OAAO+Z,oBAAoB9Q,GAAG,KAAyB2B,EAAIf,GAAU/D,KAAKiG,UAAY9C,EAAEiR,gBACnD,iBAArCla,OAAO+Z,oBAAoB9Q,GAAG,KAAuB2B,EAAIf,GAAU/D,KAAKE,QAAUiD,EAAEkR,cAC/C,WAArCna,OAAO+Z,oBAAoB9Q,GAAG,KAAiB2B,EAAIf,GAAU+B,OAAS3C,EAAE2C,QACnC,WAArC5L,OAAO+Z,oBAAoB9Q,GAAG,KAAiB2B,EAAIf,GAAUiC,OAAS7C,EAAE6C,QAC5EsM,GAAaxN,GAmTiDwP,CAAqBnR,MAEjF,sBAAKhR,MAAO,CAACI,MAAM,OAAQC,WAAW,OAAQC,cAAc,UAA5D,uBAAmF,cAAC,IAAD,CAAMC,GAAG,SAAT,+BAAnF,WCxaK6hB,OAvBf,WAEE,OACE,cAAC,IAAD,UACE,eAACzkB,EAAD,WACI,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0kB,OAAK,EAACC,KAAK,IAAIxd,UAAWyd,KACjC,cAAC3d,EAAD,CAAc0d,KAAK,kBAAkBxd,UAAW2B,IAChD,cAAC,IAAD,CAAO6b,KAAK,UAAUxd,UAAWtE,IACjC,cAAC,IAAD,CAAO8hB,KAAK,SAASxd,UAAWN,IAChC,cAAC,IAAD,CAAO8d,KAAK,SAASxd,UAAWL,IAChC,cAAC,IAAD,CAAO6d,KAAK,UAAUxd,UAAWJ,IACjC,cAAC,IAAD,CAAO4d,KAAK,mBAAmBxd,UAAWI,IAC1C,cAACN,EAAD,CAAcyd,OAAK,EAACC,KAAK,UAAUxd,UAAW0d,KAC9C,cAAC5d,EAAD,CAAcyd,OAAK,EAACC,KAAK,aAAaxd,UAAW/C,IACjD,cAAC,IAAD,CAAOugB,KAAK,gBAAZ,SAA4B,cAAClO,GAAD,eCvBzBqO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjjB,MAAK,YAAkD,IAA/CkjB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASje,OACP,cAAC,IAAMke,WAAP,UACE,cAAC,GAAD,MAEH9b,SAASiV,eAAe,SAMzBoG,M","file":"static/js/main.3c3efe94.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n<div id=\"footer\" style={{position:'absolute',left:0, bottom:0,width:'100%', marginLeft:\"10px\", pointerEvents:\"cursor\"}}\r\n    >\r\n&copy; 2021 <Link to=\"/about\">Sergey Bolotnikov</Link> \r\n</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    if (passwordRef.current.value.length < 6) {\r\n      return setError(\"Passwords should be at least 6 symbols long\")\r\n    }\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n      setToRoot(true);\r\n\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n\r\n          <h2 className=\"header1\">Sign Up\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n                    <input id=\"password-confirm\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordConfirmRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Already have an account? <Link className=\"links\" to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport firebase from \"../firebase\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\n function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser} = useAuth();\r\n  const [testsCreated, setTestsCreated] = useState(0);\r\n  const [testsResultsOnRec, setTestsResultsOnRec] = useState(0); \r\n  const [testsAverageScore, setTestsAverageScore] = useState(0);\r\n  const [userRating, setUserRating] = useState('BeginnerQuizer');\r\n  const db = firebase.firestore();\r\n\r\n  \r\n  async function handleUpdate() {\r\n    setError(\"\")\r\n    window.location.assign(process.env.PUBLIC_URL + '/#/update-profile')\r\n  }\r\n  function fetchTestsCreatedData()  {\r\n     db.collection(\"tests\").where(\"main.author\", \"==\", currentUser.uid).get()\r\n    .then(result=>{setTestsCreated(result.docs.map(doc => ({ ...doc.data() })).length)})\r\n    .catch(e=>{console.log('fail to get tests for user')})\r\n\r\n  }\r\n  function fetchTestsResultsData()  {\r\n    db.collection(\"results\").where(\"userId\", \"==\", currentUser.uid).get()\r\n   .then(result=>{\r\n     let resArray=result.docs.map(doc => ({ ...doc.data() }));\r\n     let averageRes=0;\r\n     console.log(resArray)\r\n     for (let i=0; i<resArray.length;i++){\r\n       averageRes+=parseFloat(resArray[i].result)  \r\n     }\r\n     let score=0;\r\n     if (resArray.length>0) score=(averageRes/resArray.length).toFixed(3)\r\n    setTestsAverageScore(score); \r\n    setTestsResultsOnRec(resArray.length)\r\n    let rate='';\r\n    if (score<=100) rate='DiamondQuizer';\r\n    if (score<=90) rate='GoldQuizer';\r\n    if (score<=80) rate='SilverQuizer';\r\n    if (score<=70) rate='BronzeQuizer';\r\n    if (score<=60) rate='BeginnerQuizer';\r\n    setUserRating(rate)\r\n  }).catch(e=>{console.log('fail to get user results')})\r\n\r\n }\r\n  useEffect(() => {\r\n    fetchTestsCreatedData();\r\n    fetchTestsResultsData();\r\n}, []);\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '6%' }}>\r\n        <div className='registeCard' style={{ padding: '.75em' }}>\r\n          <h2 className=\"header1\">Welcome\r\n          <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <img style={{ width: '60%', margin: '3% 15%' }} src={currentUser.photoURL > \"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"} alt=\"profile pic\" />\r\n          <h2 className=\"divStyle\" style={{ textAlign: 'center', width: '100%', maxWidth: '23ch', margin: 'auto' }}> <strong>@</strong>{currentUser.displayName}</h2>\r\n          <h6 className=\"divStyle\" style={{ textAlign: 'center', textDecoration: 'underline' }} >   {currentUser.email} </h6>\r\n        </div>\r\n        <table style={{ width: '97%',border:\"1px solid white\",backgroundColor: 'white', borderRadius: '10px', margin:\"3% auto\"  }} >\r\n                   \r\n                    <tbody >\r\n                    {/* borderBottom: '1px solid lightgrey',   */}\r\n                                <tr style={{backgroundColor: 'white'}}>\r\n                                    <td ><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz created:</div></td>\r\n                                    <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsCreated}</span></td>\r\n                                </tr>\r\n                                <tr style={{backgroundColor: 'white'}}>\r\n                                    <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz results on file:</div></td>\r\n                                    <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsResultsOnRec}</span></td>\r\n                                </tr>\r\n                                <tr style={{backgroundColor: 'white'}}>\r\n                                    <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Average Quiz rated:</div></td>\r\n                                    <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsAverageScore}%</span></td>\r\n                                </tr>\r\n                                <tr style={{backgroundColor: 'transparent'}}>\r\n                                 <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\", color:'transparent' }}> quiz</div></td>\r\n                                </tr>\r\n                                <tr style={{backgroundColor: 'lightgrey'}} >\r\n                                    <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Your rate:</div></td>\r\n                                    <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{userRating}</span></td>\r\n                                </tr>\r\n                            \r\n                    </tbody>\r\n                </table>\r\n                <button className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} onClick={handleUpdate}>\r\n                Update Profile\r\n            </button>        \r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\nexport default Dashboard","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n      <div className='mainContainer'>\r\n        <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n          <div className='registeCard'>\r\n            <h2 className=\"header1\">Log In\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /> </h2>\r\n            {error && <label className='alertStyle'>{error}</label>}\r\n            <form onSubmit={handleSubmit}>\r\n              <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n              </label>\r\n              <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n              </label>\r\n              <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n                Log In\r\n            </button>\r\n            </form>\r\n            <div className=\"divStyle\">\r\n              <Link className=\"links\" to=\"/forgot-password\">Forgot Password?</Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"divStyle\">\r\n            Need an account? <Link className=\"links\" to=\"/signup\">Sign Up</Link>\r\n          </div>\r\n          <div className=\"divStyle\">\r\n            Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function About() {\r\n\r\n  return (\r\n      <div className='mainContainer'>\r\n        <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n          <div className='registeCard'>\r\n            <h2 className=\"header1\">About\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /> </h2>\r\n          </div>  \r\n        </div>\r\n      </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Password Reset\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          {message &&<label className='successStyle'>{message}</label> }\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Reset Password\r\n            </button>\r\n          </form>\r\n          <div className=\"divStyle\">\r\n            <Link to=\"/login\" className=\"links\" >Login</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link to=\"/signup\"className=\"links\" >Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div style={{display:'flex', alignItems:'center', justifyContent:'start', marginLeft:'2%', maxWidth:'600px'}}>\r\n            <input type='file' style={{width:'48%'}} onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button testNav\" onClick={(e)=>{pictureUpload(e)}}>Upload Image</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef = useRef()\r\n  const userURLRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const getImgUrl = (url) => {\r\n    document.querySelector(\"#userURL\").childNodes[1].value = url;\r\n    userURLRef.current.value = url;\r\n    console.log(userURLRef.current.value)\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value !== currentUser.displayName) || (userURLRef.current.value !== currentUser.photoURL)) {\r\n      promises.push(updateUser(userNameRef.current.value, userURLRef.current.value))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  if (toRoot === true) { return <Redirect to=\"/dashboard\" /> }\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '5%' }}>\r\n        <div className='registeCard' >\r\n          <h2 className=\"header1\">Update Profile\r\n          <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >User's Name (keep it shorter then 20 symbols please)\r\n                <input id=\"userName\" type=\"text\" ref={userNameRef} defaultValue={currentUser.displayName} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle' id=\"userURL\" >User's picture link\r\n                <input type=\"text\" ref={userURLRef} defaultValue={currentUser.photoURL} />\r\n              <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\r\n            </label>\r\n            <label className='headerStyle'  >Email\r\n              <input id=\"email\" type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n              <input id=\"password\" type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n              <input id=\"password-confirm\" type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '2% auto' }} type=\"submit\">\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          <Link to=\"/dashboard\" className=\"links\" >Cancel</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React,{ useEffect, useState } from \"react\"\r\nvar variant = {\r\n  'danger': {\r\n    'color': '#721c24',\r\n    'backgroundColor': '#f8d7da',\r\n    'borderColor': '#f5c6cb'\r\n    \r\n  },\r\n  'success': {\r\n    'color': '#155724',\r\n    'backgroundColor': '#d4edda',\r\n    'borderColor': '#c3e6cb'\r\n   },\r\n   'secondary': {\r\n    'color': '#383d41',\r\n    'backgroundColor': '#e2e3e5',\r\n    'borderColor': '#d6d8db'\r\n  },\r\n  'warning': {\r\n    'color': '#856404',\r\n    'backgroundColor': '#fff3cd',\r\n    'borderColor': '#ffeeba'\r\n  },\r\n  'info': {\r\n    'color': '#0c5460',\r\n    'backgroundColor': '#d1ecf1',\r\n    'borderColor': '#bee5eb',\r\n  },\r\n  '': {},\r\n}\r\nexport default function AlertMenu(props) {\r\n  const [button1Color, setbutton1Color]=useState('');\r\n  const [button2Color, setbutton2Color]=useState('');\r\n  function StopScroll(){\r\n    var x=window.scrollX;\r\n    var y=window.scrollY;\r\n    window.onscroll=function(){window.scrollTo(x, y);};\r\n  console.log(x, y)\r\n       \r\n}\r\nfunction AllowScroll(){\r\n  window.onscroll=function(){};\r\n}\r\n  useEffect(() => {\r\n    setbutton1Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color1)].color);\r\n    setbutton2Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color2)].color);\r\n    StopScroll();\r\n}, []);\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh',position:'absolute',top: window.pageYOffset,left:0, display:'flex', justifyContent:'center', alignItems:'center',zIndex:'1700', backgroundColor:'rgba(105,105,105, .7)' }} >\r\n      <div className='alertContainer'>\r\n        <label className='alertItemStyle' style={Object.values(variant)[Object.keys(variant).indexOf(props.styling.variantHead)]}>{props.styling.heading}</label>\r\n        <h5 className=\"alertItemStyle\">{props.styling.text}</h5>\r\n        {props.styling.inputField && <input id=\"inputField\" style={{ width: \"100%\", marginBottom: \"10px\" }} defaultValue={props.inputValue} />}\r\n        {(props.styling.color1!==\"\") && <button className='alertItemStyle' style={{backgroundColor:button1Color, color:'white'}} onClick={e => {AllowScroll(); props.onReturn(props.styling.button1, (props.styling.inputField ? document.querySelector(\"#inputField\").value : null)); }}>\r\n          {props.styling.button1}\r\n        </button>}\r\n        {(props.styling.color2!==\"\") &&<button className=\"alertItemStyle\" style={{backgroundColor:button2Color, color:'white'}} onClick={e => {AllowScroll(); props.onReturn(props.styling.button2) }}>\r\n          {props.styling.button2}\r\n        </button>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { Fragment, useState } from 'react';\nimport AlertMenu from '../alertMenu';\nfunction TestNav(props) {\n    var timerInterval\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Finish\") { \n           stopTest();\n        }\n    }\n    function StopScroll(){\n        var x=window.scrollX;\n        var y=window.scrollY;\n        window.onscroll=function(){window.scrollTo(x, y);};\n      console.log(x, y)\n           \n    }\n    function timerDraw(event) {\n        let seconds = props.seconds;\n        let minutes = props.minutes;\n        let hours = props.hours;\n        StopScroll();\n        questionNumberSet('0');\n        event.preventDefault();\n        if ((seconds !== 0) || (minutes !== 0) || (hours !== 0)) {\n            timerInterval = setInterval(function () {\n                secondsLeft--;\n                if (seconds === 0) {\n                    seconds = 59;\n                }\n                else seconds--;\n                if (seconds === 59) {\n                    if (minutes === 0) {\n                        minutes = 59;\n                        hours--;\n                    } else minutes--;\n                }\n                setDisplayTime(stringTime(hours, minutes, seconds));\n                if ((secondsLeft === 0)) {\n                    clearInterval(timerInterval);\n                    document.querySelector(\".testNav\").classList.add('invisible');\n                    props.onExit(\"00:00:00\");\n                }\n\n            }, 1000);\n        }\n    };\n    function stringTime(h, m, s) {\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\n    }\n    function stopTest() {\n        clearInterval(timerInterval);\n        window.onscroll=function(){};\n        console.log('end')\n        document.querySelector(\".testNav\").classList.add('invisible');\n        let navButton = document.querySelectorAll(\".testNav\");\n        navButton.forEach(function (userItem) {\n            userItem.classList.add('invisible');\n        });\n        props.onExit(displayTime);\n    }\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else {\n                    questionNow.value = 1;\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Would you like to finish the test?`,\n                        color1: \"danger\",\n                        button1: \"Finish\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                }\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                navButton = document.querySelectorAll(\".testNavLight\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    return (\n        <Fragment>\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <button className=\"testNav\" id=\"startNav\" style={{ position: 'absolute', top: '44vh', left: \"43vw\", zIndex: '200' }}\n                onClick={timerDraw}>Start</button>\n            <button className=\"testNav invisible\" style={{ position: \"absolute\", top: '48vh', left: 0,textShadow:\"1px 1px black\", background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <label className=\"testNav invisible\" style={{position: \"absolute\",top:'0',left:'0', margin:'1.25vh 1vw', fontSize: 'calc(10px + 1vw)', zIndex: 1500 }} >\n                <input className=\"testNavLight invisible\" style={{ width: '3ch', fontSize: 'calc(10px + 1vw)' }} type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n                of {props.qNumber}</label>\n            <button className=\"testNav invisible \" style={{ position: \"absolute\", top: '48vh', right: 0,textShadow:\"1px 1px black\", background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n\n            <label className=\"testNav invisible\" style={{ position: \"absolute\", background: \"transparent\", top: 0, left: '38vw', width: '8ch', zIndex: 1500, textShadow:\"1px 1px black\" }}>{displayTime}</label> \n            <button className=\"testNav invisible\" id=\"finishBtn\"  style={{ position: \"absolute\", top: 0, right: 0,marginTop:'1.25vh', backgroundImage:`url(${process.env.PUBLIC_URL + \"/icons/finish.svg\"})`,width: \"9vh\", height: \"3vh\", borderWidth: '0px',borderRadius:'5px', zIndex: 1500 }}\n                onClick={stopTest}></button>\n\n        </Fragment>\n    );\n}\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst LayoutBox = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n    },[props.answers]);\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n            <div id='questionContainerBox' style={{ opacity: props.vis}}>\n                <section className=\"questionSection\">\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color:'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin:'auto',\n                            textAlign:\"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n              \n                </section>\n                <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-between',alignContent:'center', flexWrap: 'wrap', width: '99%', overflow:'visible' }}>\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{width:'49%',minHeight:'22%', maxHeight: '200px', maxWidth:'200px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Box\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n            </div>\n        </Fragment>\n    );\n}\nexport default LayoutBox;","import React, { useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nfunction LayoutSimple(props) {\n\n    useEffect(() => {\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n        \n    }, [props.answers]);\n    function checkingMulti(e) {\n        if (props.info.correct === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <div id='questionContainerSimple' style={{ opacity: props.vis}}>\n            <section className=\"questionSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\n                <div style={{width:'100%',display: 'flex',justifyContent:'center', alignItems: 'center', height: window.innerWidth < 700 ? '30%' : '70%' }}>\n                    <img src={props.info.img} style={{ height:'100%', alignSelf:'center'}} alt={props.info.img} />\n                </div>\n                <div style={{width:'100%', height: window.innerWidth < 700 ? '70%' : '30%' }}>\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color: 'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin: 'auto',\n                            textAlign: \"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n                </div>\n            </section>\n            <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'visible' }}>\n                {props.answers.map((answerOption, j) => {\n                    return (\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256} mode='multi'\n                                    min={10}\n                                    style={{\n                                        minHeight: \"95%\",\n                                        maxHeight: \"95%\",\n                                        minWidth: \"95%\",\n                                        maxWidth: \"95%\",\n                                        lineHeight: 1,\n                                        textAlign: \"center\",\n                                        textShadow: '1px 1px 2px black'\n                                    }}>{answerOption.text}</Textfit>\n                            </div>\n                        </label>\n                    )\n                })}\n            </section>\n        </div>\n    );\n}\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\nimport LayoutBox from '../../components/LayoutBox';\nimport LayoutSimple from '../../components/LayoutSimple';\nconst QuestionDisplay = props => {\n    const [backgroundVal,setBackgroundVal]= useState('')\n    useEffect(() => {\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\n        setBackgroundVal(gradientValue+comma+backgroundValue);\n        console.log(props.question)\n    }, []);\n    return (\n            <div id='questionDisplayContainer' className={`${(props.status==='test') ? \"noScroll\" : \"\"}`} style={{backgroundImage:backgroundVal}}>\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}    \n            </div>\n    );\n}\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nfunction GetResults(props) {\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    useEffect(() => {\n        let resultsData = []\n        const fetchData = async () => {\n\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    resultsData.push(doc.data());\n                });\n                resultsData.sort(function (a, b) {\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\n                });\n                setTestsRecords(resultsData);\n            });\n\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\n        };\n        fetchData();\n        console.log(testRecords);\n\n    }, [])\n\n    return (\n        <div style={{ width: '60vw', maxHeight: '20vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center',borderRadius:\"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n            <table style={{ margin:'auto' }} >\n                <tr>\n                    <th>Name</th>\n                    <th>Result</th>\n                    <th>Time Left</th>\n                </tr>\n                <tbody>\n                {testRecords && testRecords.map((test, j) => {\n                    return (\n                        <tr key={j}>\n                            <td key={\"name\"+j}>{test.displayName}</td>\n                            <td key={\"result\"+j}>{test.result}</td>\n                            <td key={\"time\"+j}>{test.time}</td>\n                        </tr>\n\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default GetResults;","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon, WhatsappShareButton, WhatsappIcon, LinkedinShareButton,LinkedinIcon, EmailShareButton, EmailIcon} from \"react-share\";\r\nfunction SharePost(props) {\r\n    var socialMediaButton = {\r\n        \"&:hover > svg\": {\r\n            height: \"50px !important\",\r\n            width: \"50px !important\",\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <FacebookShareButton\r\n                url={props.url}\r\n                quote={props.title+'\\n'+props.quote}\r\n                hashtag={props.hashtag}\r\n                className={socialMediaButton}\r\n            >\r\n                <FacebookIcon size={36} round={true}/>\r\n            </FacebookShareButton>\r\n            <TwitterShareButton\r\n                url={props.url}\r\n                title={props.title+'\\n'+props.quote}\r\n                hashtag={props.hashtag}\r\n                className={socialMediaButton}\r\n            >\r\n                <TwitterIcon size={36} round={true}/>\r\n            </TwitterShareButton>\r\n            <WhatsappShareButton\r\n                url={props.url}\r\n                title={props.title+'\\n'+props.quote}\r\n                separator=\":: \"\r\n                className={socialMediaButton}\r\n            >\r\n                <WhatsappIcon size={36} round={true}/>\r\n            </WhatsappShareButton>\r\n\r\n            <EmailShareButton\r\n                url={props.url}\r\n                subject={props.title}\r\n                body={props.quote+'\\n'}\r\n                media={props.image}\r\n                className={socialMediaButton}>\r\n                <EmailIcon size={36} round={true} />\r\n            </EmailShareButton>\r\n        </div>\r\n    )\r\n}\r\nexport default SharePost;","import React, { useState, useRef } from 'react';\nimport firebase from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport GetResults from \"../getResults\";\nimport SharePost from '../SharePost';\nconst ResultsDisplay = props => {\n    const { currentUser } = useAuth()\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\n    function handleSave() {\n        const db = firebase.firestore();\n        db.collection(\"results\").add({\n            testId: props.testId,\n            displayName: testeeName,\n            userId: testeeId.current,\n            result: props.rate,\n            time: timeInSeconds(props.time)\n        }).then(result => { handleDont() })\n            .catch(e => { console.log('fail to record result') })\n\n    }\n    function handleDont() {\n        window.location.reload();\n        console.log(\"redirect to /\")\n        // setToTest([true]);\n    }\n    function timeInSeconds(t) {\n        let time = t.split(':');\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\n    }\n    return (\n\n        <div style={{\n            display: 'flex', flexWrap: 'wrap', width: '100%',marginTop:'15%', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '1px 1px #f5d142',\n            backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))', backgroundSize: '100% 100%'\n        }}>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\n            {props.testId.length > 0 && <GetResults testId={props.testId} />}\n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\n            <div style={{ width: '60vw', maxHeight: '20vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center', borderRadius: \"10px\" }}>\n                <table style={{ margin: 'auto' }} >\n                    <tr>\n                        <th>Question</th>\n                        <th>Result</th>\n                    </tr>\n\n                    {props.res.map((res, j) => {\n                        return (\n                            <tr key={\"n\" + j}>\n                                <td key={\"num\" + j} >{j + 1}</td>\n                                <td key={\"correct\" + j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            </div>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\n\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\n            </label>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</button>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</button>}\n            <div style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\n                {props.testId.length <= 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</button>}\n            </div>\n            {props.testId.length > 0 && <>\n                <h3 style={{ width: '100%', textAlign: 'center' }}>To share results click below</h3>\n                <SharePost title={`I just complete the ${props.testName} at Quiz Land site`} url={'https://sbolotnikov.github.io/test-editor/#/taketest/' + props.testId} quote={`I got ${props.rate}% correct with ${timeInSeconds(props.time)} seconds left. \\n Could you beat me? \\n Click on the link below. Good luck! \\n`}\n                    hashtag={'#QuizLand '} image={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} description={'My score was ... And ... seconds left. Could you beat me?'} />\n            </>\n            }\n\n\n        </div>\n    );\n}\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\nimport TestNav from '../testNav';\nimport QuestionDisplay from '../QuestionDisplay';\nimport ResultsDisplay from '../ResultsDisplay';\nimport \"./style.css\";\n\nfunction TestRun(props) {\n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\n  var testBackground = props.test.main.background;\n  var quizMain = props.test.test;\n  var test = [];\n  var choiceSet = [];\n  const [displayQ, setDisplayQ] = useState(0);\n  const [resultTime, setResultTime] = useState('');\n  const [choices, setChoices] = useState([]);\n  const [results, setResults] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [visible, setVisible] = useState(0);\n  const [testGenerated, setTestGenerated] = useState('');\n  function randomizer(arr) {\n\n    let testArray = [];\n    let answerCount = arr.length;\n    let positionN = 0;\n    for (let i = 0; i < answerCount; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n\n    }\n    return testArray\n  }\n\n  function randomChoice(arr, n) {\n\n    let testArray = [];\n    let positionN = 0;\n    for (let i = 0; i < n; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n    }\n    return testArray\n  }\n  function handleChoices(ch) {\n    let localChoices = choices;\n    localChoices.splice(displayQ, 1, ch);\n    console.log(localChoices);\n    setChoices(localChoices);\n\n  }\n  function handleChangeQuestion(q) {\n    if (q > 0) { setDisplayQ(q - 1) }\n    else {\n      setDisplayQ(q);\n      setVisible(1);\n\n    }\n  }\n  function correctAnswers() {\n    let arr = [];\n    let arrSmall = [];\n    for (let i = 0; i < testGenerated.length; i++) {\n      arrSmall = [];\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\n      }\n      arr.push(arrSmall)\n    }\n    return arr\n  }\n  function handleQuizEnd(t) {\n    let arr = [];\n    let n = 0;\n    console.log(t);\n    let correctArr = correctAnswers();\n    setVisible(0);\n    for (let i = 0; i < correctArr.length; i++) {\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\n      if (arr[i] === true) n += 1\n    }\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\n    setRating(((n / correctArr.length * 100).toFixed(2)));\n    setResults(arr);\n    setResultTime(t);\n    console.log(results)\n  }\n\n  useEffect(() => {\n    console.log(props.test.id)\n    let answersSet = [];\n    for (let i = 0; i < quizMain.length; i++) {\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\n      answersSet = randomizer(answersSet);\n\n      test.push({\n        \"info\": quizMain[i].info,\n        \"question\": quizMain[i].question,\n        \"answers\": answersSet,\n      })\n      choiceSet.splice(0, 0, [])\n\n    }\n    setChoices(choiceSet);\n    setTestGenerated(test);\n  }, []);\n useEffect(()=>{\n  (results.length > 0) ? document.querySelector(\"nav.navbar\").style.display = 'flex' :document.querySelector(\"nav.navbar\").style.display = 'none';\n },[results]);\n\n\n  return (\n    <>\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testName={props.test.main.name} testId={props.local?\"\":props.test.id} />}\n      {testGenerated && results.length <= 0 && \n      <div  style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\n      <TestNav  qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\n      </div>\n      }\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient} status={\"test\"}  info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\n    </>\n  )\n}\n\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\nimport firebase from \"../firebase\";\nimport { useParams } from 'react-router-dom'\nimport TestRun from './TestRun'\nexport default function DirectTestPage() {\n  // http://localhost:3000/taketest/DDKOWkpHKTC3l2Aav7bC\n  const [test, setTest] = useState({});\n  const [loading, setLoading] = useState(false)\n  const db = firebase.firestore();\n  let { id } = useParams();\n  useEffect(() => {\n    db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\n\n      setTest({ ...querySnapshot.data(), id: id });\n      setLoading(true);\n    })\n      .catch(error => {\n        console.log(error)\n      })\n\n\n\n  }, [])\n  return (\n    <>\n      {loading && <TestRun test={test} local={false} />}\n    </>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport  \"./Nav.scss\";\n\n\nfunction Nav(props) {\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\n    const { currentUser } = useAuth();\n    const [imgDisplay, setImgDisplay] = useState('');\n    \n    function handleNavCollapse() {\n        setIsNavCollapsed(!isNavCollapsed)\n    }\n    useEffect(() => {\n        let imgLink =  process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\n        else{\n            setImgDisplay(imgLink)\n        }\n        \n    }, [currentUser]);\n    useEffect(()=>{\n        if(window.innerWidth<1000){\n        if (isNavCollapsed){\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"block\";\n        }\n    }\n\n    },[isNavCollapsed]);\n    useEffect(()=>{\n        if (window.innerWidth>=1000){\n            document.querySelector(\"#navbarNav\").style.display=\"flex\";\n            document.querySelector(\"#navbarNav\").style.justifyContent=\"center\";\n            document.querySelector(\"#navbarNav\").style.width=\"83%\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n       \n\n    },[window.innerWidth]);\n\n    return (\n        <nav className=\"navbar\" >\n            \n            {window.innerWidth<1000 ? <Link to=\"/dashboard\"><img className=\"member-photo\" src={imgDisplay} alt=\"avatar\"/></Link>\n             :<Link to=\"/\" className=\"navHeader\"> <img src={ process.env.PUBLIC_URL+\"/icons/logoName.svg\"} alt=\"close\" style={{width:'1.2em',height:'1.5em'}}/></Link> }\n\t\t\t{window.innerWidth<1000 ? <Link to=\"/\" className=\"navHeader\"> \n            Quiz Land</Link> : null}\n            {window.innerWidth<1000 ? <span id=\"navbar-toggler\"  onClick={handleNavCollapse}>\n                <div style={{ width: '1em', height: '1em',float:'center' }}>\n                   {isNavCollapsed ? \n                     <img src={ process.env.PUBLIC_URL+\"/icons/burger.svg\"} alt=\"open\" /> :\n                    <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" />}\n                </div>\n            </span>: null}\n            \n                <ul id=\"navbarNav\">\n\n\n                   {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Login\n                        </Link>\n\n                    </li>}\n                    {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Signup\n                    </Link>\n\n                    </li>}\n\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Take tests\n                    </Link>\n                    </li>\n                   {  currentUser && <li className=\"nav-item\">\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Manage tests\n                    </Link>\n                    </li>}\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            About\n                    </Link>\n                    </li>\n                    {  currentUser && <li className=\"nav-item\">\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollapse()} >\n                            Logout\n                    </Link>\n                    </li>}\n                </ul>\n            \n\n            {window.innerWidth<1000 ? null: <Link to=\"/dashboard\">\n               <img className=\"member-photo\"  src={imgDisplay} alt=\"member avatar\"/>\n            </Link>}\n        </nav>\n    );\n}\n\nexport default Nav;","import React, { Fragment, useEffect } from 'react';\nimport \"./style.scss\";\nconst ChooseCategory = props => {\n\n\n    useEffect(() => {\n        for (let i = 0; i <props.answers.length; i++) {\n            document.querySelector(\"#category_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#category_\" + i).checked = true;\n        }\n        console.log(props.answers)\n    },[]);\n    function checkingMulti(e) {\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#category_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#category_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n                <section className=\"categoriesSection\" >\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelCat\" + j} style={{width:'47%',maxHeight:'150px', maxWidth:'180px', margin:'5px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputCat\" + j} id={\"category_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '25% 25%',backgroundPosition: 'right top' }}>\n                                    <div className=\"tickmark\" key={\"divCat\" + j}> </div>\n                                    <div className=\"name2\" key={\"div2Cat\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n        </Fragment>\n    );\n}\nexport default ChooseCategory;","import React from \"react\"\r\nexport default function TestPopupInfo(props) {\r\n    return (\r\n        // {author: \"\", description:\"\", name:\"\", questionsTotal: 0}\r\n        <div style={{ width: '100vw', height: '100vh',position:'absolute',top: window.pageYOffset, left:0, display:'flex', justifyContent:'center', alignItems:'center'  }} >\r\n            <div className='alertContainer'>\r\n                <h3 className=\"alertItemStyle\"><strong>{props.test.name}</strong></h3>\r\n                <p className=\"alertItemStyle\"><strong>Author:</strong> {props.test.author}</p>\r\n                <p className=\"alertItemStyle\"><strong>Description:</strong> {props.test.description}</p>\r\n                <p className=\"alertItemStyle\"><strong>Question amount:</strong> {props.test.questionsTotal}</p>\r\n                <button className=\"alertItemStyle\" style={{ backgroundColor: '#d1ecf1', color: '#0c5460' }} onClick={e=>{ \r\n                    console.log('click'); props.onRes('')}}>\r\n                    Close\r\n        </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport ChooseCategory from \"../components/ChooseCategory\";\nimport TestPopupInfo from \"../components/TestPopupInfo\"\nimport { Link} from \"react-router-dom\"\nfunction GetTests(props) {\n    const db = firebase.firestore();\n    const { currentUser } = useAuth();\n    const [testRecords, setTestsRecords] = useState([]);\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [revealInfo, setRevealInfo] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [categories, setCategories] = useState([]);\n    const [categoriesLayout, setCategoriesLayout] = useState([]);\n    const [checked, setChecked] = useState([]);\n    const [testFromDB, setTestFromDB] = useState({});\n    const [checkEditLocalTestVisible, setCheckEditLocalTestVisible] = useState(false);\n    const [testInfo, setTestInfo] = useState({});\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('tests').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    props.reloadNeeded(true);\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n        if (decision1 === \"Proceed\") {\n            props.onChange(testFromDB);\n            props.onLocal(false);\n        }\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\n        let objFound = testRecords[elementPos];\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleHover(t) {\n        console.log(t.clientY);\n        let test = testRecords.filter(item => item.id === t.target.getAttribute(\"value\"))[0];\n        setTestInfo({\n            author: test.main.authorName,\n            description: test.main.description,\n            name: test.main.name,\n            questionsTotal: test.test.length,\n            positionY: t.clientY + 5\n        })\n        setRevealInfo(true);\n\n    }\n    function handleClick(test) {\n        console.log(test.target.getAttribute(\"value\"))\n        if (props.forPage === 'create') {\n            setAlertStyle({\n                variantHead: \"danger\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n            setRevealAlert(true);\n            setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0])\n        } else { props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0]) }\n    }\n    const fetchData = async () => {\n        let arrTemp = [];\n        const data = await db.collection(\"tests\").get();\n        if (props.forPage === 'create')\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\n        else\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        console.log(arrTemp)\n        setTestsRecords(arrTemp);\n        setTestsRecordsDisplay(arrTemp);\n    };\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setCategories(arrTemp);\n        arrTemp = arrTemp.map(option => { return ({ 'text': option.value, img: process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\" }) });\n        console.log(arrTemp)\n        setCategoriesLayout(arrTemp);\n    };\n    function getChoosenTests(ch) {\n        setChecked(ch);\n        (ch.length > 0) ? setSelectedOption(categories.filter((n, j) => ch.indexOf(j) > -1)) : setSelectedOption(categories)\n    }\n    function readSingleFile(evt) {\n        var f = evt.target.files[0];\n        if (f) {\n            var r = new FileReader();\n            r.onload = function (e) {\n                setTestFromDB(JSON.parse(e.target.result));\n                if (props.forPage === 'create') {\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                        color1: \"danger\",\n                        button1: \"Proceed\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                } else {\n                    props.onChange(JSON.parse(e.target.result));\n                    props.onLocal(true);\n                }\n                // setLocalTest(true)\n            }\n            r.readAsText(f);\n\n        } else {\n            alert(\"Failed to load file\");\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        fetchData();\n    }, []);\n    useEffect(() => {\n        let recordSet = testRecords;\n        let chosenRec = [];\n        console.log(selectedOption);\n        if (selectedOption) {\n            for (let i = 0; i < selectedOption.length; i++) {\n                let tempArr = [];\n                for (let j = 0; j < recordSet.length; j++) {\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\n                }\n                chosenRec = chosenRec.concat(tempArr);\n            }\n        }\n        // exclude duplicates in Array  \n        chosenRec = chosenRec.filter((c, index) => {\n            return chosenRec.map(x => x.id).indexOf(c.id) === index;\n        });\n        setTestsRecordsDisplay(chosenRec);\n    }, [selectedOption])\n    return (\n        <div style={{ width: '100%', maxWidth: \"600px\", height: \"52vh\", margin: '6em 0 2em 0' }}>\n            {revealInfo && <TestPopupInfo test={testInfo} onRes={e => {\n                setRevealInfo(false); console.log('close')\n            }\n            } />}\n            {(props.forPage === 'test') && (currentUser) && <button className=\"testNav\" style={{ width: '100%', margin:0}} onClick={e=>{ window.location.assign(process.env.PUBLIC_URL + '/#/create'); }}>\n                Create New test\n            </button>}\n            <p className=\"testNav\" style={{backgroundColor:'transparent', textAlign:'center'}}> CHOOSE TEST TO {(props.forPage === 'test')? 'TAKE':'MANAGE'}</p>\n            {categoriesLayout &&\n                <ChooseCategory type={categoriesLayout.length} answers={categoriesLayout} checkedMarks={checked} onChange={(ch) => { getChoosenTests(ch) }} />\n            }\n            <p className=\"testNav\" style={{backgroundColor:'transparent', textAlign:'center'}}>DISCOVER TESTS</p>\n            {testRecordsDisplay && <div style={{ height: '35%', overflow: 'auto', margin: '0' }}>\n            \n                <table style={{ width: '100%' }} >\n                   \n                    <tbody>\n                        {testRecordsDisplay.map((test, j) => {\n                            return (\n                                <tr key={\"divTests\" + j} >                         \n                                        {/* <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: '#0c5460', margin: '4%' }} key={\"linkBtnTests\" + j} value={test.id} onClick={e => handleLink(e)}>Link &#128279;</button> */}\n                                        {(props.forPage === 'create') &&\n                                           <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: '#721c24', margin: '4%', display: 'flex', flexDirection: \"column\", alignItems: 'center' }} key={\"eraseBtnTests\" + j} value={test.id} onClick={e => handleDelete(e)}>Del <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(.9vw,10px)', height: 'max(.9vw,10px)' }} /></button></td>\n                                        }                                  \n                                    <td style={{ backgroundColor: 'white', borderRadius: '5px' }}><div key={\"textTests\" + j} className='testText' value={test.id} onClick={e => handleHover(e)} style={{ cursor: \"pointer\", whiteSpace: 'wrap', textAlign: 'center', border: 0, width: \"100%\" }}>{test.main.name} <span value={test.id} style={{ fontStyle: 'oblique', color: '#554FA7' }}>@{test.main.authorName}</span></div></td>\n                                    <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: 'white', color: '#554FA7'}} key={\"playBtnTests\" + j} value={test.id} onClick={e => handleClick(e)}><img src={(props.forPage === 'create') ? process.env.PUBLIC_URL + \"/icons/EditIcon.svg\" : process.env.PUBLIC_URL + \"/icons/Play.svg\"} value={test.id} alt={(props.forPage === 'create') ? \"Edit\" : \"Play\"} style={{ width: 'max(3.5vw,25px)', height: 'max(3.5vw,25px)' }} /></button></td>\n                                    {/* button text if needed <strong>{(props.forPage === 'create') ? 'Edit' : 'Play'}</strong> */}\n                                </tr>\n                            )\n                        }\n                        )}\n                    </tbody>\n                </table>\n            </div>}\n            {currentUser && <label >\n                <input type=\"checkbox\" id=\"checkEditLocalTest\" style={{ margin: '5% 2% 0 2%' }} onChange={e => setCheckEditLocalTestVisible(document.querySelector(\"#checkEditLocalTest\").checked)} />\n              Load local test from your disk\n              \n            { checkEditLocalTestVisible && <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />}\n            </label>}\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {(props.forPage === 'test') && <div className=\"divStyle\">\n            Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\n          </div>}\n        </div>\n    );\n}\nexport default GetTests;","import React, { useState } from 'react';\nimport TestRun from '../../components/TestRun';\nimport GetTests from '../../components/getTests';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Footer from \"../../components/Footer\";\nimport \"./style.css\";\n\n\nfunction ToRenderEverything() {\n\n  const [testLoad, setTestLoad] = useState(false);\n  const [localTest, setLocalTest] = useState(false);\n  const { currentUser } = useAuth()\n\n  function getTestfromDB(n) {\n    console.log(n)\n    setTestLoad(n);\n  }\n  return (\n    <>\n    <div className=\"testContainer\">\n      {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onLocal={l => setLocalTest(l)} onChange={n => getTestfromDB(n)} /> }\n      {testLoad && <TestRun test={testLoad} local={localTest} />}\n      {!testLoad && <Footer />}\n    </div>\n    </>\n  )\n}\n\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\nimport Cloudinary from './Cloudinary';\nfunction GetText(props) {\n    const [answerText, setAnswerText] = useState(props.answer.text);\n    const [imgLink, setImgLink] = useState(props.answer.img);\n    const [checkBox, setCheckBox] = useState();\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        setImgLink(url);\n        sendBack(answerText, url);\n    }\n    function changeInput(e) {\n        setAnswerText(e.target.value)\n        sendBack(e.target.value, imgLink);\n    }\n    function changeImage(e) {\n        setImgLink(e.target.value);\n        console.log(imgLink)\n        sendBack(answerText, e.target.value);\n    }\n    function sendBack(a, b) {\n        let choice = {\n            text: a,\n            img: b,\n            num: props.num\n        };\n        props.onChange(choice);\n    }\n    useEffect(() => {\n        setAnswerText(props.answer.text);\n        if (props.answer.img.length > 0) {\n            setCheckBox(true);\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\n            setImgLink(props.answer.img);\n        } else {\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\n            setCheckBox(false);\n        }\n    }, [props.answer]);\n    return (\n            <div >\n                <textarea style={{ width: '100%' }} value={answerText} onChange={e => changeInput(e)} />\n                <label style={{ color: 'black', width: '100%' }}>\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\n                check to add image link</label>\n                {checkBox && <div>\n                    <input type=\"text\" style={{ width: '80%', opacity: checkBox }} value={imgLink} onChange={e => changeImage(e)} />\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                </div>}\n            </div>\n    );\n}\nexport default GetText;","import React, { useEffect, useState } from 'react';\nimport GetText from './GetText.js';\n\nfunction GetAnswers(props) {\n    function handleNewText() {\n        let emptyNew = { text: '', img: '', choice: props.correct };\n        props.onNew(emptyNew);\n    }\n    function handlePasteText(){\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\n        if (pasteItem===null) return\n        pasteItem.choice=props.correct;\n        props.onNew(pasteItem);\n    }\n    function handleChangeText(t) {\n        let localArr = props.answers;\n        if ((t.text === '') && (t.img === '')) {\n            localArr.splice(t.num, 1);\n        } else {\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\n            localArr.splice(t.num, 1, answerRenew)\n        }\n        props.onChange(localArr);\n    }\n    function handleDelete(e) {\n        props.onDelete(e.target.value)\n    }\n    function handleCopy(e){\n        props.onCopy(e.target.value)\n    }\n    const [answers, setAnswers] = useState([]);\n    useEffect(() => {\n        setAnswers(props.answers);\n    }, [props.answers]);\n    return (\n        <div style={{display:\"flex\", alignItems:\"start\", justifyContent:\"start\", marginBottom:'4vh'}}>\n            <div style={{width:'85%' }}>\n                <div>\n                    {answers && answers.map((answerOption, j) => {\n                        return (\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\", margin:0 }}  key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>&#128209;Copy</button>\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />         \n                            </div>\n                        )\n                    }\n                    )}\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handlePasteText() }}>&#128203;Paste</button>\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handleNewText() }}>New &#10133;</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\nimport GetAnswers from './GetAnswers.js';\nimport Cloudinary from './Cloudinary';\nfunction GetQuestion(props) {\n    var questionObj = {}\n\n    const [rights, setRights] = useState([]);\n    const [wrongs, setWrongs] = useState([]);\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        props.onChange({ \"mainImg\": url })\n    }\n    // list available layouts\n    var layouts = [\"simple\", \"box\"];\n    useEffect(() => {\n        document.querySelector(\"#question\").value = props.q.question;\n        document.querySelector(\"#mainImg\").value = props.q.info.img;\n        document.querySelector(\"#positionsCount\").value = props.q.info.positions;\n        document.querySelector(\"#correctCount\").value = props.q.info.correct;\n        document.querySelector(\"#layout1\").value = props.q.info.layout;\n        setRights(props.q.rights);\n        setWrongs(props.q.wrongs);\n\n    }, [props.q]);\n    function handleReturnData(t, corr) {\n        if (corr) {\n            questionObj.rights = t;\n            // setRights(localChoices);\n        } else {\n            questionObj.wrongs = t;\n            //  setWrongs(localChoices);\n        }\n        props.onChange(questionObj)\n    }\n    function handleCopyData(n, corr) {\n        (corr) ? questionObj = props.q.rights[n] : questionObj = props.q.wrongs[n];\n        localStorage.setItem('answerCopy', JSON.stringify(questionObj));\n    }\n    function newRecord(e, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.push({ text: e.text, img: e.img, choice: true });\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.push({ text: e.text, img: e.img, choice: false });\n        }\n        props.onChange(questionObj)\n    }\n\n\n    function delRecord(n, corr) {\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.splice(n, 1);\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.splice(n, 1);\n        }\n        props.onChange(questionObj)\n    }\n\n    return (\n        <Fragment>\n            <label className='headerStyle'>Enter your question\n            <textarea id=\"question\" onChange={e => { props.onChange({ \"question\": e.target.value }) }} />\n            </label>\n            <br/>\n            <label className='headerStyle'>Add your question main picture link (if you have one)\n            <input id=\"mainImg\" onChange={e => { props.onChange({ \"mainImg\": e.target.value }) }} />\n            </label>\n            <Cloudinary getImgUrl={getImgUrl} />\n            <label className='headerStyle'>Choose question layout\n                <select id=\"layout1\" onChange={e => { props.onChange({ \"layout1\": e.target.value }) }} >\n                    {layouts.map((option, i) => {\n                        return (\n                            <option value={option} key={'layout_option' + i}>{option}</option>\n                        )\n                    }\n                    )}\n                </select>\n             </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label>\n                        <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length + wrongs.length}  onChange={e => { props.onChange({ \"positionsCount\": e.target.value }) }} />            \n                        How many positions would be displayed?(Maximum should be less then answers options)\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label>\n                        <input id=\"correctCount\" type=\"number\" min={0} max={rights.length}  onChange={e => { props.onChange({ \"correctCount\": e.target.value }) }} />           \n                        How many correct options should be selected?(Maximum should be less then correct answers options)\n                    </label>\n                </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel2'>\n                    <label className='headerStyle' style={{color:'green'}} ><strong>Enter text of the correct answers:</strong></label>\n                    {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\n                </section>\n                <section className='panel1'>\n                    <label className='headerStyle' style={{ color:'red'}} ><strong>Enter text of the wrong answers:</strong></label>\n                    {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\n                </section>\n            </div>\n        </Fragment >\n    )\n}\nexport default GetQuestion;","import React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nfunction TestCreateNav(props) {\n\n    const [qArr, setqArr] = useState('');\n    const [moveVis, setMoveVis] = useState(false);\n    useEffect(() => {\n        document.getElementById('questionPage').value = 1;\n    }, []);\n    useEffect(() => {\n        let arr = [];\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\n        setqArr(arr);\n    }, [props.qNumber]);\n    function questionNumberSet(n) {\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    function deleteRec() {\n        props.onDel('');\n        let n = document.querySelector(\"#questionPage\");\n        let k = \"\"\n        if (parseInt(n.value) !== props.qNumber) {\n            k = n.value;\n            n.value = k;\n        } else {\n            k = n.value;\n            n.value = (parseInt(k) - 1).toString();\n        }\n    }\n    function visibilityMoveTo() {\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\n        setMoveVis(!moveVis)\n    }\n    return (\n\n        <div className=\"navContainer\" style={{ marginTop: '2%' }} >\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Question editing panel</strong></h3>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet('1') }}>&#9198;</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <input className=\"testNavLight text-center\" style={{width:'3ch'}} type=\"number\" id=\"questionPage\"  min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\n            <button className=\"testNav\"\n                onClick={e => { deleteRec() }}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/>Delete</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\n            <button className=\"testNav\"\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\n            {(props.qNumber > 1) && <button className=\"testNav\"\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\n            }}>\n                {qArr.map((option, i) => {\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\n                }\n                )}\n            </select>}\n        </div>\n\n    );\n}\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nfunction GetGradient(props) {\n    const db = firebase.firestore();\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [gradients, setGradients] = useState([]);\n    const [newGradient, setNewGradient] = useState('');\n    const [newGradientName, setNewGradientName] = useState('');\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\n\n    const onReturn = (decision1) => {\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('gradients').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n    }\n    function handleAdd(e) {\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\n            .then(res => {\n                console.log('added');\n                props.reloadNeeded(true);\n                // setGradients(gradients.push({name:newGradientName,value:newGradient}))\n            })\n            .catch(error => {\n                console.log(\"can not delete a record\");\n            })\n    }\n    function handleDelete(e) {\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\n        setAlertStyle({\n            left: \"0\",\n            top: \"0\",\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n\n        setRevealAlert(true)\n    }\n    function handleClick(grad) {\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\n        props.onChange(gr[0].value);\n    }\n    const fetchGradients = async () => {\n\n        const data = await db.collection(\"gradients\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n        setGradients(arrTemp);\n    };\n    useEffect(() => {\n        fetchGradients();\n    }, []);\n\n    return (\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {gradients && gradients.map((item, j) => {\n                return (\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius:'10px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\n                        <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  key={\"gradient_del_button\"+j} value={item.id} onClick={e => handleDelete(e)}>Del<img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(.9vw,10px)',height:'max(.9vw,10px)'}}/></button>\n                    </div>\n                )\n            }\n            )}\n            <label>\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} />\n                Add new background gradient CSS to our database of pre-set styles\n            </label>\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '100%' }}>\n                <label className='headerStyle'>Enter gradient CSS</label>\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\n                <label className='headerStyle'>Enter gradient name</label>\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\n                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  onClick={e => handleAdd(e)}>Add &#128504;</button>\n            </div>\n        </div>\n    );\n}\nexport default GetGradient;","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport GetQuestion from '../../components/GetQuestion.js';\nimport TestCreateNav from '../../components/testCreateNav';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport \"./style.css\";\nimport GetTests from '../../components/getTests.js';\nimport GetGradient from '../../components/getGradient.js';\nimport AlertMenu from '../../components/alertMenu';\nimport Cloudinary from '../../components/Cloudinary';\nimport QuestionDisplay from '../../components/QuestionDisplay';\nimport CustomSelect from '../../components/CustomSelect';\n\nvar demoArr = [];\nvar emptyQ = {\n    question: '',\n    rights: [{ text: '', img: '', choice: true }],\n    wrongs: [{ text: '', img: '', choice: false }],\n    info: {\n        positions: 2,\n        correct: 1,\n        layout: '',\n        img: ''\n    }\n}\nfunction ToRenderEverything() {\n    var defOptionArray = [];\n    const { currentUser } = useAuth();\n    const [testName, setTestName] = useState('');\n    const [testDescription, setTestDescription] = useState('');\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\n    const [visibility, setVisibility] = useState('');\n    const [editability, setEditability] = useState('');\n    const [displayQ, setDisplayQ] = useState(0);\n    const [testBackground, setTestBackground] = useState('');\n    const [testGradient, setTestGradient] = useState('');\n    const [testHH, setTestHH] = useState(0);\n    const [testMM, setTestMM] = useState(0);\n    const [testSS, setTestSS] = useState(0);\n    const [show, setShow] = useState(false);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({})\n    const [testArray, setTestArray] = useState([emptyQ]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\n    const db = firebase.firestore();\n    const fetchCategories = async () => {\n\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n        });\n        setCategories(arrTemp);\n    };\n    const onReturn = (decision1, inputValue) => {\n        if (decision1 === \"Proceed\") {\n            setRevealAlert(false);\n            reloadNeeded()\n        }\n        if (decision1 === \"Update\") {\n            setRevealAlert(false);\n            let text = {\n                main: {\n                    author: testAuthor.authorId,\n                    authorName: testAuthor.name,\n                    categories: selectedOption,\n                    name: testName,\n                    description: testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            db.collection('tests').doc(testAuthor.testId).set(text)\n                .then(result => {\n                    console.log(\"file updated\");\n                    reloadNeeded();\n                })\n                .catch(e => { console.log(\"file fail to updated\"); })\n        }\n        if (decision1 === \"Add\") {\n            console.log(inputValue)\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\n                let newItem = { label: inputValue, value: inputValue }\n                db.collection('categories').add(newItem)\n                    .then(result => {\n                        console.log(\"categories updated\");\n                        setCategories([...categories, newItem]);\n                    })\n                    .catch(e => { console.log(\"categories fail to updated\"); })\n                setRevealAlert(false);\n            } else {\n                setAlertStyle({\n                    left: \"0\",\n                    top: \"0\",\n                    variantHead: \"danger\",\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n                    inputField: 'true',\n                    inputValue: inputValue,\n                    color1: \"danger\",\n                    button1: \"Add\",\n                    color2: \"secondary\",\n                    button2: \"Cancel\"\n                });\n            }\n        }\n        if (decision1 === \"Cancel\") {\n            setRevealAlert(false);\n        }\n    }\n    const reloadNeeded = (a) => {\n        window.location.reload();\n    }\n    const getImgUrl = (url) => {\n        document.querySelector(\"#background\").value = url;\n        setTestBackground(url);\n    }\n    const getGradientCSS = (n) => {\n        document.querySelector(\"#backgroundGradient\").value = n;\n        setTestGradient(n)\n    }\n    function handleUpdateQuestion(q) {\n        if (q > 0) { setDisplayQ(q - 1) }\n        else {\n            setDisplayQ(q);\n        }\n    }\n    function handleReturnQuestion(t) {\n        let arr = [...testArray];\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\n        setTestArray(arr);\n    }\n    function handleCopyQuestion(e) {\n        localStorage.setItem('questionCopy', JSON.stringify(testArray[displayQ]));\n    }\n    function handleInsertQuestion(e) {\n        let arr = [];\n        let questCopy = JSON.parse(localStorage.getItem('questionCopy'));\n        if (questCopy === null) return\n        for (let i = 0; i < testArray.length; i++) {\n            if (i === displayQ + 1) arr.push(questCopy)\n            arr.push(testArray[i])\n        }\n        if (displayQ === testArray.length - 1) arr.push(questCopy)\n        setTestArray(arr)\n        setDisplayQ(displayQ + 1)\n    }\n    function handleAdd(e) {\n        // e.preventDefault()\n        setTestArray(oldArray => [...oldArray, {\n            question: '',\n            rights: [{ text: '', img: '', choice: true }],\n            wrongs: [{ text: '', img: '', choice: false }],\n            info: {\n                positions: 2,\n                correct: 1,\n                layout: '',\n                img: ''\n            }\n        }]);\n        setDisplayQ(testArray.length);\n        console.log(displayQ);\n    }\n    function handleShow() {\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\n        for (let i = 0; i < arr.length; i++) {\n            demoArr.push(arr[i]);\n        }\n        console.log(demoArr);\n        show ? setShow(false) : setShow(true)\n    }\n    function handleDelete() {\n\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\n    }\n    function handleMove(t) {\n        if (t[0] !== t[1]) {\n            let arr = [];\n            let record1 = testArray[t[0]];\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === t[1]) {\n                    if (t[1] > t[0]) {\n                        arr.push(testArray[i]);\n                        arr.push(record1);\n                    } else {\n                        arr.push(record1);\n                        arr.push(testArray[i]);\n                    }\n                }\n                else if (i !== t[0]) arr.push(testArray[i])\n            }\n            setTestArray(arr);\n            setDisplayQ(t[1])\n            console.log(record1, arr)\n        }\n    }\n    function getTestfromDB(n) {\n        console.log(n)\n        let newTest = n;\n        setTestArray(newTest.test);\n        setDisplayQ(0);\n        document.querySelector(\"#questionPage\").value = 1;\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\n        defOptionArray = newTest.main.categories\n        setSelectedOption(defOptionArray);\n        document.querySelector(\"#testName\").value = newTest.main.name;\n        setTestName(newTest.main.name);\n        document.querySelector(\"#testDescription\").value = newTest.main.description;\n        setTestDescription(newTest.main.description);\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\n        setVisibility(newTest.main.visibility);\n        document.querySelector(\"#editability\").value = newTest.main.editability;\n        setEditability(newTest.main.editability);\n        document.querySelector(\"#background\").value = newTest.main.background;\n        setTestBackground(newTest.main.background);\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n        setTestGradient(newTest.main.gradient);\n        document.querySelector(\"#hh\").value = newTest.main.hours;\n        setTestHH(newTest.main.hours);\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\n        setTestMM(newTest.main.minutes);\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\n        setTestSS(newTest.main.seconds);\n    }\n    function upload(e) {\n        let text = {\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description: testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        };\n        db.collection(\"tests\").add(text)\n            .then(result => {\n                console.log(\"file created in DB\");\n                reloadNeeded()\n            })\n            .catch(e => { console.log(\"no connectionto DB\"); })\n    }\n    function download(e) {\n        let text = JSON.stringify({\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description: testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        });\n        console.log(text)\n        let filename = \"test.txt\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n    function update(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Warning\",\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\n            color1: \"danger\",\n            button1: \"Update\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function handleNewCategory(e) {\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Alert\",\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n            inputField: 'true',\n            inputValue: \"\",\n            color1: \"danger\",\n            button1: \"Add\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function startNewTest(e) {\n        if (testName > \"\") {\n            setRevealAlert(true);\n            setAlertStyle({\n                variantHead: \"info\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n        }\n    }\n    const saveReload = (a) => {\n        if (a) {\n            let text = {\n                main: {\n                    author: currentUser.uid,\n                    authorName: currentUser.displayName,\n                    categories: selectedOption,\n                    name: testName,\n                    description: testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            reloadNeeded();\n        }\n    }\n    useEffect(() => {\n        fetchCategories();\n        let pasteItem = JSON.parse(localStorage.getItem('testCopy'));\n        if ((pasteItem !== null)) getTestfromDB(pasteItem)\n        localStorage.removeItem('testCopy');\n    }, []);\n    return (\n        <div className=\"makerContainer\">\n            \n            <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onLocal={n => { console.log(\"test loaded\") }} onChange={n => getTestfromDB(n)} />\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <div className='navContainer' >\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Test editing panel</strong></h3>\n\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128187;</button>\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload to web &#128228;</button>\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update on web &#128257;</button>}\n\n            </div>\n            <label className='headerStyle' >Enter test Name (keep it under 30 symbols)\n                    <input id=\"testName\" onChange={e => setTestName(e.target.value)} />\n            </label>\n            <br />\n            <label className='headerStyle' >Enter test description\n                    <textarea id=\"testDescription\" onChange={e => setTestDescription(e.target.value)} />\n            </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <select id=\"visibility\" onChange={e => setVisibility(e.target.value)} >\n                            <option value=\"Private\">Private</option>\n                            <option value=\"Public\">Public</option>\n                        </select>\n                        Is this test Private or Public?\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <select id=\"editability\" onChange={e => setEditability(e.target.value)}>\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                        Would you allow others to edit content of test?\n                    </label>\n                </section>\n            </div>\n            {selectedOption &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red', marginLeft: '1.5%' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\n            }\n            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: \"1% 0 0 1.5%\" }} onClick={e => handleNewCategory(e)}>Add New Category</button>\n            <div className=\"panel2 containerGrid\">\n                <section className='headerStyle' >Enter time (if there are no time limit enter 0 0 0):</section>\n                <section className='panel1 headerStyle' style={{ float: 'left' }}>\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '5ch' }} onChange={e => setTestHH(e.target.value)} /> hh\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestMM(e.target.value)} /> mm\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestSS(e.target.value)} /> ss\n            </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />\n                        Add/change BACKGROUND to your test\n                </label>\n                    <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '98%' }}>\n\n                        <label className='headerStyle'>Enter test background image link or upload your image from computer\n                        <input id=\"background\" onChange={e => setTestBackground(e.target.value)} />\n                        </label>\n                        <Cloudinary getImgUrl={getImgUrl} />\n                    </div>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\n                    Add/change background GRADIENT to your test\n               </label>\n                    <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '98%' }}>\n                        <label className='headerStyle' >Enter test background gradient CSS here\n                        <textarea id=\"backgroundGradient\" onChange={e => setTestGradient(e.target.value)} />\n                        </label>\n                        <GetGradient reloadNeeded={saveReload} onChange={n => getGradientCSS(n)} />\n                    </div>\n                </section>\n            </div>\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\n            {show &&\n                <div className=\"modalContainer\" style={{top: window.pageYOffset}}>\n                    <div className=\"closeTag\" style={{position:'absolute',top:'2%', right:'2%'}} onClick={(e) => setShow(false)}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} status={\"create\"} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\n                </div>\n            }\n            {testArray[displayQ] &&\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\n            }\n          <div style={{width:'100%', marginLeft:\"10px\", pointerEvents:\"cursor\"}}>&copy; 2021 <Link to=\"/about\">Sergey Bolotnikov</Link> </div>  \n        </div >\n    )\n}\nexport default ToRenderEverything;\n","import React from \"react\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.scss';\n// Components\nimport Signup from \"./components/Signup\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport About from \"./components/About\"\nimport Logout from \"./components/Logout\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport DirectTestPage from \"./components/DirectTestPage\"\nimport Nav from \"./components/Nav\"\n//Pages\nimport testPage from './pages/testPage';\nimport makeTest from './pages/makeTest';\n\nfunction App() {\n\n  return (\n    <Router>\n      <AuthProvider>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={testPage} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\n          </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
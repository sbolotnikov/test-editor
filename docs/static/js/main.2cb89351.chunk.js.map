{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Footer.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/About.js","components/Logout.js","components/RedirectMain.js","components/PrivateRoute.js","components/ForgotPassword.js","components/Cloudinary.js","components/UpdateProfile.js","components/alertMenu.js","components/testNav/index.js","components/LayoutBox/index.js","components/ZoomImage.js","components/LayoutSimple/index.js","components/QuestionDisplay/index.js","components/getResults.js","components/SharePost.js","components/ResultsDisplay/index.js","components/TestRun/index.js","components/DirectTestPage.js","components/Nav.js","components/ChooseCategory/index.js","components/TestPopupInfo.js","components/getTests.js","pages/testPage/index.js","components/GetText.js","components/GetAnswers.js","components/GetQuestion.js","components/testCreateNav/index.js","components/getGradient.js","components/CustomSelect.js","pages/makeTest/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateUser","name","url","console","log","updateProfile","displayName","photoURL","then","catch","error","Provider","Footer","id","style","position","left","bottom","width","marginLeft","pointerEvents","to","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","toRoot","setToRoot","e","a","preventDefault","current","length","className","maxWidth","src","alt","onSubmit","margin","type","ref","required","disabled","Dashboard","testsCreated","setTestsCreated","testsResultsOnRec","setTestsResultsOnRec","testsAverageScore","setTestsAverageScore","userRating","setUserRating","db","firestore","window","location","assign","collection","where","uid","get","result","docs","map","doc","data","resArray","averageRes","i","parseFloat","score","toFixed","rate","marginTop","padding","onClick","height","float","maxHeight","textAlign","textDecoration","border","backgroundColor","borderRadius","whiteSpace","fontStyle","color","Login","About","link","setLink","playState","setPlayState","visible","setVisible","playing","controls","vis","sub","item","j","cursor","textShadow","fontSize","subItem","Logout","logoutHandle","RedirectMain","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","Cloudinary","imageSelected","setImageSelected","display","alignItems","justifyContent","onChange","event","target","files","formData","FormData","append","Axios","post","response","parentElement","previousSibling","getImgUrl","pictureUpload","UpdateProfile","userNameRef","userURL","setUserURL","promises","push","Promise","all","finally","defaultValue","placeholder","objectFit","document","querySelector","childNodes","variant","AlertMenu","button1Color","setbutton1Color","button2Color","setbutton2Color","AllowScroll","onscroll","Object","values","keys","indexOf","styling","color1","color2","x","scrollX","y","scrollY","scrollTo","StopScroll","top","pageYOffset","zIndex","variantHead","heading","text","inputField","marginBottom","inputValue","onReturn","button1","button2","TestNav","timerInterval","stringTime","hours","minutes","seconds","displayTime","setDisplayTime","revealAlert","setRevealAlert","alertStyle","setAlertStyle","secondsLeft","h","m","s","stopTest","clearInterval","classList","add","querySelectorAll","forEach","userItem","onExit","questionNumberSet","n","questionNow","Number","isInteger","parseInt","qNumber","navButton","remove","decision1","setInterval","background","min","max","toString","right","backgroundImage","borderWidth","LayoutBox","answers","checked","checkedMarks","opacity","mode","minHeight","minWidth","lineHeight","question","alignContent","flexWrap","overflow","answerOption","choice","checkingMulti","img","backgroundRepeat","backgroundSize","ZoomImage","visibility","closeModal","LayoutSimple","revealModal","setRevealModal","info","innerWidth","alignSelf","correct","QuestionDisplay","backgroundVal","setBackgroundVal","backgroundValue","gradientValue","gradient","comma","status","layout","ch","GetResults","testRecords","setTestsRecords","resultsData","testId","querySnapshot","sort","b","time","fetchData","test","SharePost","socialMediaButton","FacebookShareButton","quote","title","hashtag","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","separator","WhatsappIcon","EmailShareButton","subject","body","media","image","EmailIcon","ResultsDisplay","testeeName","setTesteeName","testeeId","handleDont","timeInSeconds","t","split","res","userId","testName","description","TestRun","quizDuration","main","testBackground","quizMain","choiceSet","displayQ","setDisplayQ","resultTime","setResultTime","choices","setChoices","results","setResults","rating","setRating","testGenerated","setTestGenerated","randomizer","arr","testArray","answerCount","positionN","Math","floor","random","splice","randomChoice","handleQuizEnd","correctArr","arrSmall","correctAnswers","JSON","stringify","answersSet","rights","concat","wrongs","positions","local","q","handleChangeQuestion","localChoices","handleChoices","DirectTestPage","setTest","useParams","Nav","isNavCollapsed","setIsNavCollapsed","imgDisplay","setImgDisplay","handleNavCollapse","imgLink","ChooseCategory","backgroundPosition","TestPopupInfo","author","questionsTotal","onRes","GetTests","testRecordsDisplay","setTestsRecordsDisplay","revealInfo","setRevealInfo","deleteRecId","setDeleteRecId","selectedOption","setSelectedOption","categories","setCategories","categoriesLayout","setCategoriesLayout","setChecked","testFromDB","setTestFromDB","checkEditLocalTestVisible","setCheckEditLocalTestVisible","testInfo","setTestInfo","arrTemp","forPage","filter","editability","nameA","toUpperCase","nameB","fetchCategories","label","option","recordSet","chosenRec","tempArr","findIndex","c","index","getChoosenTests","flexDirection","recId","getAttribute","elementPos","objFound","authorName","handleDelete","positionY","clientY","handleHover","handleClick","evt","f","r","FileReader","onload","parse","onLocal","readAsText","alert","readSingleFile","delete","reloadNeeded","ToRenderEverything","testLoad","setTestLoad","localTest","setLocalTest","l","getTestfromDB","GetText","answer","answerText","setAnswerText","setImgLink","checkBox","setCheckBox","sendBack","num","cor","borderColor","changeInput","changeImage","GetAnswers","setAnswers","onDelete","onCopy","handleCopy","onNew","localArr","answerRenew","handleChangeText","pasteItem","localStorage","getItem","handlePasteText","emptyNew","handleNewText","GetQuestion","questionObj","setRights","setWrongs","handleReturnData","corr","handleCopyData","setItem","newRecord","delRecord","TestCreateNav","qArr","setqArr","moveVis","setMoveVis","getElementById","onDel","k","deleteRec","onPaste","onShow","onMove","GetGradient","gradients","setGradients","newGradient","setNewGradient","newGradientName","setNewGradientName","addNewGradientVisible","setAddNewGradientVisible","fetchGradients","paddingLeft","href","rel","grad","gr","customStyles","menu","provided","state","selectProps","borderBottom","menuColor","isSelected","control","styles","singleValue","isDisabled","transition","CustomSelect","options","isMulti","closeMenuOnSelect","isSearchable","demoArr","emptyQ","defOptionArray","setTestName","testDescription","setTestDescription","authorId","testAuthor","setTestAuthor","setVisibility","setEditability","setTestBackground","testGradient","setTestGradient","testHH","setTestHH","testMM","setTestMM","testSS","setTestSS","show","setShow","setTestArray","addTestGradientVisible","setAddTestGradientVisible","addBackgroundVisible","setAddBackgroundVisible","reload","handleShow","slice","newTest","removeItem","set","newItem","element","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","download","upload","getGradientCSS","oldArray","record1","handleMove","handleUpdateQuestion","questCopy","handleInsertQuestion","getOwnPropertyNames","mainImg","layout1","positionsCount","correctCount","handleReturnQuestion","App","exact","path","testPage","makeTest","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2cb89351.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\nimport \"firebase/firestore\";\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  // setting up context to deal with firebase user collection database\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function updateUser(name, url) {\r\n    console.log(\"setting profile \" + name + url);\r\n    console.log(currentUser)\r\n    return currentUser.updateProfile({\r\n      displayName: name,\r\n      photoURL: url\r\n    }).then(function () {\r\n      // Update successful.\r\n    }).catch(function (error) {\r\n      console.log(\"error on Profile update\")// An error happened.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Footer() {\r\n    return (\r\n        <div id=\"footer\" style={{ position: 'absolute', left: 0, bottom: 0, width: '100%', marginLeft: \"10px\", pointerEvents: \"cursor\" }}\r\n        >\r\n            &copy; 2021 <Link to=\"/about\">Sergey Bolotnikov</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function Signup() {\r\n\r\n  // component to create new user using AuthContext\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const {currentUser, signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  if (currentUser) { return <Redirect to=\"/redirect\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    if (passwordRef.current.value.length < 6) {\r\n      return setError(\"Passwords should be at least 6 symbols long\")\r\n    }\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      signup(emailRef.current.value, passwordRef.current.value);\r\n      setToRoot(true);\r\n\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n\r\n          <h2 className=\"header1\">Sign Up\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n                    <input id=\"password-confirm\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordConfirmRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Already have an account? <Link className=\"links\" to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport firebase from \"../firebase\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nfunction Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser } = useAuth();\r\n  const [testsCreated, setTestsCreated] = useState(0);\r\n  const [testsResultsOnRec, setTestsResultsOnRec] = useState(0);\r\n  const [testsAverageScore, setTestsAverageScore] = useState(0);\r\n  const [userRating, setUserRating] = useState('BeginnerQuizer');\r\n  const db = firebase.firestore();\r\n\r\n\r\n  async function handleUpdate() {\r\n    setError(\"\")\r\n    window.location.assign(process.env.PUBLIC_URL + '/#/update-profile')\r\n  }\r\n  function fetchTestsCreatedData() {\r\n    // getting amount of tests created by user\r\n    db.collection(\"tests\").where(\"main.author\", \"==\", currentUser.uid).get()\r\n      .then(result => { setTestsCreated(result.docs.map(doc => ({ ...doc.data() })).length) })\r\n      .catch(e => { console.log('fail to get tests for user') })\r\n\r\n  }\r\n  function fetchTestsResultsData() {\r\n    // getting results of the user tests taken and calculating amount of tests and Average and based on score it gives status to user\r\n    db.collection(\"results\").where(\"userId\", \"==\", currentUser.uid).get()\r\n      .then(result => {\r\n        let resArray = result.docs.map(doc => ({ ...doc.data() }));\r\n        let averageRes = 0;\r\n        console.log(resArray)\r\n        for (let i = 0; i < resArray.length; i++) {\r\n          averageRes += parseFloat(resArray[i].result)\r\n        }\r\n        let score = 0;\r\n        if (resArray.length > 0) score = (averageRes / resArray.length).toFixed(3)\r\n        setTestsAverageScore(score);\r\n        setTestsResultsOnRec(resArray.length)\r\n        let rate = '';\r\n        if (score <= 100) rate = 'DiamondQuizer';\r\n        if (score <= 90) rate = 'GoldQuizer';\r\n        if (score <= 80) rate = 'SilverQuizer';\r\n        if (score <= 70) rate = 'BronzeQuizer';\r\n        if (score <= 60) rate = 'BeginnerQuizer';\r\n        setUserRating(rate)\r\n      }).catch(e => { console.log('fail to get user results') })\r\n\r\n  }\r\n  useEffect(() => {\r\n    fetchTestsCreatedData();\r\n    fetchTestsResultsData();\r\n  }, []);\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '6%' }}>\r\n        <div className='registeCard' style={{ padding: '.75em' }}>\r\n          <div className=\"closeTag\" onClick={(e) => { window.location.assign(process.env.PUBLIC_URL + '/#/') }}> <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" style={{ height: '1%' }} />\r\n            <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(2vw,20px)', height: 'max(2vw,20px)', float: 'right' }} />\r\n          </div>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <img style={{ maxWidth: '60%', maxHeight: '35vh', margin: '3% 15%' }} src={currentUser.photoURL > \"\" ? currentUser.photoURL : process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"} alt=\"profile pic\" />\r\n          <h2 className=\"divStyle\" style={{ textAlign: 'center', width: '100%', maxWidth: '23ch', margin: 'auto' }}> <strong>@</strong>{currentUser.displayName}</h2>\r\n          <h6 className=\"divStyle\" style={{ textAlign: 'center', textDecoration: 'underline' }} >   {currentUser.email} </h6>\r\n        </div>\r\n        <table style={{ width: '97%', border: \"1px solid white\", backgroundColor: 'white', borderRadius: '10px', margin: \"3% auto\" }} >\r\n          <tbody >\r\n            <tr style={{ backgroundColor: 'white' }}>\r\n              <td ><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz created:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsCreated}</span></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'white' }}>\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Quiz results on file:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsResultsOnRec}</span></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'white' }}>\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Average Quiz rated:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{testsAverageScore}%</span></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'transparent' }}>\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\", color: 'transparent' }}> quiz</div></td>\r\n            </tr>\r\n            <tr style={{ backgroundColor: 'lightgrey' }} >\r\n              <td><div style={{ whiteSpace: 'wrap', textAlign: 'center', width: \"100%\" }}>Your rate:</div></td>\r\n              <td> <span style={{ fontStyle: 'oblique', color: '#554FA7' }}>{userRating}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} onClick={handleUpdate}>\r\n          Update Profile\r\n            </button>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\nexport default Dashboard","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function Login() {\r\n  // login page using the AuthContext trying to login and then redirect to root\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const {currentUser, login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  if (toRoot === true) { return <Redirect to=\"/\" /> }\r\n  if (currentUser) { return <Redirect to=\"/redirect\" /> }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      setToRoot(true);\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n      <div className='mainContainer'>\r\n        <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n          <div className='registeCard'>\r\n            <h2 className=\"header1\">Log In\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /> </h2>\r\n            {error && <label className='alertStyle'>{error}</label>}\r\n            <form onSubmit={handleSubmit}>\r\n              <label className='headerStyle'  >Email\r\n                    <input id=\"email\" style={{ width: '100%', margin: '4% auto' }} type=\"email\" ref={emailRef} required />\r\n              </label>\r\n              <label className='headerStyle'  >Password\r\n                    <input id=\"password\" style={{ width: '100%', margin: '4% auto' }} type=\"password\" ref={passwordRef} required />\r\n              </label>\r\n              <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '4% auto' }} type=\"submit\">\r\n                Log In\r\n            </button>\r\n            </form>\r\n            <div className=\"divStyle\">\r\n              <Link className=\"links\" to=\"/forgot-password\">Forgot Password?</Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"divStyle\">\r\n            Need an account? <Link className=\"links\" to=\"/signup\">Sign Up</Link>\r\n          </div>\r\n          <div className=\"divStyle\">\r\n            Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n  )\r\n}","import React, { useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ReactPlayer from 'react-player/lazy'\r\nimport Footer from \"./Footer\";\r\nimport \"./Login.scss\";\r\nexport default function About() {\r\n  var selectOptions = [\r\n    {\r\n      name: \"Test Taking\", value: \"0m13s\", vis:false,\r\n      sub: [\r\n        { name: \"Selecting Quiz to Take\", value: \"0m15s\" },\r\n        { name: \"Log In, Sign Up, Demo Test\", value: \"0m39s\" },\r\n        { name: \"Get Test Information\", value: \"0m59s\" },\r\n        { name: \"Start Test\", value: \"1m19s\" },\r\n        { name: \"Test Navigation\", value: \"1m33s\" },\r\n        { name: \"Ending Test\", value: \"2m14s\" },\r\n        { name: \"Results Panel: Saving & Sharing results\", value: \"2m35s\" }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Dashboard\", value: \"4m11s\", vis:false,\r\n      sub: [\r\n        { name: \"Update Profile\", value: \"4m34s\" },\r\n        { name: \"Update Avatar\", value: \"4m50s\" }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Managing Test\", value: \"5m48s\", vis:false,\r\n      sub: [\r\n        { name: \"Part 1: Choose Test to Edit\", value: \"6m07s\" },\r\n        { name: \"Load Test from HardDrive\", value: \"6m29s\" },\r\n        { name: \"Part 2: Test properties\", value: \"7m00s\" },\r\n        { name: \"Create category for your test\", value: \"7m37s\" },\r\n        { name: \"Setting Background\", value: \"8m05s\" },\r\n        { name: \"Setting background Gradient\", value: \"8m26s\" },\r\n        { name: \"Upload to Web button\", value: \"8m56s\" },\r\n        { name: \"Update on Web, Download, New buttons\", value: \"9m24s\" },\r\n      ]\r\n    },\r\n    {\r\n      name: \"Question Editing Tool\", value: \"9m58s\",vis:false, \r\n      sub: [\r\n        { name: \"Question design Form\", value: \"10m11s\" },\r\n        { name: \"Navigation\", value: \"10m53s\" },\r\n        { name: \"Different Layouts\", value: \"11m05s\" },\r\n        { name: \"Add, Delete Question\", value: \"11m42s\" },\r\n        { name: \"Move Question\", value: \"11m56s\" },\r\n        { name: \"Copy/Paste question\", value: \"12m14s\" },\r\n        { name: \"Copy/Paste answering options\", value: \"13m01s\" },\r\n        { name: \"Add, Erase answering options\", value: \"13m24s\" },\r\n        { name: \"Preview Question\", value: \"13m30s\" },\r\n      ]\r\n    },\r\n  ]\r\n  const [link, setLink] = useState('');\r\n  const [playState, setPlayState] = useState(false);\r\n  const [visible, setVisible] = useState([false, false, false, false]);\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '100%', maxWidth: \"800px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">About\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /> </h2>\r\n          <ReactPlayer url={`https://youtu.be/x116B9S0tX4${link}`} playing={playState} controls width=\"100%\" />\r\n          {selectOptions.map((item, j) => {\r\n            return (\r\n              <div style={{ margin: '5px' }} key={\"option\" + j} >\r\n                <div key={\"option_name\" + j} style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius: '10px', textShadow: \"4px 4px 16px white\", backgroundColor: '#554FA7' }}\r\n                  value={item.value} onClick={e => { setLink(`#t=${item.value}`); setPlayState(true) }} >{item.name}\r\n                   <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={\"right_eraseBtn_\" + j} value={j} onClick={e =>{let vis=visible; vis[j]=!vis[j]; console.log(vis); setVisible(vis)}}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\r\n                </div>\r\n                {visible[j] && item.sub.map((subItem, i) => {\r\n                  return (\r\n                    <div key={\"subOption_name\" + i} style={{ cursor: \"pointer\"}}\r\n                      value={subItem.value} onClick={e => { setLink(`#t=${subItem.value}`); setPlayState(true) }} >{subItem.name}\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n                }\r\n              </div>\r\n            )\r\n          }\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nfunction Logout() {\r\n//  Logout component\r\n    const { logout } = useAuth();\r\n    async function logoutHandle() {\r\n        try {\r\n            await logout();\r\n        } catch {\r\n            console.log(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        logoutHandle();\r\n\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction RedirectMain() {\r\n// redirect to root\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    );\r\n}\r\n\r\nexport default RedirectMain;","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n// if no user then it redirect to log in component\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Login.scss\";\r\nexport default function ForgotPassword() {\r\n  // page handles forgot password case\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\" }}>\r\n        <div className='registeCard'>\r\n          <h2 className=\"header1\">Password Reset\r\n            <img src={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} alt=\"logo simple\" className='logo' /></h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          {message &&<label className='successStyle'>{message}</label> }\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >Email\r\n                    <input id=\"email\" type=\"email\" ref={emailRef} required />\r\n            </label>\r\n            <button disabled={loading} className=\"btnNav\" type=\"submit\">\r\n              Reset Password\r\n            </button>\r\n          </form>\r\n          <div className=\"divStyle\">\r\n            <Link to=\"/login\" className=\"links\" >Login</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          Need an account? <Link to=\"/signup\"className=\"links\" >Sign Up</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Axios from 'axios'\r\n// import {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\r\n\r\n\r\nfunction Cloudinary(props) {\r\n    // handles cloudinary upload and providing the link for a parent component\r\n    const [imageSelected, setImageSelected]=useState('');\r\n    const pictureUpload=(event)=> {\r\n       const formData= new FormData();\r\n       formData.append('file', imageSelected);\r\n       formData.append('upload_preset',process.env.REACT_APP_CLOUD_PRESET);\r\n       Axios.post(\r\n           \"https://api.cloudinary.com/v1_1/\"+process.env.REACT_APP_CLOUDNAME+\"/image/upload\",\r\n           formData\r\n       )\r\n       .then(response=>{\r\n        setImageSelected(\"\");\r\n        console.log(response.data.url)\r\n        console.log(event.target.parentElement.previousSibling.value)\r\n        event.target.parentElement.previousSibling.value=\"\"; \r\n        props.getImgUrl(response.data.url);\r\n        })\r\n        .catch(e=>{console.log('Fail to upload image')})\r\n    }\r\n\r\n    return(\r\n        <div style={{display:'flex', alignItems:'center', justifyContent:'start', marginLeft:'2%', maxWidth:'600px'}}>\r\n            <input type='file' style={{width:'48%'}} onChange={(event)=>setImageSelected(event.target.files[0])}/>\r\n            <div className=\"cloudinary-button testNav\" onClick={(e)=>{pictureUpload(e)}}>Upload Image</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cloudinary;","import React, { useRef, useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Cloudinary from './Cloudinary';\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function UpdateProfile() {\r\n  // updating component\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const userNameRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail, updateUser } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [toRoot, setToRoot] = useState(false);\r\n  const [userURL, setUserURL] = useState(currentUser.photoURL);\r\n  const getImgUrl = (url) => {\r\n    // update URL of the profile picture\r\n    document.querySelector(\"#userURL\").childNodes[1].value = url;\r\n    setUserURL (url)\r\n    console.log(userURL)\r\n  }\r\n  function handleSubmit(e) {\r\n    // submitting profile updated information\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n    if ((userNameRef.current.value !== currentUser.displayName) || (userURL !== currentUser.photoURL)) {\r\n      promises.push(updateUser(userNameRef.current.value, userURL))\r\n    }\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setToRoot(true);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  if (toRoot === true) { return <Redirect to=\"/dashboard\" /> }\r\n  return (\r\n    <div className='mainContainer'>\r\n      <div style={{ width: '98%', maxWidth: \"400px\", marginTop: '5%' }}>\r\n        <div className='registeCard' >\r\n          <h2 className=\"header1\">Update Profile\r\n          {(userURL!=null) && <img src={userURL} alt=\"logo simple\" className='logo' />}</h2>\r\n          {error && <label className='alertStyle'>{error}</label>}\r\n          <form onSubmit={handleSubmit}>\r\n            <label className='headerStyle'  >User's Name (keep it shorter then 20 symbols please)\r\n                <input id=\"userName\" type=\"text\" ref={userNameRef} defaultValue={currentUser.displayName} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle' id=\"userURL\" >User's picture link\r\n                <input type=\"text\" onChange={(e)=>{setUserURL(e.target.value)}} defaultValue={currentUser.photoURL} />\r\n              <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\r\n            </label>\r\n            <label className='headerStyle'  >Email\r\n              <input id=\"email\" type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n            </label>\r\n            <label className='headerStyle'  >Password\r\n              <input id=\"password\" type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <label className='headerStyle'  >Password Confirmation\r\n              <input id=\"password-confirm\" type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n            </label>\r\n            <button disabled={loading} className=\"testNav\" style={{ width: '100%', margin: '2% auto' }} type=\"submit\">\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"divStyle\">\r\n          <Link to=\"/dashboard\" className=\"links\" >Cancel</Link>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","import React,{ useEffect, useState } from \"react\"\r\n// color schemas for different occasions \r\nvar variant = {\r\n  'danger': {\r\n    'color': '#721c24',\r\n    'backgroundColor': '#f8d7da',\r\n    'borderColor': '#f5c6cb'\r\n    \r\n  },\r\n  'success': {\r\n    'color': '#155724',\r\n    'backgroundColor': '#d4edda',\r\n    'borderColor': '#c3e6cb'\r\n   },\r\n   'secondary': {\r\n    'color': '#383d41',\r\n    'backgroundColor': '#e2e3e5',\r\n    'borderColor': '#d6d8db'\r\n  },\r\n  'warning': {\r\n    'color': '#856404',\r\n    'backgroundColor': '#fff3cd',\r\n    'borderColor': '#ffeeba'\r\n  },\r\n  'info': {\r\n    'color': '#0c5460',\r\n    'backgroundColor': '#d1ecf1',\r\n    'borderColor': '#bee5eb',\r\n  },\r\n  '': {},\r\n}\r\nexport default function AlertMenu(props) {\r\n  // main popup alert component\r\n  const [button1Color, setbutton1Color]=useState('');\r\n  const [button2Color, setbutton2Color]=useState('');\r\n  function StopScroll(){\r\n    // prevent scrolling\r\n    var x=window.scrollX;\r\n    var y=window.scrollY;\r\n    window.onscroll=function(){window.scrollTo(x, y);};\r\n  console.log(x, y)\r\n       \r\n}\r\nfunction AllowScroll(){\r\n  // when done release scroll\r\n  window.onscroll=function(){};\r\n}\r\n  useEffect(() => {\r\n    // setup buttons style on load \r\n    setbutton1Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color1)].color);\r\n    setbutton2Color(Object.values(variant)[Object.keys(variant).indexOf(props.styling.color2)].color);\r\n    StopScroll();\r\n}, []);\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh',position:'absolute',top: window.pageYOffset,left:0, display:'flex', justifyContent:'center', alignItems:'center',zIndex:'1700', backgroundColor:'rgba(105,105,105, .7)' }} >\r\n      <div className='alertContainer'>\r\n        <label className='alertItemStyle' style={Object.values(variant)[Object.keys(variant).indexOf(props.styling.variantHead)]}>{props.styling.heading}</label>\r\n        <h5 className=\"alertItemStyle\">{props.styling.text}</h5>\r\n        {props.styling.inputField && <input id=\"inputField\" style={{ width: \"100%\", marginBottom: \"10px\" }} defaultValue={props.inputValue} />}\r\n        {(props.styling.color1!==\"\") && <button className='alertItemStyle' style={{backgroundColor:button1Color, color:'white'}} onClick={e => {AllowScroll(); props.onReturn(props.styling.button1, (props.styling.inputField ? document.querySelector(\"#inputField\").value : null)); }}>\r\n          {props.styling.button1}\r\n        </button>}\r\n        {(props.styling.color2!==\"\") &&<button className=\"alertItemStyle\" style={{backgroundColor:button2Color, color:'white'}} onClick={e => {AllowScroll(); props.onReturn(props.styling.button2) }}>\r\n          {props.styling.button2}\r\n        </button>}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { Fragment, useState } from 'react';\nimport AlertMenu from '../alertMenu';\nfunction TestNav(props) {\n    // navigational component for running through questions of the specific test \n    var timerInterval\n    const [displayTime, setDisplayTime] = useState(stringTime(props.hours, props.minutes, props.seconds));\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    let secondsLeft = props.hours * 3600 + props.minutes * 60 + props.seconds;\n    const onReturn = (decision1) => {\n        // if Finish test button clicked in Alert window it proceeds to end of the test function\n        setRevealAlert(false);\n        if (decision1 === \"Finish\") { \n           stopTest();\n        }\n    }\n    function StopScroll(){\n        // prevent scrolling on page\n        var x=window.scrollX;\n        var y=window.scrollY;\n        window.onscroll=function(){window.scrollTo(x, y);};\n      console.log(x, y)\n           \n    }\n    function timerDraw(event) {\n        // starting the , counting down seconds, and handling run-out-of-time exit  \n        let seconds = props.seconds;\n        let minutes = props.minutes;\n        let hours = props.hours;\n        StopScroll();\n        questionNumberSet('0');\n        event.preventDefault();\n        if ((seconds !== 0) || (minutes !== 0) || (hours !== 0)) {\n            timerInterval = setInterval(function () {\n                secondsLeft--;\n                if (seconds === 0) {\n                    seconds = 59;\n                }\n                else seconds--;\n                if (seconds === 59) {\n                    if (minutes === 0) {\n                        minutes = 59;\n                        hours--;\n                    } else minutes--;\n                }\n                setDisplayTime(stringTime(hours, minutes, seconds));\n                if ((secondsLeft === 0)) {\n                    clearInterval(timerInterval);\n                    document.querySelector(\".testNav\").classList.add('invisible');\n                    props.onExit(\"00:00:00\");\n                }\n\n            }, 1000);\n        }\n    };\n    function stringTime(h, m, s) {\n        // turning time to string to display\n        return `${h < 10 ? '0' + h : h}:${m < 10 ? '0' + m : m}:${s < 10 ? '0' + s : s}`\n    }\n    function stopTest() {\n// handles test finish: timer finish, hiding buttons of the navigation sending time left to the parent component(props.onExit)\n        clearInterval(timerInterval);\n        window.onscroll=function(){};\n        console.log('end')\n        document.querySelector(\".testNav\").classList.add('invisible');\n        let navButton = document.querySelectorAll(\".testNav\");\n        navButton.forEach(function (userItem) {\n            userItem.classList.add('invisible');\n        });\n        props.onExit(displayTime);\n    }\n    function questionNumberSet(n) {\n        // handles navigation through test next, previous shows specific question\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else {\n                    questionNow.value = 1;\n                    // if last question is reached it asked if you want to finish the test through the displaying specific alertMenu component \n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Would you like to finish the test?`,\n                        color1: \"danger\",\n                        button1: \"Finish\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                }\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                navButton = document.querySelectorAll(\".testNavLight\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    return (\n        <Fragment>\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <button className=\"testNav\" id=\"startNav\" style={{ position: 'absolute', top: '44vh', left: \"43vw\", zIndex: '200' }}\n                onClick={timerDraw}>Start</button>\n            <button className=\"testNav invisible\" style={{ position: \"absolute\", top: '10vh', left: 0,textShadow:\"1px 1px black\", background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <label className=\"testNav invisible\" style={{position: \"absolute\",top:'0',left:'0', margin:'1.25vh 1vw', fontSize: 'calc(10px + 1vw)', zIndex: 1500 }} >\n                <input className=\"testNavLight invisible\" style={{ width: '3ch', fontSize: 'calc(10px + 1vw)' }} type=\"number\" id=\"questionPage\" min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n                of {props.qNumber}</label>\n            <button className=\"testNav invisible \" style={{ position: \"absolute\", top: '10vh', right: 0,textShadow:\"1px 1px black\", background: \"transparent\", zIndex: 1500 }}\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n\n            <label className=\"testNav invisible\" style={{ position: \"absolute\", background: \"transparent\", top: 0, left: '38vw', width: '8ch', zIndex: 1500, textShadow:\"1px 1px black\" }}>{displayTime}</label> \n            <button className=\"testNav invisible\" id=\"finishBtn\"  style={{ position: \"absolute\", top: 0, right: 0,marginTop:'1.25vh', backgroundImage:`url(${process.env.PUBLIC_URL + \"/icons/finish.svg\"})`,width: \"9vh\", height: \"3vh\", borderWidth: '0px',borderRadius:'5px', zIndex: 1500 }}\n                onClick={stopTest}></button>\n\n        </Fragment>\n    );\n}\nexport default TestNav;","import React, { Fragment, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport \"./style.css\";\nconst LayoutBox = props => {\n// component creates layout called Box and display current question in style of this layout\n\n    useEffect(() => {\n        // drawing the selected options of anwers inputed by user\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n    },[props.answers]);\n    function checkingMulti(e) {\n        // on Change sending the new result back to parent\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n            <div id='questionContainerBox' style={{ opacity: props.vis}}>\n                <section className=\"questionSection\">\n                    {/* using the Textfit to make entered text fit into the provided space */}\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color:'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin:'auto',\n                            textAlign:\"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n              \n                </section>\n                <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-between',alignContent:'center', flexWrap: 'wrap', width: '99%', overflow:'visible' }}>\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelBox\" + j} style={{width:'49%',minHeight:'22%', maxHeight: '200px', maxWidth:'200px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputBox\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '100% 100%' }}>\n                                    <div className=\"tickmark\" key={\"divBox\" + j}> </div>\n                                    <div className=\"name\" key={\"div2Box\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n            </div>\n        </Fragment>\n    );\n}\nexport default LayoutBox;","import React from \"react\"\r\n\r\nexport default function ZoomImage(props) {\r\n// for simple layout it allows to zoom in to picture in the question displayed\r\n  return (\r\n\r\n    <div style={{ width: '100vw', height: '100vh', position: 'absolute', top: window.pageYOffset, left: 0, display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: '1900', backgroundColor: 'rgba(105,105,105, .7)' }} >\r\n      <div style={{ margin: 'auto', maxWidth: '600px', border: '1px solid gray', borderRadius: '.25rem', padding: '2%', display:'flex' }}>    \r\n          <img src={props.img} style={{ width: '100%', visibility: 'visible' }} alt='zooming in' />\r\n          <div className=\"closeTag\" style={{ position: 'relative', top: '2%', right: '4%', visibility: 'visible' }} onClick={(e) =>{ props.closeModal(true)}}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\nimport Textfit from 'react-textfit';\nimport ZoomImage from '../ZoomImage';\nimport \"./style.css\";\nfunction LayoutSimple(props) {\n    // component creates layout called Simple and display current question in style of this layout\n    const [revealModal, setRevealModal] = useState(false);\n    useEffect(() => {\n        // drawing the selected options of anwers inputed by user\n        for (let i = 0; i < props.answers.length; i++) {\n            document.querySelector(\"#answer_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\n        }\n        \n    }, [props.answers]);\n    function checkingMulti(e) {\n        // on Change sending the new result back to parent\n        if (props.info.correct === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#answer_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <div id='questionContainerSimple' style={{ opacity: props.vis}}>\n\n\n\n            {revealModal && <ZoomImage img={props.info.img} closeModal={(e)=>{setRevealModal(false)}} />}\n            <section className=\"questionSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'hidden' }}>\n                <div style={{width:'100%',display: 'flex',justifyContent:'center', alignItems: 'center', height: window.innerWidth < 700 ? '30%' : '70%' }}>\n                    <img src={props.info.img} style={{ height:'100%', alignSelf:'center'}} alt={props.info.img} onClick={(e)=>{setRevealModal(true)}} />\n                </div>\n                <div style={{width:'100%', height: window.innerWidth < 700 ? '70%' : '30%' }}>\n                    <Textfit max={256} mode='multi'\n                        min={12}\n                        style={{\n                            color: 'white',\n                            minHeight: \"90%\",\n                            maxHeight: \"90%\",\n                            minWidth: \"90%\",\n                            maxWidth: \"90%\",\n                            lineHeight: 1,\n                            margin: 'auto',\n                            textAlign: \"center\",\n                            textShadow: '1px 1px 2px black'\n                        }}>{props.question}</Textfit>\n                </div>\n            </section>\n            <section className=\"answerSection\" style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', flexWrap: 'wrap', width: '98%', overflow: 'visible' }}>\n                {props.answers.map((answerOption, j) => {\n                    return (\n                        <label className=\"option_simple\" key={\"labelSimple\" + j} style={{ height: `${93 / props.answers.length}%` }}>\n                            <input type=\"checkbox\" className=\"checkOut\" key={\"inputSimple\" + j} id={\"answer_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                            <div className=\"option_inner\" key={\"divSimple\" + j}>\n                                <Textfit className=\"name\" key={\"spanSimple\" + j} max={256} mode='multi'\n                                    min={10}\n                                    style={{\n                                        minHeight: \"90%\",\n                                        maxHeight: \"90%\",\n                                        minWidth: \"90%\",\n                                        maxWidth: \"90%\",\n                                        lineHeight: 1,\n                                        textAlign: \"center\",\n                                        textShadow: '1px 1px 2px black'\n                                    }}>{answerOption.text}</Textfit>\n                            </div>\n                        </label>\n                    )\n                })}\n            </section>\n        </div>\n    );\n}\nexport default LayoutSimple;","import React,{ useEffect, useState } from 'react';\nimport LayoutBox from '../../components/LayoutBox';\nimport LayoutSimple from '../../components/LayoutSimple';\nconst QuestionDisplay = props => {\n    const [backgroundVal,setBackgroundVal]= useState('')\n    useEffect(() => {\n        // setting up background\n        let backgroundValue= (props.background.length>0)? `url(${props.background})`:''\n        let gradientValue= (props.gradient.length>0)? ` ${props.gradient}`:'';\n        let comma= ((props.background.length>0) && (props.gradient.length>0))?',':''\n        setBackgroundVal(gradientValue+comma+backgroundValue);\n    }, []);\n    return (\n        // displaying specific layout based on question \n            <div id='questionDisplayContainer' className={`${(props.status==='test') ? \"noScroll\" : \"\"}`} style={{backgroundImage:backgroundVal}}>\n                {props.info.layout === 'box' ? <LayoutBox type={props.info.correct} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}\n                {props.info.layout === 'simple' ? <LayoutSimple info={props.info} vis={props.vis} question={props.question} answers={props.answers} checkedMarks={props.checkedMarks} onChange={(ch) => { props.onChange(ch) }} />\n                    : <div style={{ display: 'none' }}></div>}    \n            </div>\n    );\n}\nexport default QuestionDisplay;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nfunction GetResults(props) {\n    // get test result of the test, sort it, display it\n    const db = firebase.firestore();\n    const [testRecords, setTestsRecords] = useState([]);\n    useEffect(() => {\n        let resultsData = []\n        const fetchData = async () => {\n\n            db.collection(\"results\").where(\"testId\", \"==\", props.testId).get().then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    resultsData.push(doc.data());\n                });\n                resultsData.sort(function (a, b) {\n                    if (b.result === a.result) { return b.time - a.time } else { return b.result - a.result }\n                });\n                setTestsRecords(resultsData);\n            });\n            // another way to get results\n            // setTestsRecords(data.docs.map(doc => ({ ...data()})).filter(doc => (doc.testId=== props.testId)));\n        };\n        fetchData();\n\n    }, [])\n\n    return (\n        <div style={{ width: '60vw', maxHeight: '20vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center', borderRadius: \"10px\", backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))' }}>\n            <table style={{ margin: 'auto' }} >\n                <tr>\n                    <th>Name</th>\n                    <th>Result</th>\n                    <th>Time Left</th>\n                </tr>\n                <tbody>\n                    {testRecords && testRecords.map((test, j) => {\n                        return (\n                            <tr key={j}>\n                                <td key={\"name\" + j}>{test.displayName}</td>\n                                <td key={\"result\" + j}>{test.result}</td>\n                                <td key={\"time\" + j}>{test.time}</td>\n                            </tr>\n\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default GetResults;","import React from \"react\";\r\nimport { FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon, WhatsappShareButton, WhatsappIcon, EmailShareButton, EmailIcon} from \"react-share\";\r\nfunction SharePost(props) {\r\n    // sets buttons to share test information on networks\r\n    var socialMediaButton = {\r\n        \"&:hover > svg\": {\r\n            height: \"50px !important\",\r\n            width: \"50px !important\",\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <FacebookShareButton\r\n                url={props.url}\r\n                quote={props.title+'\\n'+props.quote}\r\n                hashtag={props.hashtag}\r\n                className={socialMediaButton}\r\n            >\r\n                <FacebookIcon size={36} round={true}/>\r\n            </FacebookShareButton>\r\n            <TwitterShareButton\r\n                url={props.url}\r\n                title={props.title+'\\n'+props.quote}\r\n                hashtag={props.hashtag}\r\n                className={socialMediaButton}\r\n            >\r\n                <TwitterIcon size={36} round={true}/>\r\n            </TwitterShareButton>\r\n            <WhatsappShareButton\r\n                url={props.url}\r\n                title={props.title+'\\n'+props.quote}\r\n                separator=\":: \"\r\n                className={socialMediaButton}\r\n            >\r\n                <WhatsappIcon size={36} round={true}/>\r\n            </WhatsappShareButton>\r\n\r\n            <EmailShareButton\r\n                url={props.url}\r\n                subject={props.title}\r\n                body={props.quote+'\\n'}\r\n                media={props.image}\r\n                className={socialMediaButton}>\r\n                <EmailIcon size={36} round={true} />\r\n            </EmailShareButton>\r\n        </div>\r\n    )\r\n}\r\nexport default SharePost;","import React, { useState, useRef } from 'react';\nimport firebase from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport GetResults from \"../getResults\";\nimport SharePost from '../SharePost';\nconst ResultsDisplay = props => {\n    // component to display results of the test and top results of other users\n    const { currentUser } = useAuth()\n    const [testeeName, setTesteeName] = useState(currentUser ? currentUser.displayName : \"\");\n    const testeeId = useRef(currentUser ? currentUser.uid : \"\");\n    function handleSave() {\n        // function to save results in the database\n        const db = firebase.firestore();\n        db.collection(\"results\").add({\n            testId: props.testId,\n            displayName: testeeName,\n            userId: testeeId.current,\n            result: props.rate,\n            time: timeInSeconds(props.time)\n        }).then(result => { handleDont() })\n            .catch(e => { console.log('fail to record result') })\n\n    }\n    function handleDont() {\n        // do not save results and reload\n        window.location.assign(process.env.PUBLIC_URL + '/#/redirect');\n        console.log(\"redirect to /\");\n    }\n    function timeInSeconds(t) {\n        // get amount of time left in seconds\n        let time = t.split(':');\n        return parseInt(time[0]) * 3600 + parseInt(time[1]) * 60 + parseInt(time[2])\n    }\n    return (\n\n        <div style={{\n            display: 'flex', flexWrap: 'wrap', width: '100%',marginTop:'15%', alignContent: 'center', justifyContent: 'center', color: 'black', textShadow: '1px 1px #f5d142',\n            backgroundImage: 'linear-gradient(90deg, transparent 0%, transparent 8%,rgba(90, 90, 90,0.05) 8%, rgba(90, 90, 90,0.05) 21%,transparent 21%, transparent 100%),linear-gradient(45deg, transparent 0%, transparent 23%,rgba(90, 90, 90,0.05) 23%, rgba(90, 90, 90,0.05) 37%,transparent 37%, transparent 100%),linear-gradient(0deg, transparent 0%, transparent 37%,rgba(90, 90, 90,0.05) 37%, rgba(90, 90, 90,0.05) 49%,transparent 49%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255))', backgroundSize: '100% 100%'\n        }}>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Top results</h3>}\n            {/* component that dislay results of others */}\n            {props.testId.length > 0 && <GetResults testId={props.testId} />}\n            <h3 style={{ width: '100%', textAlign: 'center' }}>You have {props.rate}% {timeInSeconds(props.time)}sec left</h3>\n            <div style={{ width: '60vw', maxHeight: '20vh', overflow: 'auto', textAlign: 'center', justifyContent: 'center', borderRadius: \"10px\" }}>\n                <table style={{ margin: 'auto' }} >\n                    <tr>\n                        <th>Question</th>\n                        <th>Result</th>\n                    </tr>\n\n                    {props.res.map((res, j) => {\n                        return (\n                            <tr key={\"n\" + j}>\n                                <td key={\"num\" + j} >{j + 1}</td>\n                                <td key={\"correct\" + j}>{res ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            </div>\n            {props.testId.length > 0 && <h3 style={{ width: '100%', textAlign: 'center' }}>Would you like to save results?</h3>}\n\n            {testeeId.current.length <= 0 && <label className='headerStyle' style={{ width: '100%', textAlign: 'center' }}  >Enter your display Name. You are not in our database\n                    <input id=\"testName\" style={{ marginLeft: '10px' }} onChange={e => setTesteeName(e.target.value)} />\n            </label>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleSave(e)}>Yes, Please do!</button>}\n            {props.testId.length > 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>No, Thank you!</button>}\n            <div style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\n                {props.testId.length <= 0 && <button className=\"testNav\" style={{ margin: \"5px\" }} onClick={e => handleDont(e)}>Come Back!</button>}\n            </div>\n            {props.testId.length > 0 && <>\n                <h3 style={{ width: '100%', textAlign: 'center' }}>To share results click below</h3>\n                <SharePost title={`I just complete the ${props.testName} at Quiz Land site`} url={'https://sbolotnikov.github.io/test-editor/#/taketest/' + props.testId} quote={`I got ${props.rate}% correct with ${timeInSeconds(props.time)} seconds left. \\n Could you beat me? \\n Click on the link below. Good luck! \\n`}\n                    hashtag={'#QuizLand '} image={process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\"} description={'My score was ... And ... seconds left. Could you beat me?'} />\n            </>\n            }\n\n\n        </div>\n    );\n}\nexport default ResultsDisplay;","import React, { useEffect, useState } from 'react';\nimport TestNav from '../testNav';\nimport QuestionDisplay from '../QuestionDisplay';\nimport ResultsDisplay from '../ResultsDisplay';\nimport \"./style.css\";\n\nfunction TestRun(props) {\n  // main test running component. It get the test, generate test, displays navigation(TestNav) and individual questions(QuestionDisplay), and results(ResultsDisplay) in the end, using specific components \n  var quizDuration = [parseInt(props.test.main.hours), parseInt(props.test.main.minutes), parseInt(props.test.main.seconds)];\n  var testBackground = props.test.main.background;\n  var quizMain = props.test.test;\n  var test = [];\n  var choiceSet = [];\n  const [displayQ, setDisplayQ] = useState(0);\n  const [resultTime, setResultTime] = useState('');\n  const [choices, setChoices] = useState([]);\n  const [results, setResults] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [visible, setVisible] = useState(0);\n  const [testGenerated, setTestGenerated] = useState('');\n  function randomizer(arr) {\n//  taking question array and randomize the order of options inside\n    let testArray = [];\n    let answerCount = arr.length;\n    let positionN = 0;\n    for (let i = 0; i < answerCount; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n\n    }\n    return testArray\n  }\n\n  function randomChoice(arr, n) {\n    // choosing n random positions from array\n\n    let testArray = [];\n    let positionN = 0;\n    for (let i = 0; i < n; i++) {\n      positionN = Math.floor(Math.random() * arr.length)\n      testArray.push(arr[positionN]);\n      arr.splice(positionN, 1);\n    }\n    return testArray\n  }\n  function handleChoices(ch) {\n    // saving user responses to specific question to answers array\n    let localChoices = choices;\n    localChoices.splice(displayQ, 1, ch);\n    console.log(localChoices);\n    setChoices(localChoices);\n\n  }\n  function handleChangeQuestion(q) {\n    // setting another question\n    if (q > 0) { setDisplayQ(q - 1) }\n    else {\n      setDisplayQ(q);\n      setVisible(1);\n\n    }\n  }\n  function correctAnswers() {\n    // setting the array of correct answers to specific generated test\n    let arr = [];\n    let arrSmall = [];\n    for (let i = 0; i < testGenerated.length; i++) {\n      arrSmall = [];\n      for (let j = 0; j < testGenerated[i].answers.length; j++) {\n        if (testGenerated[i].answers[j].choice === true) arrSmall.push(j)\n      }\n      arr.push(arrSmall)\n    }\n    return arr\n  }\n  function handleQuizEnd(t) {\n    // finishing quiz by compare user choices with array of correct answers, getting percentage of the right answers and time left and setting the state with these parameters\n    let arr = [];\n    let n = 0;\n    console.log(t);\n    let correctArr = correctAnswers();\n    setVisible(0);\n    for (let i = 0; i < correctArr.length; i++) {\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i]) ? arr.push(true) : arr.push(false);\n      if (arr[i] === true) n += 1\n    }\n    console.log(((n / correctArr.length * 100).toFixed(2)).toString());\n    setRating(((n / correctArr.length * 100).toFixed(2)));\n    setResults(arr);\n    setResultTime(t);\n    console.log(results)\n  }\n\n  useEffect(() => {\n    // gererating the random answers array for the test and randomize their positions. Generate test before it send to display and saving it to state\n    console.log(props.test.id)\n    let answersSet = [];\n    for (let i = 0; i < quizMain.length; i++) {\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].info.correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].info.positions - quizMain[i].info.correct));\n      answersSet = randomizer(answersSet);\n\n      test.push({\n        \"info\": quizMain[i].info,\n        \"question\": quizMain[i].question,\n        \"answers\": answersSet,\n      })\n      choiceSet.splice(0, 0, [])\n\n    }\n    setChoices(choiceSet);\n    setTestGenerated(test);\n  }, []);\n useEffect(()=>{\n  //  if results are finalise displays main navigation bar, otherwise hide it\n  (results.length > 0) ? document.querySelector(\"nav.navbar\").style.display = 'flex' :document.querySelector(\"nav.navbar\").style.display = 'none';\n },[results]);\n\n\n  return (\n    <>\n      {results.length > 0 && <ResultsDisplay res={results} rate={rating} time={resultTime} background={testBackground} testName={props.test.main.name} testId={props.local?\"\":props.test.id} />}\n      {testGenerated && results.length <= 0 && \n      <div  style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '10%' }}>\n      <TestNav  qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => { handleQuizEnd(t) }} onChange={(q) => { handleChangeQuestion(q) }} />\n      </div>\n      }\n      {testGenerated && results.length <= 0 && <QuestionDisplay background={testBackground} gradient={props.test.main.gradient} status={\"test\"}  info={testGenerated[displayQ].info} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch) }} />}\n    </>\n  )\n}\n\nexport default TestRun;","import React, { useEffect, useState } from \"react\"\nimport firebase from \"../firebase\";\nimport { useParams } from 'react-router-dom'\nimport TestRun from './TestRun'\nexport default function DirectTestPage() {\n  // page that run test by id. It gets test from the db and runs test\n  const [test, setTest] = useState({});\n  const [loading, setLoading] = useState(false)\n  const db = firebase.firestore();\n  let { id } = useParams();\n  useEffect(() => {\n    db.collection(\"tests\").doc(id).get().then((querySnapshot) => {\n      setTest({ ...querySnapshot.data(), id: id });\n      setLoading(true);\n    })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [])\n  return (\n    <>\n      {loading && <TestRun test={test} local={false} />}\n    </>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport  \"./Nav.scss\";\nfunction Nav(props) {\n    // main Nav\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\n    const { currentUser } = useAuth();\n    const [imgDisplay, setImgDisplay] = useState('');\n    \n    function handleNavCollapse() {\n        setIsNavCollapsed(!isNavCollapsed)\n    }\n    useEffect(() => {\n        // based on the user it set the profile picture\n        let imgLink =  process.env.PUBLIC_URL + \"/icons/defaultUser.svg\"\n        if (currentUser) {currentUser.photoURL>\"\" ? setImgDisplay(currentUser.photoURL) : setImgDisplay(imgLink);}\n        else{\n            setImgDisplay(imgLink)\n        }\n        \n    }, [currentUser]);\n    useEffect(()=>{\n        if(window.innerWidth<1000){\n        if (isNavCollapsed){\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"block\";\n        }\n    }\n\n    },[isNavCollapsed]);\n    useEffect(()=>{\n        if (window.innerWidth>=1000){\n            document.querySelector(\"#navbarNav\").style.display=\"flex\";\n            document.querySelector(\"#navbarNav\").style.justifyContent=\"center\";\n            document.querySelector(\"#navbarNav\").style.width=\"83%\";\n        }\n        else{\n            document.querySelector(\"#navbarNav\").style.display=\"none\";\n        }\n       \n\n    },[window.innerWidth]);\n\n    return (\n        <nav className=\"navbar\" >\n            \n            {window.innerWidth<1000 ? <Link to=\"/dashboard\"><img className=\"member-photo\" src={imgDisplay} alt=\"avatar\"/></Link>\n             :<Link to=\"/\" className=\"navHeader\"> <img src={ process.env.PUBLIC_URL+\"/icons/logoName.svg\"} alt=\"close\" style={{width:'1.2em',height:'1.5em'}}/></Link> }\n\t\t\t{window.innerWidth<1000 ? <Link to=\"/\" className=\"navHeader\"> \n            Quiz Land</Link> : null}\n            {window.innerWidth<1000 ? <span id=\"navbar-toggler\"  onClick={handleNavCollapse}>\n                <div style={{ width: '1em', height: '1em',float:'center' }}>\n                   {isNavCollapsed ? \n                     <img src={ process.env.PUBLIC_URL+\"/icons/burger.svg\"} alt=\"open\" /> :\n                    <img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" />}\n                </div>\n            </span>: null}\n            \n                <ul id=\"navbarNav\">\n\n\n                   {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/login\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Log In\n                        </Link>\n\n                    </li>}\n                    {!currentUser && <li className=\"nav-item\">\n                        <Link to=\"/signup\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Sign Up\n                    </Link>\n\n                    </li>}\n\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Take tests\n                    </Link>\n                    </li>\n                   {  currentUser && <li className=\"nav-item\">\n                        <Link to=\"/create\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            Manage tests\n                    </Link>\n                    </li>}\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\" onClick={event => handleNavCollapse()}>\n                            About\n                    </Link>\n                    </li>\n                    {  currentUser && <li className=\"nav-item\">\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={event =>  handleNavCollapse()} >\n                            Logout\n                    </Link>\n                    </li>}\n                </ul>\n            \n\n            {window.innerWidth<1000 ? null: <Link to=\"/dashboard\">\n               <img className=\"member-photo\"  src={imgDisplay} alt=\"member avatar\"/>\n            </Link>}\n        </nav>\n    );\n}\n\nexport default Nav;","import React, { Fragment, useEffect } from 'react';\nimport \"./style.scss\";\nconst ChooseCategory = props => {\n// component getting the chose of single and multiple choice\n\n    useEffect(() => {\n        // Selecting chosen categories on start\n        for (let i = 0; i <props.answers.length; i++) {\n            document.querySelector(\"#category_\" + i).checked = false;\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#category_\" + i).checked = true;\n        }\n        console.log(props.answers)\n    },[]);\n    function checkingMulti(e) {\n        // on click if it is a single choice it remove previously marked category and mark new choice\n        if (props.type === 1) {\n            for (let i = 0; i < props.answers.length; i++) {\n                document.querySelector(\"#category_\" + i).checked = false;\n\n            }\n            document.querySelector(\"#\" + e.target.id).checked = true;\n        }\n        let choice = [];\n        // then it gets an array of choosen categories and thru props.onChange push it up to parent\n        for (let i = 0; i < props.answers.length; i++) {\n            if (document.querySelector(\"#category_\" + i).checked === true) {\n                choice.push(i);\n            }\n        }\n        props.onChange(choice);\n    }\n\n    return (\n        <Fragment>\n                <section className=\"categoriesSection\" >\n                    {props.answers.map((answerOption, j) => {\n                        return (\n                            <label className=\"option_item\" key={\"labelCat\" + j} style={{width:'47%',maxHeight:'150px', maxWidth:'180px', margin:'5px'}}>\n                                <input type=\"checkbox\" className=\"checkOut\" key={\"inputCat\" + j} id={\"category_\" + j} value={j} onChange={e => checkingMulti(e)} />\n                                <div className=\"option_inner\" style={{ backgroundImage: `url(${answerOption.img})`, backgroundRepeat: 'no-repeat', backgroundSize: '25% 25%',backgroundPosition: 'right top' }}>\n                                    <div className=\"tickmark\" key={\"divCat\" + j}> </div>\n                                    <div className=\"name2\" key={\"div2Cat\" + j} style={{width:\"13ch\"}}>{answerOption.text}</div>\n                                </div>\n                            </label>\n                        )\n                    })}\n                </section>\n        </Fragment>\n    );\n}\nexport default ChooseCategory;","import React from \"react\"\r\nexport default function TestPopupInfo(props) {\r\n    // display information about test in modal format\r\n    return (\r\n        <div style={{ width: '100vw', height: '100vh', position: 'absolute', top: window.pageYOffset, left: 0, display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n            <div className='alertContainer'>\r\n                <h3 className=\"alertItemStyle\"><strong>{props.test.name}</strong></h3>\r\n                <p className=\"alertItemStyle\"><strong>Author:</strong> {props.test.author}</p>\r\n                <p className=\"alertItemStyle\"><strong>Description:</strong> {props.test.description}</p>\r\n                <p className=\"alertItemStyle\"><strong>Question amount:</strong> {props.test.questionsTotal}</p>\r\n                <button className=\"alertItemStyle\" style={{ backgroundColor: '#d1ecf1', color: '#0c5460' }} onClick={e => {\r\n                    console.log('click'); props.onRes('')\r\n                }}>\r\n                    Close\r\n        </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport ChooseCategory from \"../components/ChooseCategory\";\nimport TestPopupInfo from \"../components/TestPopupInfo\"\nimport { Link} from \"react-router-dom\"\nfunction GetTests(props) {\n    // get test information, display it, and send it to parent (makeTest or testPage)\n    const db = firebase.firestore();\n    const { currentUser } = useAuth();\n    const [testRecords, setTestsRecords] = useState([]);\n    const [testRecordsDisplay, setTestsRecordsDisplay] = useState([]);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [revealInfo, setRevealInfo] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [categories, setCategories] = useState([]);\n    const [categoriesLayout, setCategoriesLayout] = useState([]);\n    const [checked, setChecked] = useState([]);\n    const [testFromDB, setTestFromDB] = useState({});\n    const [checkEditLocalTestVisible, setCheckEditLocalTestVisible] = useState(false);\n    const [testInfo, setTestInfo] = useState({});\n    const onReturn = (decision1) => {\n        // if Delete button is clicked in makeTest it delete test. If Proceed button clicked it send test to apropreate parent \n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('tests').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    props.reloadNeeded(true);\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n        if (decision1 === \"Proceed\") {\n            props.onChange(testFromDB);\n            props.onLocal(false);\n        }\n    }\n    function handleDelete(e) {\n        // handles delete button click and confirm by revealing the AlertMenu\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = testRecords.map(function (x) { return x.id; }).indexOf(recId);\n        let objFound = testRecords[elementPos];\n        setAlertStyle({\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete \\n ${objFound.main.name} \\n by  \\n ${objFound.main.authorName}`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n        setRevealAlert(true)\n    }\n    function handleHover(t) {\n        // on hover over test name it gather info about the test and reveal modal like panel with test info \n        let test = testRecords.filter(item => item.id === t.target.getAttribute(\"value\"))[0];\n        setTestInfo({\n            author: test.main.authorName,\n            description: test.main.description,\n            name: test.main.name,\n            questionsTotal: test.test.length,\n            positionY: t.clientY + 5\n        })\n        setRevealInfo(true);\n\n    }\n    function handleClick(test) {\n        // on clicking Edit test button it reveals the AlertMenu to confirm that information was saved and set test object \n        if (props.forPage === 'create') {\n            setAlertStyle({\n                variantHead: \"danger\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n            setRevealAlert(true);\n            setTestFromDB(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0])\n        } else { props.onChange(testRecords.filter(item => item.id === test.target.getAttribute(\"value\"))[0]) }\n    }\n    const fetchData = async () => {\n        // gather test information from db, sort it, set state to display it\n        let arrTemp = [];\n        const data = await db.collection(\"tests\").get();\n        if (props.forPage === 'create')\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.editability === 'Yes'));\n        else\n            arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id })).filter(doc => (doc.main.author === props.user) || (doc.main.visibility === 'Public'));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.main.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.main.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setTestsRecords(arrTemp);\n        setTestsRecordsDisplay(arrTemp);\n    };\n    const fetchCategories = async () => {\n// getting categories information, sorting it and setting it in the state to show it\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n\n        });\n        setCategories(arrTemp);\n        arrTemp = arrTemp.map(option => { return ({ 'text': option.value, img: process.env.PUBLIC_URL + \"/icons/QuizLogo.svg\" }) });\n        console.log(arrTemp)\n        setCategoriesLayout(arrTemp);\n    };\n    function getChoosenTests(ch) {   \n        // set selected categories state to filter test results accordingly to choosen categoriesn        setChecked(ch);\n        (ch.length > 0) ? setSelectedOption(categories.filter((n, j) => ch.indexOf(j) > -1)) : setSelectedOption(categories)\n    }\n    function readSingleFile(evt) {\n        // getting test information for Editing from local file and confirming that previous info is saved by displaying AlertMenu \n        var f = evt.target.files[0];\n        if (f) {\n            var r = new FileReader();\n            r.onload = function (e) {\n                setTestFromDB(JSON.parse(e.target.result));\n                if (props.forPage === 'create') {\n                    setAlertStyle({\n                        variantHead: \"danger\",\n                        heading: \"Warning\",\n                        text: `Did you safe your changes? Your current changes will be lost. Proceed?`,\n                        color1: \"danger\",\n                        button1: \"Proceed\",\n                        color2: \"secondary\",\n                        button2: \"Cancel\"\n                    });\n                    setRevealAlert(true);\n                } else {\n                    props.onChange(JSON.parse(e.target.result));\n                    props.onLocal(true);\n                }\n                // setLocalTest(true)\n            }\n            r.readAsText(f);\n\n        } else {\n            alert(\"Failed to load file\");\n        }\n    }\n    useEffect(() => {\n        // fetching original data\n        fetchCategories();\n        fetchData();\n    }, []);\n    useEffect(() => {\n        // fetching data and displaying tests accordingly selected categories\n        let recordSet = testRecords;\n        let chosenRec = [];\n        console.log(selectedOption);\n        if (selectedOption) {\n            for (let i = 0; i < selectedOption.length; i++) {\n                let tempArr = [];\n                for (let j = 0; j < recordSet.length; j++) {\n                    if (recordSet[j].main.categories.findIndex(function (n) { return n.value === selectedOption[i].value; }) > -1) tempArr.push(recordSet[j])\n                }\n                chosenRec = chosenRec.concat(tempArr);\n            }\n        }\n        // exclude duplicates in Array  \n        chosenRec = chosenRec.filter((c, index) => {\n            return chosenRec.map(x => x.id).indexOf(c.id) === index;\n        });\n        setTestsRecordsDisplay(chosenRec);\n    }, [selectedOption])\n    return (\n        <div style={{ width: '100%', maxWidth: \"600px\", height: \"52vh\", margin: '6em 0 2em 0' }}>\n            {revealInfo && <TestPopupInfo test={testInfo} onRes={e => {\n                setRevealInfo(false); console.log('close')\n            }\n            } />}\n            {(props.forPage === 'test') && (currentUser) && <button className=\"testNav\" style={{ width: '100%', margin:0}} onClick={e=>{ window.location.assign(process.env.PUBLIC_URL + '/#/create'); }}>\n                Create New test\n            </button>}\n            <p className=\"testNav\" style={{backgroundColor:'transparent', textAlign:'center'}}> CHOOSE TEST TO {(props.forPage === 'test')? 'TAKE':'MANAGE'}</p>\n            {categoriesLayout &&\n                <ChooseCategory type={categoriesLayout.length} answers={categoriesLayout} checkedMarks={checked} onChange={(ch) => { getChoosenTests(ch) }} />\n            }\n            <p className=\"testNav\" style={{backgroundColor:'transparent', textAlign:'center'}}>DISCOVER TESTS</p>\n            {testRecordsDisplay && <div style={{ height: '35%', overflow: 'auto', margin: '0' }}>\n            \n                <table style={{ width: '100%' }} >\n                   \n                    <tbody>\n                        {testRecordsDisplay.map((test, j) => {\n                            return (\n                                <tr key={\"divTests\" + j} > \n                                        {(props.forPage === 'create') &&\n                                           <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: '#721c24', margin: '4%', display: 'flex', flexDirection: \"column\", alignItems: 'center' }} key={\"eraseBtnTests\" + j} value={test.id} onClick={e => handleDelete(e)}>Del <img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(.9vw,10px)', height: 'max(.9vw,10px)' }} /></button></td>\n                                        }                                  \n                                    <td style={{ backgroundColor: 'white', borderRadius: '5px' }}><div key={\"textTests\" + j} className='testText' value={test.id} onClick={e => handleHover(e)} style={{ cursor: \"pointer\", whiteSpace: 'wrap', textAlign: 'center', border: 0, width: \"100%\" }}>{test.main.name} <span value={test.id} style={{ fontStyle: 'oblique', color: '#554FA7' }}>@{test.main.authorName}</span></div></td>\n                                    <td><button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', padding: '4%', backgroundColor: 'white', color: '#554FA7'}} key={\"playBtnTests\" + j} value={test.id} onClick={e => handleClick(e)}><img src={(props.forPage === 'create') ? process.env.PUBLIC_URL + \"/icons/EditIcon.svg\" : process.env.PUBLIC_URL + \"/icons/Play.svg\"} value={test.id} alt={(props.forPage === 'create') ? \"Edit\" : \"Play\"} style={{ width: 'max(3.5vw,25px)', height: 'max(3.5vw,25px)' }} /></button></td>\n                                    {/* button text if needed <strong>{(props.forPage === 'create') ? 'Edit' : 'Play'}</strong> */}\n                                </tr>\n                            )\n                        }\n                        )}\n                    </tbody>\n                </table>\n            </div>}\n            {(props.forPage === 'create') && <label >\n                <input type=\"checkbox\" id=\"checkEditLocalTest\" style={{ margin: '5% 2% 0 2%' }} onChange={e => setCheckEditLocalTestVisible(document.querySelector(\"#checkEditLocalTest\").checked)} />\n              Load local test from your disk\n              \n            { checkEditLocalTestVisible && <input type=\"file\" id=\"fileinput\" onChange={e => readSingleFile(e)} />}\n            </label>}\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {(props.forPage === 'test') && <div className=\"divStyle\">\n            Want a demo? <Link className=\"links\" to=\"/taketest/RtqxyubO57LToxbaOzpj\">Take Demo Test</Link>\n          </div>}\n        </div>\n    );\n}\nexport default GetTests;","import React, { useState } from 'react';\nimport TestRun from '../../components/TestRun';\nimport GetTests from '../../components/getTests';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Footer from \"../../components/Footer\";\nimport \"./style.css\";\n\n\nfunction ToRenderEverything() {\n// main page that runs tests \n  const [testLoad, setTestLoad] = useState(false);\n  const [localTest, setLocalTest] = useState(false);\n  const { currentUser } = useAuth()\n\n  function getTestfromDB(n) {\n    // sets test to run taken from the GetTests component. Test run by the TestRun component\n    console.log(n)\n    setTestLoad(n);\n  }\n  return (\n    <>\n    <div className=\"testContainer\">\n      {!testLoad && <GetTests user={currentUser ? currentUser.uid : \"\"} forPage={'test'} onLocal={l => setLocalTest(l)} onChange={n => getTestfromDB(n)} /> }\n      {testLoad && <TestRun test={testLoad} local={localTest} />}\n      {!testLoad && <Footer />}\n    </div>\n    </>\n  )\n}\n\nexport default ToRenderEverything;","import React, {useState, useEffect } from 'react';\nimport Cloudinary from './Cloudinary';\nfunction GetText(props) {\n    // component collecting answer option and image link for it, passing it to parent(GetAnswers)\n    const [answerText, setAnswerText] = useState(props.answer.text);\n    const [imgLink, setImgLink] = useState(props.answer.img);\n    const [checkBox, setCheckBox] = useState();\n    const getImgUrl = (url) => {\n        // on change url\n        document.querySelector(\"#mainImg\").value = url;\n        setImgLink(url);\n        sendBack(answerText, url);\n    }\n    function changeInput(e) {\n        // on change answer\n        setAnswerText(e.target.value)\n        sendBack(e.target.value, imgLink);\n    }\n    function changeImage(e) {\n        setImgLink(e.target.value);\n        sendBack(answerText, e.target.value);\n    }\n    function sendBack(a, b) {\n    // sending props back\n        let choice = {\n            text: a,\n            img: b,\n            num: props.num\n        };\n        props.onChange(choice);\n    }\n    useEffect(() => {\n        //  setting text and link for one answering option and updating on props change\n        setAnswerText(props.answer.text);\n        if (props.answer.img.length > 0) {\n            setCheckBox(true);\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=true\n            setImgLink(props.answer.img);\n        } else {\n            document.querySelector(\"#check_\"+props.num+props.cor).checked=false\n            setCheckBox(false);\n        }\n    }, [props.answer]);\n    return (\n            <div >\n                <textarea style={{ width: '100%', borderRadius: '.25rem', borderColor: 'lightgray' }} value={answerText} onChange={e => changeInput(e)} />\n                <label style={{ color: 'black', width: '100%' }}>\n                    <input type=\"checkbox\" id={\"check_\" + props.num+props.cor} onChange={e => setCheckBox(document.querySelector(\"#check_\"+props.num+props.cor).checked)} />\n                check to add image link</label>\n                {checkBox && <div >\n                    <input type=\"text\" style={{ width: '100%', opacity: checkBox, borderRadius: '.25rem', borderColor: 'lightgray' }} value={imgLink} onChange={e => changeImage(e)} />\n                    <Cloudinary style={{ width: \"200px\", objectFit: \"cover\", margin: \"10px\" }} getImgUrl={getImgUrl} />\n                    <img src={imgLink} style={{width:'19%'}} alt='thumbnail'/>\n                </div>}\n            </div>\n    );\n}\nexport default GetText;","import React, { useEffect, useState } from 'react';\nimport GetText from './GetText.js';\n\nfunction GetAnswers(props) {\n    // component that handles EDITing answer's options (right and wrong) for particular test receive info from child-component(GetText) and sending them up to parent(GetQuestion)\n    function handleNewText() {\n        // create new answering option and send it up to GetAnswers\n        let emptyNew = { text: '', img: '', choice: props.correct };\n        props.onNew(emptyNew);\n    }\n    function handlePasteText(){\n        // pasting answer from localStorage and sending it up to GetAnswers\n        let pasteItem=JSON.parse(localStorage.getItem('answerCopy'));\n        if (pasteItem===null) return\n        pasteItem.choice=props.correct;\n        props.onNew(pasteItem);\n    }\n    function handleChangeText(t) {\n        // getting answers changes from GetText and send them up to GetAnswers\n        let localArr = props.answers;\n        if ((t.text === '') && (t.img === '')) {\n            localArr.splice(t.num, 1);\n        } else {\n            let answerRenew = { text: t.text, img: t.img, choice: props.correct }\n            localArr.splice(t.num, 1, answerRenew)\n        }\n        props.onChange(localArr);\n    }\n    function handleDelete(e) {\n// delete answer option\n        props.onDelete(e.target.value)\n    }\n    function handleCopy(e){\n        // Copy answer and send it up to GetAnswers\n        props.onCopy(e.target.value)\n    }\n    const [answers, setAnswers] = useState([]);\n    useEffect(() => {\n        // setting answering options from parent and updating on props change\n        setAnswers(props.answers);\n    }, [props.answers]);\n    return (\n        <div style={{display:\"flex\", alignItems:\"start\", justifyContent:\"start\", marginBottom:'4vh'}}>\n            <div style={{width:'85%' }}>\n                <div>\n                    {answers && answers.map((answerOption, j) => {\n                        return (\n                            <div key={props.correct?\"right\"+j:\"wrong\"+j} style={{ position: 'relative', margin: '5px' }}>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\",margin:0 }} key={props.correct?\"right_eraseBtn_\":\"wrong_eraseBtn_\" + j} value={j} onClick={e => handleDelete(e)}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/></button>\n                                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', float:\"right\", margin:0 }}  key={props.correct?\"right_copyBtn_\":\"wrong_copyBtn_\" + j} value={j} onClick={e => handleCopy(e)}>&#128209;Copy</button>\n                                <GetText key={props.correct?\"right_text\"+j:\"wrong_text\"+j} cor={props.correct?\"right\":\"wrong\"} num={j} answer={answerOption} onDelete={e => e.target.value} onNew={e => e.target.value} onChange={(t) => handleChangeText(t)} />         \n                            </div>\n                        )\n                    }\n                    )}\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handlePasteText() }}>&#128203;Paste</button>\n                    <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0 }} onClick={e => { handleNewText() }}>New &#10133;</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default GetAnswers;","import React, { Fragment, useState, useEffect } from 'react';\nimport GetAnswers from './GetAnswers.js';\nimport Cloudinary from './Cloudinary';\nfunction GetQuestion(props) {\n  // component that handles EDITing of the particular question of the test. It receive info from child-component(GetAnswers) and sending them up to parent(page/makeTest)  \n    var questionObj = {}\n\n    const [rights, setRights] = useState([]);\n    const [wrongs, setWrongs] = useState([]);\n    const getImgUrl = (url) => {\n        document.querySelector(\"#mainImg\").value = url;\n        props.onChange({ \"mainImg\": url })\n    }\n    // list available layouts\n    var layouts = [\"simple\", \"box\"];\n    useEffect(() => {\n        // fill/updating question depending on changes in parent\n        document.querySelector(\"#question\").value = props.q.question;\n        document.querySelector(\"#mainImg\").value = props.q.info.img;\n        document.querySelector(\"#positionsCount\").value = props.q.info.positions;\n        document.querySelector(\"#correctCount\").value = props.q.info.correct;\n        document.querySelector(\"#layout1\").value = props.q.info.layout;\n        setRights(props.q.rights);\n        setWrongs(props.q.wrongs);\n\n    }, [props.q]);\n    function handleReturnData(t, corr) {\n        // passing answers to the parent\n        if (corr) {\n            questionObj.rights = t;\n        } else {\n            questionObj.wrongs = t;\n        }\n        props.onChange(questionObj)\n    }\n    function handleCopyData(n, corr) {\n        // saving the answer to the localStorage to copy it\n        (corr) ? questionObj = props.q.rights[n] : questionObj = props.q.wrongs[n];\n        localStorage.setItem('answerCopy', JSON.stringify(questionObj));\n    }\n    function newRecord(e, corr) {\n        // setting new Record and send it to parent\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.push({ text: e.text, img: e.img, choice: true });\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.push({ text: e.text, img: e.img, choice: false });\n        }\n        props.onChange(questionObj)\n    }\n\n\n    function delRecord(n, corr) {\n        // delete one answer option\n        if (corr) {\n            questionObj = props.q.rights;\n            questionObj.splice(n, 1);\n        } else {\n            questionObj = props.q.wrongs;\n            questionObj.splice(n, 1);\n        }\n        props.onChange(questionObj)\n    }\n\n    return (\n        <Fragment>\n            <label className='headerStyle'>Enter your question\n            <textarea id=\"question\" onChange={e => { props.onChange({ \"question\": e.target.value }) }} />\n            </label>\n            <br/>\n            <label className='headerStyle'>Add your question main picture link (if you have one)\n            <input id=\"mainImg\" onChange={e => { props.onChange({ \"mainImg\": e.target.value }) }} />\n            </label>\n            <Cloudinary getImgUrl={getImgUrl} />\n            <label className='headerStyle'>Choose question layout\n                <select id=\"layout1\" onChange={e => { props.onChange({ \"layout1\": e.target.value }) }} >\n                    {layouts.map((option, i) => {\n                        return (\n                            <option value={option} key={'layout_option' + i}>{option}</option>\n                        )\n                    }\n                    )}\n                </select>\n             </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label>\n                        <input id=\"positionsCount\" type=\"number\" min={0} max={rights.length + wrongs.length}  onChange={e => { props.onChange({ \"positionsCount\": e.target.value }) }} />            \n                        How many positions would be displayed?(Maximum should be less then answers options)\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label>\n                        <input id=\"correctCount\" type=\"number\" min={0} max={rights.length}  onChange={e => { props.onChange({ \"correctCount\": e.target.value }) }} />           \n                        How many correct options should be selected?(Maximum should be less then correct answers options)\n                    </label>\n                </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel2'>\n                    <label className='headerStyle' style={{color:'green'}} ><strong>Enter text of the correct answers:</strong></label>\n                    {rights && <GetAnswers answers={rights} correct={true} onDelete={(n) => delRecord(n, 1)} onNew={(e) => newRecord(e, 1)} onChange={(t) => handleReturnData(t, 1)} onCopy={(t) => handleCopyData(t, 1)} />}\n                </section>\n                <section className='panel1'>\n                    <label className='headerStyle' style={{ color:'red'}} ><strong>Enter text of the wrong answers:</strong></label>\n                    {wrongs && <GetAnswers answers={wrongs} correct={false} onDelete={(n) => delRecord(n, 0)} onNew={(e) => newRecord(e, 0)} onChange={(t) => handleReturnData(t, 0)} onCopy={(t) => handleCopyData(t, 0)} />}\n                </section>\n            </div>\n        </Fragment >\n    )\n}\nexport default GetQuestion;","import React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nfunction TestCreateNav(props) {\n// component that displays navigation for the editing specipic question inside the test\n    const [qArr, setqArr] = useState('');\n    const [moveVis, setMoveVis] = useState(false);\n    useEffect(() => {\n        // display question number 1\n        document.getElementById('questionPage').value = 1;\n    }, []);\n    useEffect(() => {\n        // fill/update array of question numbers\n        let arr = [];\n        for (let i = 0; i < props.qNumber; i++) { arr.push(i + 1) };\n        setqArr(arr);\n    }, [props.qNumber]);\n    function questionNumberSet(n) {\n        // set current question based on pressing navigaton buttons and send result to parent\n        let questionNow = document.querySelector(\"#questionPage\");\n        if (Number.isInteger(n)) {\n\n            if (n === 1) {\n                if (questionNow.value === \"\") { questionNow.value = 1; }\n                else if (parseInt(questionNow.value) < props.qNumber) { questionNow.value = parseInt(questionNow.value) + 1 }\n                else questionNow.value = 1;\n            }\n            if (n === -1) {\n                if (questionNow.value === \"\") { questionNow.value = props.qNumber; }\n                else if (parseInt(questionNow.value) > 1) { questionNow.value -= 1 }\n                else questionNow.value = props.qNumber;\n            }\n        } else {\n            if (n === \"0\") {\n                let navButton = document.querySelectorAll(\".testNav\");\n                navButton.forEach(function (userItem) {\n                    userItem.classList.remove('invisible');\n                });\n                document.querySelector(\"#startNav\").classList.add('invisible');\n                questionNow.value = 1;\n            } else questionNow.value = n;\n        }\n        (n === \"0\") ? props.onChange(0) : props.onChange(parseInt(questionNow.value));\n    }\n    function deleteRec() {\n        // deletes current page number and switch to last existing ad send prop to delete to parent \n        props.onDel('');\n        let n = document.querySelector(\"#questionPage\");\n        let k = \"\"\n        if (parseInt(n.value) !== props.qNumber) {\n            k = n.value;\n            n.value = k;\n        } else {\n            k = n.value;\n            n.value = (parseInt(k) - 1).toString();\n        }\n    }\n    function visibilityMoveTo() {\n        moveVis ? document.querySelector(\"#moveSelect\").classList.remove('invisible') : document.querySelector(\"#moveSelect\").classList.add('invisible');\n        setMoveVis(!moveVis)\n    }\n    return (\n\n        <div className=\"navContainer\" style={{ marginTop: '2%' }} >\n            <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Question editing panel</strong></h3>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet('1') }}>&#9198;</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(-1) }}>&#9194;Back</button>\n            <input className=\"testNavLight text-center\" style={{width:'3ch'}} type=\"number\" id=\"questionPage\"  min=\"1\" max={props.qNumber.toString()} onClick={e => questionNumberSet(e.target.value)}></input>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(1) }}>&#9193;Next</button>\n            <button className=\"testNav\"\n                onClick={e => { questionNumberSet(props.qNumber.toString()) }}>&#9197;</button>\n            <button className=\"testNav\"\n                onClick={e => { props.onNew(''); document.querySelector(\"#questionPage\").value = (props.qNumber + 1).toString() }}>&#10133;Add</button>\n            <button className=\"testNav\"\n                onClick={e => { deleteRec() }}><img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(1.2vw,12px)',height:'max(1.2vw,12px)'}}/>Delete</button>\n            <button className=\"testNav\"\n            // sending response about copy \n                onClick={e => { e.preventDefault(); props.onCopy('') }}>&#128209;Copy</button>\n            <button className=\"testNav\"\n            // sending response on paste\n                onClick={e => { e.preventDefault(); props.onPaste(''); document.querySelector(\"#questionPage\").value = (parseInt(document.querySelector(\"#questionPage\").value) + 1).toString() }}>&#128203;Paste</button>\n            <button className=\"testNav\"\n            //  sending response on preview\n                onClick={e => { props.onShow('') }}>&#128240;Preview</button>\n            {(props.qNumber > 1) && <button className=\"testNav\"\n            // on click revealing the array of option to move your question to\n                onClick={e => { visibilityMoveTo() }}>&#128242;Move to</button>}\n            {(props.qNumber > 1) && qArr && <select id=\"moveSelect\" className=\"testNavLight text-center invisible\" onChange={e => {\n                props.onMove([parseInt(document.querySelector(\"#questionPage\").value) - 1, parseInt(e.target.value)]);\n                document.querySelector(\"#questionPage\").value = (parseInt(e.target.value) + 1).toString()\n            }}>\n                {qArr.map((option, i) => {\n                    return (<option key={i} value={i}>{qArr[i]}</option>)\n                }\n                )}\n            </select>}\n        </div>\n\n    );\n}\nexport default TestCreateNav;","import React, { useState, useEffect } from 'react';\nimport firebase from \"../firebase\";\nimport AlertMenu from './alertMenu';\nfunction GetGradient(props) {\n    // handles selection of background gradients in Editing test page and passing css value to the test\n    const db = firebase.firestore();\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({});\n    const [deleteRecId, setDeleteRecId] = useState(false);\n    const [gradients, setGradients] = useState([]);\n    const [newGradient, setNewGradient] = useState('');\n    const [newGradientName, setNewGradientName] = useState('');\n    const [addNewGradientVisible, setAddNewGradientVisible] = useState(false);\n\n    const onReturn = (decision1) => {\n        // if Delete button on AlertMenu pressed it deletes choosen gradient from db of the gradients\n        setRevealAlert(false);\n        if (decision1 === \"Delete\") {\n            db.collection('gradients').doc(deleteRecId).delete()\n                .then(res => {\n                    console.log('deleted');\n                    setGradients(gradients.filter(item => item.id !== deleteRecId))\n                })\n                .catch(error => {\n                    console.log(\"can not delete a record\");\n                })\n        }\n    }\n    function handleAdd(e) {\n        // adds name and css of the gradient to the db, then send signal to parent to reload to include new gradient to the list\n        db.collection('gradients').add({ name: newGradientName, value: newGradient })\n            .then(res => {\n                console.log('added');\n                props.reloadNeeded(true);\n            })\n            .catch(error => {\n                console.log(\"can not delete a record\");\n            })\n    }\n    function handleDelete(e) {\n        // confirming delete gradient by revealing the AlertMenu\n        let recId = e.target.getAttribute(\"value\")\n        setDeleteRecId(recId)\n        let elementPos = gradients.map(function (x) { return x.id; }).indexOf(recId);\n        setAlertStyle({\n            left: \"0\",\n            top: \"0\",\n            variantHead: \"danger\",\n            heading: \"Warning\",\n            text: `Do you really want to delete ${gradients[elementPos].name}?`,\n            color1: \"danger\",\n            button1: \"Delete\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n\n        setRevealAlert(true)\n    }\n    function handleClick(grad) {\n        // sending value of the choosen gradient to the parent\n        let gr = gradients.filter(item => item.id === grad.target.getAttribute(\"value\"));\n        props.onChange(gr[0].value);\n    }\n    const fetchGradients = async () => {\n// getting information of the different gradients from db\n        const data = await db.collection(\"gradients\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n        setGradients(arrTemp);\n    };\n    useEffect(() => {\n        fetchGradients();\n    }, []);\n\n    return (\n        <div style={{ width: '100%', paddingLeft:'10px' }}> Pre-set gradients: for more visit <a className=\"btn\" href=\"https://www.gradientmagic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gradient Magic</a>  \n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            {gradients && gradients.map((item, j) => {\n                return (\n                    <div style={{ display: \"flex\", margin: '5px' }} key={\"gradient_\"+j} >\n                        <div key={\"gradient_name\"+j}  style={{ cursor: \"pointer\", width: '50%', height: '50px', borderRadius:'10px', textShadow: \"4px 4px 16px white\", backgroundImage: item.value, backgroundSize: 'cover' }}\n                         value={item.id} onClick={e => handleClick(e)} >{item.name} </div>\n                        <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  key={\"gradient_del_button\"+j} value={item.id} onClick={e => handleDelete(e)}>Del<img src={ process.env.PUBLIC_URL+\"/icons/close.svg\"} alt=\"close\" style={{width:'max(.9vw,10px)',height:'max(.9vw,10px)'}}/></button>\n                    </div>\n                )\n            }\n            )}\n            <label>\n                <input type=\"checkbox\" id=\"checkNewGradientAdd\" onChange={e => setAddNewGradientVisible(document.querySelector(\"#checkNewGradientAdd\").checked)} />\n                Add new background gradient CSS to our database of pre-set styles\n            </label>\n            <div style={{ display: addNewGradientVisible ? \"block\" : \"none\", width: '100%' }}>\n                <label className='headerStyle'>Enter gradient CSS</label>\n                <textarea id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradient(e.target.value)} />\n                <label className='headerStyle'>Enter gradient name</label>\n                <input id=\"newBackgroundGradient\" style={{ width: '100%' }} onChange={e => setNewGradientName(e.target.value)} />\n                <button className=\"testNav\" style={{fontSize:'max(1.2vw,12px)', margin:0, whiteSpace: 'nowrap' }}  onClick={e => handleAdd(e)}>Add &#128504;</button>\n            </div>\n        </div>\n    );\n}\nexport default GetGradient;","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst customStyles = {\r\n    // using Select library allows to select multiple categories for the test\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        width: state.selectProps.width,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.selectProps.menuColor,\r\n        padding: 20,\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'red' : 'blue',\r\n        padding: 20,\r\n    }),\r\n    control:styles => ({ ...styles, backgroundColor: 'white' }),\r\n\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\n\r\nfunction CustomSelect({style,label,options,onChange,value,isMulti}){\r\n    return <div style={style}>\r\n        {label}\r\n        <Select styles={customStyles} isMulti={isMulti} closeMenuOnSelect={true} isSearchable  options={options} onChange={onChange} value={value}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;","import React, { useState, useEffect } from 'react';\nimport GetQuestion from '../../components/GetQuestion.js';\nimport TestCreateNav from '../../components/testCreateNav';\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport \"./style.css\";\nimport GetTests from '../../components/getTests.js';\nimport GetGradient from '../../components/getGradient.js';\nimport AlertMenu from '../../components/alertMenu';\nimport Cloudinary from '../../components/Cloudinary';\nimport QuestionDisplay from '../../components/QuestionDisplay';\nimport CustomSelect from '../../components/CustomSelect';\n\nvar demoArr = [];\nvar emptyQ = {\n    question: '',\n    rights: [{ text: '', img: '', choice: true }],\n    wrongs: [{ text: '', img: '', choice: false }],\n    info: {\n        positions: 2,\n        correct: 1,\n        layout: '',\n        img: ''\n    }\n}\nfunction ToRenderEverything() {\n    // main page that edit test\n    var defOptionArray = [];\n    const { currentUser } = useAuth();\n    const [testName, setTestName] = useState('');\n    const [testDescription, setTestDescription] = useState('');\n    const [testAuthor, setTestAuthor] = useState({ authorId: \"\", name: \"\", testId: \"\" });\n    const [visibility, setVisibility] = useState('');\n    const [editability, setEditability] = useState('');\n    const [displayQ, setDisplayQ] = useState(0);\n    const [testBackground, setTestBackground] = useState('');\n    const [testGradient, setTestGradient] = useState('');\n    const [testHH, setTestHH] = useState(0);\n    const [testMM, setTestMM] = useState(0);\n    const [testSS, setTestSS] = useState(0);\n    const [show, setShow] = useState(false);\n    const [revealAlert, setRevealAlert] = useState(false);\n    const [alertStyle, setAlertStyle] = useState({})\n    const [testArray, setTestArray] = useState([emptyQ]);\n    const [selectedOption, setSelectedOption] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [addTestGradientVisible, setAddTestGradientVisible] = useState(false);\n    const [addBackgroundVisible, setAddBackgroundVisible] = useState(false);\n    const db = firebase.firestore();\n    const fetchCategories = async () => {\n// getting categories from db\n        const data = await db.collection(\"categories\").get();\n        let arrTemp = data.docs.map(doc => ({ ...doc.data() }));\n        arrTemp.sort(function (a, b) {\n            var nameA = a.label.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.label.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n\n            // names must be equal\n            return 0;\n        });\n        setCategories(arrTemp);\n    };\n    const onReturn = (decision1, inputValue) => {\n        // onClick AlertMenu button\n        if (decision1 === \"Proceed\") {\n            // reload location\n            setRevealAlert(false);\n            reloadNeeded()\n        }\n        if (decision1 === \"Update\") {\n            // update test in db if successful it save current editing test in LocalStorage and reload location\n            setRevealAlert(false);\n            let text = {\n                main: {\n                    author: testAuthor.authorId,\n                    authorName: testAuthor.name,\n                    categories: selectedOption,\n                    name: testName,\n                    description: testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            db.collection('tests').doc(testAuthor.testId).set(text)\n                .then(result => {\n                    console.log(\"file updated\");\n                    reloadNeeded();\n                })\n                .catch(e => { console.log(\"file fail to updated\"); })\n        }\n        if (decision1 === \"Add\") {\n            // adds new category to db\n            console.log(inputValue)\n            if ((categories.map(function (x) { return x.value; }).indexOf(inputValue) === -1) && (inputValue.length > 5)) {\n                let newItem = { label: inputValue, value: inputValue }\n                db.collection('categories').add(newItem)\n                    .then(result => {\n                        console.log(\"categories updated\");\n                        setCategories([...categories, newItem]);\n                    })\n                    .catch(e => { console.log(\"categories fail to updated\"); })\n                setRevealAlert(false);\n            } else {\n                setAlertStyle({\n                    left: \"0\",\n                    top: \"0\",\n                    variantHead: \"danger\",\n                    heading: (inputValue.length > 5) ? \"Already Exist\" : \"Enter more symbols\",\n                    text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n                    inputField: 'true',\n                    inputValue: inputValue,\n                    color1: \"danger\",\n                    button1: \"Add\",\n                    color2: \"secondary\",\n                    button2: \"Cancel\"\n                });\n            }\n        }\n        if (decision1 === \"Cancel\") {\n            // if cancel button pressed just close AlertMenu\n            setRevealAlert(false);\n        }\n    }\n    const reloadNeeded = (a) => {\n        window.location.reload();\n    }\n    const getImgUrl = (url) => {\n        // set background image \n        document.querySelector(\"#background\").value = url;\n        setTestBackground(url);\n    }\n    const getGradientCSS = (n) => {\n        // set background gradient\n        document.querySelector(\"#backgroundGradient\").value = n;\n        setTestGradient(n)\n    }\n    function handleUpdateQuestion(q) {\n        // update of question display number\n        if (q > 0) { setDisplayQ(q - 1) }\n        else {\n            setDisplayQ(q);\n        }\n    }\n    function handleReturnQuestion(t) {\n        // update information of the test state\n        let arr = [...testArray];\n        if (Object.getOwnPropertyNames(t)[0] === \"question\") arr[displayQ].question = t.question;\n        if (Object.getOwnPropertyNames(t)[0] === \"mainImg\") arr[displayQ].info.img = t.mainImg;\n        if (Object.getOwnPropertyNames(t)[0] === \"layout1\") arr[displayQ].info.layout = t.layout1;\n        if (Object.getOwnPropertyNames(t)[0] === \"positionsCount\") arr[displayQ].info.positions = t.positionsCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"correctCount\") arr[displayQ].info.correct = t.correctCount;\n        if (Object.getOwnPropertyNames(t)[0] === \"rights\") arr[displayQ].rights = t.rights;\n        if (Object.getOwnPropertyNames(t)[0] === \"wrongs\") arr[displayQ].wrongs = t.wrongs;\n        setTestArray(arr);\n    }\n    function handleCopyQuestion(e) {\n        // saving to localStorage entire question object for further pasting it to new test (copy question)\n        localStorage.setItem('questionCopy', JSON.stringify(testArray[displayQ]));\n    }\n    function handleInsertQuestion(e) {\n        // insert question from localStorage to new test (paste question)\n        let arr = [];\n        let questCopy = JSON.parse(localStorage.getItem('questionCopy'));\n        if (questCopy === null) return\n        for (let i = 0; i < testArray.length; i++) {\n            if (i === displayQ + 1) arr.push(questCopy)\n            arr.push(testArray[i])\n        }\n        if (displayQ === testArray.length - 1) arr.push(questCopy)\n        setTestArray(arr)\n        setDisplayQ(displayQ + 1)\n    }\n    function handleAdd(e) {\n        // adding empty new question to state\n        setTestArray(oldArray => [...oldArray, {\n            question: '',\n            rights: [{ text: '', img: '', choice: true }],\n            wrongs: [{ text: '', img: '', choice: false }],\n            info: {\n                positions: 2,\n                correct: 1,\n                layout: '',\n                img: ''\n            }\n        }]);\n        setDisplayQ(testArray.length);\n        console.log(displayQ);\n    }\n    function handleShow() {\n        // show modal with current question displayed like it would be presented on the test\n        StopScroll();\n        let arr = testArray[displayQ].rights.slice(0, testArray[displayQ].info.correct);\n        demoArr = testArray[displayQ].wrongs.slice(0, testArray[displayQ].info.positions - testArray[displayQ].info.correct);\n        for (let i = 0; i < arr.length; i++) {\n            demoArr.push(arr[i]);\n        }\n        console.log(demoArr);\n        show ? setShow(false) : setShow(true)\n    }\n    function handleDelete() {\n// delete question frrom state\n        if (displayQ === testArray.length - 1) setDisplayQ(displayQ - 1)\n        setTestArray(testArray.filter(item => testArray.indexOf(item) !== displayQ));\n    }\n    function handleMove(t) {\n        // move question into new position inside the teast\n        if (t[0] !== t[1]) {\n            let arr = [];\n            let record1 = testArray[t[0]];\n            for (let i = 0; i < testArray.length; i++) {\n                if (i === t[1]) {\n                    if (t[1] > t[0]) {\n                        arr.push(testArray[i]);\n                        arr.push(record1);\n                    } else {\n                        arr.push(record1);\n                        arr.push(testArray[i]);\n                    }\n                }\n                else if (i !== t[0]) arr.push(testArray[i])\n            }\n            setTestArray(arr);\n            setDisplayQ(t[1])\n            console.log(record1, arr)\n        }\n    }\n    function getTestfromDB(n) {\n        // setting test to edit from outside sourse\n        console.log(n)\n        let newTest = n;\n        setTestArray(newTest.test);\n        setDisplayQ(0);\n        document.querySelector(\"#questionPage\").value = 1;\n        setTestAuthor({ authorId: newTest.main.author, name: newTest.main.authorName, testId: newTest.id });\n        defOptionArray = newTest.main.categories\n        setSelectedOption(defOptionArray);\n        document.querySelector(\"#testName\").value = newTest.main.name;\n        setTestName(newTest.main.name);\n        document.querySelector(\"#testDescription\").value = newTest.main.description;\n        setTestDescription(newTest.main.description);\n        document.querySelector(\"#visibility\").value = newTest.main.visibility;\n        setVisibility(newTest.main.visibility);\n        document.querySelector(\"#editability\").value = newTest.main.editability;\n        setEditability(newTest.main.editability);\n        document.querySelector(\"#background\").value = newTest.main.background;\n        setTestBackground(newTest.main.background);\n        document.querySelector(\"#backgroundGradient\").value = newTest.main.gradient;\n        setTestGradient(newTest.main.gradient);\n        document.querySelector(\"#hh\").value = newTest.main.hours;\n        setTestHH(newTest.main.hours);\n        document.querySelector(\"#mm\").value = newTest.main.minutes;\n        setTestMM(newTest.main.minutes);\n        document.querySelector(\"#ss\").value = newTest.main.seconds;\n        setTestSS(newTest.main.seconds);\n    }\n    function upload(e) {\n        // uploading test to db\n        let text = {\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description: testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        };\n        db.collection(\"tests\").add(text)\n            .then(result => {\n                console.log(\"file created in DB\");\n                reloadNeeded()\n            })\n            .catch(e => { console.log(\"no connectionto DB\"); })\n    }\n    function download(e) {\n        // download test to local hard drive\n        let text = JSON.stringify({\n            main: {\n                author: currentUser.uid,\n                authorName: currentUser.displayName,\n                categories: selectedOption,\n                name: testName,\n                description: testDescription,\n                visibility: visibility,\n                editability: editability,\n                background: testBackground,\n                gradient: testGradient,\n                hours: testHH,\n                minutes: testMM,\n                seconds: testSS\n            },\n            test: testArray\n        });\n        console.log(text)\n        let filename = \"test.txt\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n    function update(e) {\n        // update test inside db with new changes\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Warning\",\n            text: `You about to overwrite data in the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"}. Update?`,\n            color1: \"danger\",\n            button1: \"Update\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function handleNewCategory(e) {\n        // getting new category through AlertMenu\n        setRevealAlert(true);\n        setAlertStyle({\n            variantHead: \"warning\",\n            heading: \"Alert\",\n            text: `Please enter new unique Category name more then 5 symbols long and click Add`,\n            inputField: 'true',\n            inputValue: \"\",\n            color1: \"danger\",\n            button1: \"Add\",\n            color2: \"secondary\",\n            button2: \"Cancel\"\n        });\n    }\n    function startNewTest(e) {\n        // \n        if (testName > \"\") {\n            setRevealAlert(true);\n            setAlertStyle({\n                variantHead: \"info\",\n                heading: \"Warning\",\n                text: `Did you safe your changes? Your present changes to the test ${testName} by ${(testAuthor.name > \"\") ? testAuthor.name : \"You\"} will be lost. Proceed?`,\n                color1: \"danger\",\n                button1: \"Proceed\",\n                color2: \"secondary\",\n                button2: \"Cancel\"\n            });\n        }\n    }\n    const saveReload = (a) => {\n        // saves current test to localStorage in order to return back to it after reload location\n        if (a) {\n            let text = {\n                main: {\n                    author: currentUser.uid,\n                    authorName: currentUser.displayName,\n                    categories: selectedOption,\n                    name: testName,\n                    description: testDescription,\n                    visibility: visibility,\n                    editability: editability,\n                    background: testBackground,\n                    gradient: testGradient,\n                    hours: testHH,\n                    minutes: testMM,\n                    seconds: testSS\n                },\n                test: testArray\n            };\n            localStorage.setItem('testCopy', JSON.stringify(text));\n            reloadNeeded();\n        }\n    }\n    function StopScroll(){\n        // prevent scrolling\n        var x=window.scrollX;\n        var y=window.scrollY;\n        window.onscroll=function(){window.scrollTo(x, y);};    \n    }\n    useEffect(() => {\n        // reloading page with saved test\n        fetchCategories();\n        let pasteItem = JSON.parse(localStorage.getItem('testCopy'));\n        if ((pasteItem !== null)) getTestfromDB(pasteItem)\n        localStorage.removeItem('testCopy');\n    }, []);\n    return (\n        <div className=\"makerContainer\">\n            \n            <GetTests user={currentUser.uid} forPage={'create'} reloadNeeded={reloadNeeded} onLocal={n => { console.log(\"test loaded\") }} onChange={n => getTestfromDB(n)} />\n            {revealAlert && <AlertMenu onReturn={onReturn} styling={alertStyle} />}\n            <div className='navContainer' >\n                <h3 style={{ width: '100%', textAlign: \"center\", fontSize: '4vw', color: '#FFFFFF' }}><strong>Test editing panel</strong></h3>\n\n                <button className=\"testNav\" onClick={e => startNewTest(e)}>New &#10133;</button>\n                <button className=\"testNav\" onClick={e => download(e)}>Download &#128187;</button>\n                <button className=\"testNav\" onClick={e => upload(e)}>Upload to web &#128228;</button>\n                {testAuthor.testId > \"\" && <button className=\"testNav\" onClick={e => update(e)}>Update on web &#128257;</button>}\n\n            </div>\n            <label className='headerStyle' >Enter test Name (keep it under 30 symbols)\n                    <input id=\"testName\" onChange={e => setTestName(e.target.value)} />\n            </label>\n            <br />\n            <label className='headerStyle' >Enter test description\n                    <textarea id=\"testDescription\" onChange={e => setTestDescription(e.target.value)} />\n            </label>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <select id=\"visibility\" onChange={e => setVisibility(e.target.value)} >\n                            <option value=\"Private\">Private</option>\n                            <option value=\"Public\">Public</option>\n                        </select>\n                        Is this test Private or Public?\n                    </label>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <select id=\"editability\" onChange={e => setEditability(e.target.value)}>\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                        Would you allow others to edit content of test?\n                    </label>\n                </section>\n            </div>\n            {selectedOption &&\n                <CustomSelect isMulti={true} style={{ width: '300px', menuColor: 'red', marginLeft: '1.5%' }} value={selectedOption} onChange={setSelectedOption} options={categories} label=\"Choose a test categories\" />\n            }\n            <button className=\"testNav\" style={{ fontSize: 'max(1.2vw,12px)', margin: \"1% 0 0 1.5%\" }} onClick={e => handleNewCategory(e)}>Add New Category</button>\n            <div className=\"panel2 containerGrid\">\n                <section className='headerStyle' >Enter time (if there are no time limit enter 0 0 0):</section>\n                <section className='panel1 headerStyle' style={{ float: 'left' }}>\n                    <input id=\"hh\" type=\"number\" min={0} max={10} size={2} style={{ width: '5ch' }} onChange={e => setTestHH(e.target.value)} /> hh\n                    <input id=\"mm\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestMM(e.target.value)} /> mm\n                    <input id=\"ss\" type=\"number\" min={0} max={59} size={2} style={{ width: '5ch' }} onChange={e => setTestSS(e.target.value)} /> ss\n            </section>\n            </div>\n            <div className=\"containerGrid\">\n                <section className='panel1'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestBackground\" onChange={e => setAddBackgroundVisible(document.querySelector(\"#checkAddTestBackground\").checked)} />\n                        Add/change BACKGROUND to your test\n                </label>\n                    <div style={{ display: addBackgroundVisible ? \"block\" : \"none\", width: '98%' }}>\n\n                        <label className='headerStyle'>Enter test background image link or upload your image from computer\n                        <input id=\"background\" onChange={e => setTestBackground(e.target.value)} />\n                        </label>\n                        <Cloudinary getImgUrl={getImgUrl} />\n                    </div>\n                </section>\n                <section className='panel2'>\n                    <label >\n                        <input type=\"checkbox\" id=\"checkAddTestGradient\" onChange={e => setAddTestGradientVisible(document.querySelector(\"#checkAddTestGradient\").checked)} />\n                    Add/change background GRADIENT to your test\n               </label>\n                    <div style={{ display: addTestGradientVisible ? \"block\" : \"none\", width: '98%' }}>\n                        <label className='headerStyle' >Enter test background gradient CSS here\n                        <textarea id=\"backgroundGradient\" onChange={e => setTestGradient(e.target.value)} />\n                        </label>\n                        <GetGradient reloadNeeded={saveReload} onChange={n => getGradientCSS(n)} />\n                    </div>\n                </section>\n            </div>\n            <TestCreateNav qNumber={testArray.length ? testArray.length : 0} onNew={(e) => handleAdd(e)} onDel={(t) => handleDelete(t)} onMove={(t) => handleMove(t)}\n                onShow={(e) => handleShow(e)} onChange={(q) => { handleUpdateQuestion(q) }} onCopy={(q) => { handleCopyQuestion(q) }} onPaste={(q) => { handleInsertQuestion(q) }} />\n            {show &&\n                <div className=\"modalContainer\" style={{top: window.pageYOffset}}>\n                    <div className=\"closeTag\" style={{position:'absolute',top:'2%', right:'2%'}} onClick={(e) =>{ setShow(false); window.onscroll=function(){};}}><img src={process.env.PUBLIC_URL + \"/icons/close.svg\"} alt=\"close\" style={{ width: 'max(1.2vw,12px)', height: 'max(1.2vw,12px)' }} /></div>\n                    <QuestionDisplay style={{ pointerEvents: 'none' }} background={testBackground} gradient={testGradient} status={\"create\"} info={{ positions: testArray[displayQ].info.positions, correct: testArray[displayQ].info.correct, layout: testArray[displayQ].info.layout, img: testArray[displayQ].info.img }} vis={1} question={testArray[displayQ].question} answers={demoArr} checkedMarks={[]} onChange={(ch) => { }} />\n                </div>\n            }\n            {testArray[displayQ] &&\n                <GetQuestion q={testArray[displayQ]} onChange={(t) => handleReturnQuestion(t)} />\n            }\n          <div style={{width:'100%', marginLeft:\"10px\", pointerEvents:\"cursor\"}}>&copy; 2021 <Link to=\"/about\">Sergey Bolotnikov</Link> </div>  \n        </div >\n    )\n}\nexport default ToRenderEverything;\n","import React from \"react\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.scss';\n// Components\nimport Signup from \"./components/Signup\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport About from \"./components/About\"\nimport Logout from \"./components/Logout\"\nimport RedirectMain from \"./components/RedirectMain\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\nimport DirectTestPage from \"./components/DirectTestPage\"\nimport Nav from \"./components/Nav\"\n//Pages\nimport testPage from './pages/testPage';\nimport makeTest from './pages/makeTest';\n\nfunction App() {\n\n  return (\n    <Router>\n      <AuthProvider>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={testPage} />\n            <Route exact path=\"/redirect\" component={RedirectMain} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <PrivateRoute exact path=\"/create\" component={makeTest} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/taketest/:id\"><DirectTestPage /></Route>\n          </Switch>\n      </AuthProvider>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}